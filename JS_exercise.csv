id,exercise_title,exercise_info,JS_answer,HTML_answer,difficulty,level,label
1,JavaScript: Get the first element of an array,"Write a JavaScript function to check whether an 'input' is an array or not.

Test Data:

console.log(is_array('w3resource')); 

console.log(is_array([1, 2, 4, 0]));

false

true","var is_array = function(input) {
  if (toString.call(input) === ""[object Array]"")
    return true;
  return false;   
    };
console.log(is_array('w3resource'));
console.log(is_array([1, 2, 4, 0]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS Bin</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
2,JavaScript: Clone an array,"Write a JavaScript function to clone an array.
Test Data:

console.log(array_Clone([1, 2, 4, 0])); 

console.log(array_Clone([1, 2, [4, 0]]));

[1, 2, 4, 0] 

[1, 2, [4, 0]]","var array_Clone = function(arra1) {
 return arra1.slice(0);
    };
console.log(array_Clone([1, 2, 4, 0]));
console.log(array_Clone([1, 2, [4, 0]]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS array Clone</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
3,JavaScript: Get the first element of an array,"Write a JavaScript function to get the first element of an array. Passing a parameter 'n' will return the first 'n' elements of the array.
Test Data:

console.log(array_Clone([1, 2, 4, 0])); 

console.log(array_Clone([1, 2, [4, 0]]));

[1, 2, 4, 0] 

[1, 2, [4, 0]]","var first =  function(array, n) {
      if (array == null) 
      return void 0;
    if (n == null) 
      return array[0];
    if (n < 0)
      return [];
    return array.slice(0, n);
  };

console.log(first([7, 9, 0, -2]));
console.log(first([],3));
console.log(first([7, 9, 0, -2],3));
console.log(first([7, 9, 0, -2],6));
console.log(first([7, 9, 0, -2],-3));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Get the first element of an array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
4,JavaScript: Get the last element of an array,"Write a JavaScript function to get the last element of an array. Passing a parameter 'n' will return the last 'n' elements of the array.

<i>Test Data </i>:

console.log(last([7, 9, 0, -2])); 

console.log(last([7, 9, 0, -2],3)); 

console.log(last([7, 9, 0, -2],6));","var last =  function(array, n) {
  if (array == null) 
    return void 0;
  if (n == null) 
     return array[array.length - 1];
  return array.slice(Math.max(array.length - n, 0));  
  };

console.log(last([7, 9, 0, -2]));
console.log(last([7, 9, 0, -2],3));
console.log(last([7, 9, 0, -2],6));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Get last and last n elements of an array</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
5,JavaScript: Join all elements of an array into a string," Write a simple JavaScript program to join all elements of the following array into a string.
Expected Output:

""Red,Green,White,Black""

""Red,Green,White,Black""

""Red+Green+White+Black""","myColor = [""Red"", ""Green"", ""White"", ""Black""];
console.log(myColor.toString());
console.log(myColor.join());
console.log(myColor.join('+'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript Array Join</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
6,JavaScript: Insert dashes (-) between each two even digits of a specific number,Write a JavaScript program which accept a number as input and insert dashes (-) between each two even numbers. For example if you accept 025468 the output should be 0-254-6-8.,"const num=window.prompt();
const str = num.toString();
const result = [str[0]];
  
for(let x=1; x<str.length; x++)
  {
    if((str[x-1]%2 === 0)&&(str[x]%2 === 0))
     {
      result.push('-', str[x]);
     }
    else
     {
      result.push(str[x]);
     }
  }
console.log(result.join(''));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Insert dashes (-) between even numbers</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
7,JavaScript: Sort the items of an array,"Write a JavaScript program to sort the items of an array.

<i>Sample array</i> : var arr1 = [ 3, 8, 7, 6, 5, -4, 3, 2, 1 ];

<i>Sample Output</i> : -4,-3,1,2,3,5,6,7,8","var arr1=[-3,8,7,6,5,-4,3,2,1];
var arr2=[];
var min=arr1[0];
var pos;
var max=arr1[0];
for (i=0; i<arr1.length; i++)
{
        if (max<arr1[i]) max=arr1[i];
}

for (var i=0;i<arr1.length;i++)
{
        for (var j=0;j<arr1.length;j++)
        {
                if (arr1[j]!=""x"")
                {
                        if (min>arr1[j]) 
                        {
                                min=arr1[j];
                                pos=j;
                        }
                }
        }
        arr2[i]=min;
        arr1[pos]=""x"";
        min=max;
}
console.log(arr2);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript program to sort the items of an array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
8,JavaScript: Find the most frequent item of an array,"Write a JavaScript program to find the most frequent item of an array.

<i>Sample array</i>: var arr1=[3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];

<i>Sample Output</i>: a ( 5 times )","var arr1=[3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];
var mf = 1;
var m = 0;
var item;
for (var i=0; i<arr1.length; i++)
{
        for (var j=i; j<arr1.length; j++)
        {
                if (arr1[i] == arr1[j])
                 m++;
                if (mf<m)
                {
                  mf=m; 
                  item = arr1[i];
                }
        }
        m=0;
}
console.log(item+"" ( "" +mf +"" times ) "") ;
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript program to find the most frequent item of an array. - w3resource</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
10,JavaScript: Print the elements of an array,"Write a JavaScript program which prints the elements of the following array.

Note : Use nested for loops.

Sample array : var a = [[1, 2, 1, 24], [8, 11, 9, 4], [7, 0, 7, 27], [7, 4, 28, 14], [3, 10, 26, 7]];

<i>Sample Output</i> : 

""row 0"" 

"" 1"" 

"" 2"" 

"" 1""

"" 24""

""row 1"" 

------

------","// a sample 2-D array 
var a = [[1, 2, 1, 24], [8, 11, 9, 4], [7, 0, 7, 27], [7, 4, 28, 14], [3, 10, 26, 7]];
 
for (var i in a) 
{
   console.log(""row "" + i);
   for (var j in a[i]) 
     {
      console.log("" "" + a[i][j]);
     }
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Print 2-D array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
11,JavaScript: Find the sum of squares of a numeric vector,Write a JavaScript program to find the sum of squares of a numeric vector.,"function sum_sq(array) {
  var sum = 0, 
      i = array.length;
  while (i--) 
   sum += Math.pow(array[i], 2);
  return sum;
}
 
console.log(sum_sq([0,1,2,3,4])); 
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Sum of squares of a numeric vector</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
12,JavaScript: Compute the sum and product of an array of integers,Write a JavaScript program to compute the sum and product of an array of integers.,"var array = [1, 2, 3, 4, 5, 6],
    s = 0,
    p = 1,
    i;
for (i = 0; i < array.length; i += 1) 
   {
    s += array[i];
    p *= array[i];
    }
console.log('Sum : '+s + ' Product :  ' +p); 
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the sum and product of an array of integers</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
13,JavaScript: Add items in a blank array and display the items,"
Write a JavaScript program to add items in an blank array and display the items.



<i>Sample Screen</i>:

<img alt=""add elements in an blank array"" src=""https://www.w3resource.com/w3r_images/add-items-in-array.png"" style=""max-width:100%;display:block;height:auto;border: 2px solid silver;""/>


<strong>Sample Solution:</strong>

<strong>HTML Code:</strong>
<pre class=""line-numbers""><code class=""language-html"">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset=utf-8 /&gt;
&lt;title&gt;JS Bin&lt;/title&gt;
&lt;style&gt;
body {padding-top:50px} 
&lt;/style&gt; 
&lt;/head&gt;
&lt;body&gt;
&lt;input type=""text"" id=""text1""&gt;&lt;/input&gt;
&lt;input type=""button"" id=""button1"" value=""Add"" onclick=""add_element_to_array();""&gt;&lt;/input&gt;
&lt;input type=""button"" id=""button2"" value=""Display"" onclick=""display_array();""&gt;&lt;/input&gt;
&lt;div id=""Result""&gt;&lt;/div&gt; 
&lt;/body&gt;
&lt;/html&gt;
</code>
</pre>

<strong>JavaScript Code:</strong>
<pre class=""line-numbers""><code class=""language-javascript"">var x = 0;
var array = Array();

function add_element_to_array()
{
 array[x] = document.getElementById(""text1"").value;
 alert(""Element: "" + array[x] + "" Added at index "" + x);
 x++;
 document.getElementById(""text1"").value = """";
}

function display_array()
{
   var e = ""&lt;hr/&gt;"";   
    
   for (var y=0; y&lt;array.length; y++)
   {
     e += ""Element "" + y + "" = "" + array[y] + ""&lt;br/&gt;"";
   }
   document.getElementById(""Result"").innerHTML = e;
}
</code>
</pre>

<strong>Flowchart: </strong>
<img alt=""Flowchart: JavaScript: Display the colors entered in an array by a specific format"" src=""https://www.w3resource.com/w3r_images/javascript-array-exercise-13.png"" style=""max-width:100%;display:block;height:auto;border: 2px solid silver;""/>


<strong>ES6 Version:</strong>
<pre class=""line-numbers""><code class=""language-javascript"">let x = 0;
const array = Array();

function add_element_to_array()
{
 array[x] = document.getElementById(""text1"").value;
 alert(`Element: ${array[x]} Added at index ${x}`);
 x++;
 document.getElementById(""text1"").value = """";
}

function display_array()
{
   let e = ""&lt;hr/&gt;"";   
    
   for (let y=0; y&lt;array.length; y++)
   {
     e += `Element ${y} = ${array[y]}&lt;br/&gt;`;
   }
   document.getElementById(""Result"").innerHTML = e;
}
</code></pre>

<strong>Live Demo: </strong>
<p class=""codepen"" data-default-tab=""js,result"" data-editable=""true"" data-embed-version=""2"" data-height=""380"" data-pen-title=""JavaScript: Add items in a blank array and display the items - array-ex-13"" data-slug-hash=""jGBREX"" data-theme-id=""dark"" data-user=""w3resource"">See the Pen <a href=""https://codepen.io/w3resource/pen/jGBREX/"">JavaScript: Add items in a blank array and display the items - array-ex-13</a> by w3resource (<a href=""https://codepen.io/w3resource"">@w3resource</a>) on <a href=""https://codepen.io"">CodePen</a>.
<script async="""" src=""https://production-assets.codepen.io/assets/embed/ei.js""></script>


<p class=""note_blue""><strong>Improve this sample solution and post your code through Disqus</strong>

<strong>Previous:</strong><a href=""https://www.w3resource.com/javascript-exercises/javascript-array-exercise-12.php""> Write a JavaScript program to compute the sum and product of an array of integers.</a>

<strong>Next:</strong><a href=""https://www.w3resource.com/javascript-exercises/javascript-array-exercise-14.php""> Write a JavaScript program to remove duplicate items from an array (ignore case sensitivity).</a>
","var x = 0;
var array = Array();

function add_element_to_array()
{
 array[x] = document.getElementById(""text1"").value;
 alert(""Element: "" + array[x] + "" Added at index "" + x);
 x++;
 document.getElementById(""text1"").value = """";
}

function display_array()
{
   var e = ""<hr/>"";   
    
   for (var y=0; y<array.length; y++)
   {
     e += ""Element "" + y + "" = "" + array[y] + ""<br/>"";
   }
   document.getElementById(""Result"").innerHTML = e;
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JS Bin</title>
<style>
body {padding-top:50px} 
</style> 
</head>
<body>
<input type=""text"" id=""text1""></input>
<input type=""button"" id=""button1"" value=""Add"" onclick=""add_element_to_array();""></input>
<input type=""button"" id=""button2"" value=""Display"" onclick=""display_array();""></input>
<div id=""Result""></div> 
</body>
</html>
","Easy
",初级,JavaScript Array
14,"JavaScript: Remove duplicate items from an array, ignore case sensitivity",Write a JavaScript program to remove duplicate items from an array (ignore case sensitivity).,"function removeDuplicates(num) {
  let x;
  const len=num.length;
  const out=[];
  const obj={};

  for (x=0; x<len; x++) {
    obj[num[x]]=0;
  }
  for (x in obj) {
    out.push(x);
  }
  return out;
}
const Mynum = [1, 2, 2, 4, 5, 4, 7, 8, 7, 3, 6];
result = removeDuplicates(Mynum);
console.log(Mynum);
console.log(result);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Remove duplicate items from an JavaScript array </title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
15,JavaScript: Display the colors entered in an array by a specific format,"Write a JavaScript program to display the colors in the following way:

<i>Here is the sample array:</i>

color = [""Blue "", ""Green"", ""Red"", ""Orange"", ""Violet"", ""Indigo"", ""Yellow ""];

o = [""th"",""st"",""nd"",""rd""]

<i>Output</i>

""1st choice is Blue .""

""2nd choice is Green.""

""3rd choice is Red.""

- - - - - - - - - - - - -","const color = [""Blue "", ""Green"", ""Red"", ""Orange"", ""Violet"", ""Indigo"", ""Yellow ""];

function Ordinal(n)
 {
  const o = [""th"",""st"",""nd"",""rd""];
  const x = n%100;
  return x+(o[(x-20)%10]||o[x]||o[0]);
 }

for(n = 0; n < color.length; n++){
 const ordinal = n + 1;

 const output = (`${Ordinal(ordinal)} choice is ${color[n]}.`);

console.log(output);
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Display colors using ordinal numbers</title>
</head>
<body> 
</body>
</html>
","Medium
",初级,JavaScript Array
17,JavaScript: Randomly arrange or shuffle an array,Write a JavaScript program to shuffle an array.,"function shuffle(arra1) {
    let ctr = arra1.length;
    let temp;
    let index;

    // While there are elements in the array
    while (ctr > 0) {
// Pick a random index
        index = Math.floor(Math.random() * ctr);
// Decrease ctr by 1
        ctr--;
// And swap the last element with it
        temp = arra1[ctr];
        arra1[ctr] = arra1[index];
        arra1[index] = temp;
    }
    return arra1;
}
const myArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
console.log(shuffle(myArray));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Shuffle an array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
18,JavaScript: Perform a binary search within an array,"Write a JavaScript program to perform a binary search.Note : A binary search or half-interval search algorithm finds the position of a specified input value within an array sorted by key value.


<span style=""clear: both"">Sample array: </span>

var items = [1, 2, 3, 4, 5, 7, 8, 9];

<span style=""clear: both"">Expected Output: </span>

console.log(binary_Search(items, 1)); //0 

console.log(binary_Search(items, 5)); //4","function binary_Search(items, value){
    let firstIndex  = 0;
    let lastIndex   = items.length - 1;
    let middleIndex = Math.floor((lastIndex + firstIndex)/2);

    while(items[middleIndex] != value && firstIndex < lastIndex)
    {
       if (value < items[middleIndex])
        {
            lastIndex = middleIndex - 1;
        } 
      else if (value > items[middleIndex])
        {
            firstIndex = middleIndex + 1;
        }
        middleIndex = Math.floor((lastIndex + firstIndex)/2);
    }

    return (items[middleIndex] != value) ? -1 : middleIndex;
}
const items = [1, 2, 3, 4, 5, 7, 8, 9];
console.log(binary_Search(items, 1));   
console.log(binary_Search(items, 5));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Binary Search</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
19,JavaScript: Compute the sum of each individual index value of two or more arrays,"There are two arrays with individual values, write a JavaScript program to compute the sum of each individual index value from the given arrays.

<span style=""clear: both"">Sample array: </span>

array1 = [1,0,2,3,4];

array2 = [3,5,6,7,8,13];

<span style=""clear: both"">Expected Output: </span>

[4, 5, 8, 10, 12, 13]","function Arrays_sum(array1, array2) 
{
  const result = [];
  let ctr = 0;
  let x=0;

  if (array1.length === 0) 
   return ""array1 is empty"";
  if (array2.length === 0) 
   return ""array2 is empty"";   

 while (ctr < array1.length && ctr < array2.length) 
  {
    result.push(array1[ctr] + array2[ctr]);
    ctr++;
  }

 if (ctr === array1.length) 
 {
    for (x = ctr; x < array2.length; x++)   {
      result.push(array2[x]);
    }
  } 
  else
  {
  for (x = ctr; x < array1.length; x++) 
    {
      result.push(array1[x]);
    }
  }
  return result;
}

console.log(Arrays_sum([1,0,2,3,4], [3,5,6,7,8,13]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>compute the sum of each individual index value from two arrays</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
20,JavaScript: Find duplicate values in a array,Write a JavaScript program to find duplicate values in a JavaScript array.,"function find_duplicate_in_array(arra1) {
        const object = {};
        const result = [];

        arra1.forEach(item => {
          if(!object[item])
              object[item] = 0;
            object[item] += 1;
        })

        for (const prop in object) {
           if(object[prop] >= 2) {
               result.push(prop);
           }
        }

        return result;

    }

    console.log(find_duplicate_in_array([1, 2, -2, 4, 5, 4, 7, 8, 7, 7, 71, 3, 6]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Find duplicate values in a JavaScript array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
21,JavaScript: Flatten a nested array,"Write a JavaScript program to flatten a nested (any depth) array. If you pass shallow, the array will only be flattened a single level.

Sample Data:

console.log(flatten([1, [2], [3, [[4]]],[5,6]])); 

[1, 2, 3, 4, 5, 6]

console.log(flatten([1, [2], [3, [[4]]],[5,6]], true)); 

[1, 2, 3, [[4]], 5, 6]","const flatten = (a, shallow, r) => {
  if(!r){ r = []}
   
if (shallow) {
  return r.concat(...a);
  }
      
   for(let i=0; i<a.length; i++){
        if(a[i].constructor == Array){
            flatten(a[i],shallow,r);
        }else{
            r.push(a[i]);
        }
    }
    return r;
};

console.log(flatten([1, [2], [3, [[4]]],[5,6]]));

console.log(flatten([1, [2], [3, [[4]]],[5,6]], true));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Flatten a nested array</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
22,JavaScript: Compute the union of two arrays,"Write a JavaScript program to compute the union of two arrays.

Sample Data:

console.log(union([1, 2, 3], [100, 2, 1, 10]));

[1, 2, 3, 10, 100]","function union(arra1, arra2) {
  
  if ((arra1 == null) || (arra2==null)) 
    return void 0;
  
  const obj = {};
 
  for (var i = arra1.length-1; i >= 0; -- i)
     obj[arra1[i]] = arra1[i];
 
  for (var i = arra2.length-1; i >= 0; -- i)
     obj[arra2[i]] = arra2[i];
 
  const res = [];
 
  for (const n in obj)
  {
  
    if (obj.hasOwnProperty(n)) 
      res.push(obj[n]);
  }
 
  return res;
}
console.log(union([1, 2, 3], [100, 2, 1, 10]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS Bin</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
23,JavaScript: Find the difference of two arrays,"Write a JavaScript function to find the difference of two arrays.

Test Data:

console.log(difference([1, 2, 3], [100, 2, 1, 10])); 

[""3"", ""10"", ""100""]

console.log(difference([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]])); 

[""6""]

console.log(difference([1, 2, 3], [100, 2, 1, 10]));

[""3"", ""10"", ""100""]","function differenceOf2Arrays (array1, array2) {
var temp = [];
array1 = array1.toString().split(',').map(Number);
array2 = array2.toString().split(',').map(Number);

for (var i in array1) {
if(array2.indexOf(array1[i]) === -1) temp.push(array1[i]);
}
for(i in array2) {
if(array1.indexOf(array2[i]) === -1) temp.push(array2[i]);
}
return temp.sort((a,b) => a-b);
}

console.log(differenceOf2Arrays([1, 2, 3], [100, 2, 1, 10]));
console.log(differenceOf2Arrays([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS, difference between two arrays</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
25,JavaScript: Sort the specified array of objects by title value,"Write a JavaScript function to sort the following array of objects by title value.
Sample object:","const library = [ 
   { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254},
   { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264},
   { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245}
   ];

function compare_to_sort(x,y) 
 {
  if (x.title < y.title)
    return -1;
  if (x.title > y.title)
    return 1;
  return 0;
 }

console.log(library.sort(compare_to_sort));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to sort an lowing array of objects by title value.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
24,"JavaScript: Remove null, 0, blank, false, undefined and NaN values from an array","Write a JavaScript function to remove. 'null', '0', '""""', 'false', 'undefined' and 'NaN' values from an array.
Sample array: [NaN, 0, 15, false, -22, '',undefined, 47, null]

Expected result:
[15, -22, 47]","function filter_array(test_array) {
    let index = -1;
    const arr_length = test_array ? test_array.length : 0;
    let resIndex = -1;
    const result = [];

    while (++index < arr_length) {
        const value = test_array[index];

        if (value) {
            result[++resIndex] = value;
        }
    }

    return result;
}
console.log(filter_array([NaN, 0, 15, false, -22, '',undefined, 47, null]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Write a JavaScript function to remove. 'null', '0', '""""', 'false', 'undefined' and 'NaN' values from an array.</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
26,JavaScript: Find a pair of elements from an specified array whose sum equals a specific target number,"Write a JavaScript program to find a pair of elements (indices of the two numbers) from an given array whose sum equals a specific target number.
Input: numbers= [10,20,10,40,50,60,70], target=50

Output: 2, 3","function twoSum(nums, target_num) {
  var map = [];
  var indexnum = [];
  
  for (var x = 0; x < nums.length; x++)
  {
  if (map[nums[x]] != null)
  {
  var index = map[nums[x]];
  indexnum[0] = index;
  indexnum[1] = x;
  break;
  }
  else
  {
  map[target_num - nums[x]] = x;
  }
  }
  return indexnum;
  }
console.log(twoSum([10,20,10,40,50,60,70],50));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find a pair of elements from an specified array whose sum equals a specific target number</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
27,JavaScript: Retrieve the value of a specified property from all elements in an array,"Write a JavaScript function to retrieve the value of a given property from all elements in an array.
Sample array: [NaN, 0, 15, false, -22, '',undefined, 47, null]

Expected result:
[15, -22, 47]","var library = [ 
   { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254},
   { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264},
   { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245}
   ];

function property_value(array, property_key) {
	var arr = [],
		index = -1,
		arrlen = array.length,array_items;

	while (++index < arrlen) {
		array_items = array[index];

  if (array_items.hasOwnProperty(property_key)) 
      {
	 arr[arr.length] = array_items[property_key];
      }
	}

	return arr;
}

console.log(property_value(library, 'title'));

console.log(property_value(library, 'author'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to retrieve the value of a given property from all elements in an array.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
28,JavaScript: Find the longest common starting substring in a set of strings,"Write a JavaScript function to find the longest common starting substring in a set of strings.

Sample array : console.log(longest_common_starting_substring(['go', 'google']));

Expected result : ""go""","function longest_common_starting_substring(arr1){
var arr= arr1.concat().sort(),
a1= arr[0], a2= arr[arr.length-1], L= a1.length, i= 0;
while(i< L && a1.charAt(i)=== a2.charAt(i)) i++;
return a1.substring(0, i);
}

console.log(longest_common_starting_substring(['go', 'google'])); 

console.log(longest_common_starting_substring(['SQLInjection', 'SQLTutorial'])); 

console.log(longest_common_starting_substring(['abcd', '1234'])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to find the longest common starting substring in a set of strings</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
29,JavaScript: Fill an array with values on supplied bounds,"Write a JavaScript function to fill an array with values (numeric, string with one character) on supplied bounds.
Test Data: 

console.log(num_string_range('a', ""z"", 2));

[""a"", ""c"", ""e"", ""g"", ""i"", ""k"", ""m"", ""o"", ""q"", ""s"", ""u"", ""w"", ""y""]","function num_string_range(start, end, step) 
  {
    var range = [];
    if ((step === 0) || (typeof start == ""undefined"" || typeof end ==    ""undefined"") || (typeof start != typeof end))
     return false;
  
    if (end < start) {
        step = -step;
    }

    if (typeof start == ""number"") {

        while (step > 0 ? end >= start : end <= start) {
            range.push(start);
            start += step;
        }
        } 
      else if (typeof start == ""string"") {

        if (start.length != 1 || end.length != 1) {
            throw TypeError(""Strings with one character are supported."");
        }

        start = start.charCodeAt(0);
        end = end.charCodeAt(0);

        while (step > 0 ? end >= start : end <= start) {
            range.push(String.fromCharCode(start));
            start += step;
        }

    }
   
    else
       {
        throw TypeError(""Only string and number are supported"");
        }

    return range;

}

console.log(num_string_range('a', ""z"", 2));
console.log(num_string_range(""Z"", ""A"", 2));
console.log(num_string_range(0, -5, 1));
console.log(num_string_range(0, 25, 5));
console.log(num_string_range(20, 5, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to fill an array with values (numeric, string with one character) on supplied bounds.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
30,JavaScript: Merge two arrays and removes all duplicates elements,"Write a JavaScript function to merge two arrays and removes all duplicates elements.
Test data:

var array1 = [1, 2, 3]; 

var array2 = [2, 30, 1]; 

console.log(merge_array(array1, array2));

[3, 2, 30, 1]","function merge_array(array1, array2) {
    var result_array = [];
    var arr = array1.concat(array2);
    var len = arr.length;
    var assoc = {};

    while(len--) {
        var item = arr[len];

        if(!assoc[item]) 
        { 
            result_array.unshift(item);
            assoc[item] = true;
        }
    }

    return result_array;
}


var array1 = [1, 2, 3];

var array2 = [2, 30, 1];

console.log(merge_array(array1, array2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to merge two arrays and removes all duplicates elements.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
31,JavaScript: Remove a specific element from an array,"Write a JavaScript function to remove a specific element from an array.
Test data:

console.log(remove_array_element([2, 5, 9, 6], 5));

[2, 9, 6]","function remove_array_element(array, n)
 {
   var index = array.indexOf(n);
   if (index > -1) {
    array.splice(index, 1);
}
   return array;
 }

console.log(remove_array_element([2, 5, 9, 6], 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to remove a specific element from an array</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
32,JavaScript: Find if an array contains a specific element,"Write a JavaScript function to find an array contains a specific element.
Test data:

arr = [2, 5, 9, 6];

console.log(contains(arr, 5));

[True]","function contains(arr, element) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] === element) {
            return true;
        }
    }
    return false;
}
arr = [2, 5, 9, 6];
console.log(contains(arr, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to find if an array contains a specific element</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
33,JavaScript: Empty an array keeping the original,Write a JavaScript script to empty an array keeping the original.,"var arr = [1, 3, 6, 3, -5];
console.log(arr);
arr.length = 0;
console.log(arr);
","
<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript script to empty an array keeping the original.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
34,JavaScript: Get nth largest element from an unsorted array,"Write a JavaScript function to get nth largest element from an unsorted array.
Test Data:

console.log(nthlargest([ 43, 56, 23, 89, 88, 90, 99, 652], 4));

89","function nthlargest(arra,highest){
    let x = 0;
    let y = 0;
    let z = 0;
    let temp = 0;
    const tnum = arra.length;
    let flag = false;
    let result = false;

    while(x < tnum){
        y = x + 1; 
        
        if(y < tnum){
            for(z = y; z < tnum; z++){
                
                if(arra[x] < arra[z]){
                    temp = arra[z];
                    arra[z] = arra[x];
                    arra[x] = temp;
                    flag = true; 
                }else{
                    continue;
                }	
            }					
        }
        
        if(flag){
            flag = false;
        }else{
            x++; 
            if(x === highest){ 
              
                result = true;
            }	
        }
        if(result){
            break;
        }
    }

    return (arra[(highest - 1)]);
}
		
console.log(nthlargest([ 43, 56, 23, 89, 88, 90, 99, 652], 4));
","
<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get nth largest element from an unsorted array.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
35,JavaScript: Get a random item from an array,Write a JavaScript function to get a random item from an array.,"function random_item(items)
{
  
return items[Math.floor(Math.random()*items.length)];
     
}

const items = [254, 45, 212, 365, 2543];
console.log(random_item(items));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a random item from an array.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
36,JavaScript: Create a specified number of elements and pre-filled numeric value array,"Write a JavaScript function to create a specified number of elements and pre-filled numeric value array.
Test Data:

console.log(array_filled(6, 0)); 

[0, 0, 0, 0, 0, 0]

console.log(array_filled(4, 11));

[11, 11, 11, 11]","function array_filled(n, val)
{
    return Array.apply(null, Array(n)).map(Number.prototype.valueOf,val);
}

console.log(array_filled(6, 0));
console.log(array_filled(4, 11));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to create a specified number of elements and numeric value filled array</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
37,JavaScript: Create a specified number of elements and pre-filled string value array,"Write a JavaScript function to create a specified number of elements and pre-filled string value array.
 Test Data:

console.log(array_filled(3, 'default value')); 

[""default value"", ""default value"", ""default value""]

console.log(array_filled(4, 'password'));

[""password"", ""password"", ""password"", ""password""]","function array_filled(n, val)
{
    return Array.apply(null, Array(n)).map(String.prototype.valueOf,val);
}

console.log(array_filled(3, 'default value'));
console.log(array_filled(4, 'password'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to create a specified number of elements and pre-filled string value array</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
38,JavaScript: Move an array element from one position to another,"Write a JavaScript function to move an array element from one position to another.
 Test Data:

console.log(move([10, 20, 30, 40, 50], 0, 2));

[20, 30, 10, 40, 50]

console.log(move([10, 20, 30, 40, 50], -1, -2));

[10, 20, 30, 50, 40]","function move(arr, old_index, new_index) {
    while (old_index < 0) {
        old_index += arr.length;
    }
    while (new_index < 0) {
        new_index += arr.length;
    }
    if (new_index >= arr.length) {
        var k = new_index - arr.length;
        while ((k--) + 1) {
            arr.push(undefined);
        }
    }
     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);  
   return arr;
}

console.log(move([10, 20, 30, 40, 50], 0, 2));

console.log(move([10, 20, 30, 40, 50], -1, -2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to move an array element from one position to another.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
39,"JavaScript: Filter false, null, 0 and blank values from an array","Write a JavaScript function to filter false, null, 0 and blank values from an array.
Test Data :

console.log(filter_array_values([58, '', 'abcd', true, null, false, 0]));

[58, ""abcd"", true]","function filter_array_values(arr) {
  arr = arr.filter(isEligible);
  return arr;
}

function isEligible(value) {
  if(value !== false || value !== null || value !== 0 || value !== """") {
    return value;
  }
}

console.log(filter_array_values([58, '', 'abcd', true, null, false, 0]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to filter false, null, 0 and blank values from an array</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
41,JavaScript: Generate an array between two integers of 1 step length,"Write a JavaScript function to generate an array between two integers of 1 step length.
Test Data :

console.log(rangeBetwee(4, 7)); 

[4, 5, 6, 7]

console.log(rangeBetwee(-4, 7));

[-4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]","function rangeBetwee(start, end) 
{
  
		if (start > end) {
			const arr = new Array(start - end + 1);
			for (let i = 0; i < arr.length; i++, start--) {
				resarrult[i] = start;
			}
			return arr;
		} 
       else 
       {
			const arro = new Array(end-start+1);
         
		for (let j = 0; j < arro.length; j++, start++) 
        {
			arro[j] = start;
		}
      		return arro;
		}
	}

console.log(rangeBetwee(4, 7));
console.log(rangeBetwee(-4, 7));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to generate an array between two integers of 1 step length</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
42,JavaScript: Find the unique elements from two arrays,"Write a JavaScript function to find the unique elements from two arrays.
Test Data :

console.log(difference([1, 2, 3], [100, 2, 1, 10]));

[""1"", ""2"", ""3"", ""10"", ""100""]

console.log(difference([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]])); 

[""1"", ""2"", ""3"", ""4"", ""5"", ""6""]

console.log(difference([1, 2, 3], [100, 2, 1, 10])); 

[""1"", ""2"", ""3"", ""10"", ""100""]","function difference(arr1,arr2) {
  
  var a1= flatten(arr1,true);
  var a2= flatten(arr2,true);
  
 var a=[], diff=[];
  for(var i=0;i< a1.length;i++)
    a[a1[i]]=false;
  for(i=0;i< a2.length;i++)
  if(a[a2[i]]===true) 
     { delete a[a2[i]];}
    else a[a2[i]]=true;
  for(var k in a)
    diff.push(k);
  return diff;   
  }

var flatten = function(a, shallow,r){
  if(!r){ r = [];}
if (shallow) {
  return r.concat.apply(r,a);
  }  
   for(i=0; i< a.length; i++){
        if(a[i].constructor == Array){
            flatten(a[i],shallow,r);
        }else{
            r.push(a[i]);
        }
    }
    return r;
};
console.log(difference([1, 2, 3], [100, 2, 1, 10]));
console.log(difference([1, 2, 3, 4, 5], [1, [2], [3, [[4]]],[5,6]]));
console.log(difference([1, 2, 3], [100, 2, 1, 10]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to find the unique elements from two arrays</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Array
9,"JavaScript: Swap the case of each character of a string, upper case to lower and vice versa",Write a JavaScript program which accept a string as input and swap the case of each character. For example if you input 'The Quick Brown Fox' the output should be 'tHE qUICK bROWN fOX'.,"var str = 'c';
var UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
var LOWER = 'abcdefghijklmnopqrstuvwxyz';
var result = [];
  
  for(var x=0; x<str.length; x++)
  {
    if(UPPER.indexOf(str[x]) !== -1)
    {
      result.push(str[x].toLowerCase());
    }
    else if(LOWER.indexOf(str[x]) !== -1)
    {
      result.push(str[x].toUpperCase());
    }
    else 
    {
      result.push(str[x]);
    }
  }
console.log(result.join(''));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Swap the case of each character of a string</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Array
40,"JavaScript: Generate an array of specified length, the content of the array is integer numbers, increase by one from starting","Write a JavaScript function to generate an array of specified length, filled with integer numbers, increase by one from starting position. 
Test Data :

console.log(array_range(1, 4)); 

[1, 2, 3, 4]

console.log(array_range(-6, 4));

[-6, -5, -4, -3]","function array_range(start, len) 
     {
		var arr = new Array(len);
		for (var i = 0; i < len; i++, start++) 
        {
			arr[i] = start;
		}
      		return arr;
}


console.log(array_range(1, 4));

console.log(array_range(-6, 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to generate an array of given length, the content of the array is integer numbers, increase by one from starting</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Array
16,JavaScript: Find the leap years from a given range of years,Find the leap years in a given range of years.,"function leap_year_range(st_year, end_year) {
        const year_range = [];
        for (let i = st_year; i <= end_year; i++)
        {
             year_range.push(i);
        }
        const new_array = [];

  year_range.forEach(
   year => { 
      if (test_LeapYear(year)) 
      new_array.push(year);
   });

  return new_array;
     }

function test_LeapYear(year) {
   if ((year % 4 === 0 && year % 100 !== 0) || (year % 100 === 0 && year % 400 === 0)) {
                return year;
        } else {
                return false;
        }
}

console.log(leap_year_range(2000,2012));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find Leap years in a range</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Array
43,JavaScript: Display the current day and time in a specific format,"
Write a JavaScript program to display the current day and time in the following format.

Today is : Tuesday. 

Current time is : 10 PM : 30 : 38","var today = new Date();
  var day = today.getDay();
  var daylist = [""Sunday"",""Monday"",""Tuesday"",""Wednesday "",""Thursday"",""Friday"",""Saturday""];
  console.log(""Today is : "" + daylist[day] + ""."");
  var hour = today.getHours();
  var minute = today.getMinutes();
  var second = today.getSeconds();
  var prepand = (hour >= 12)? "" PM "":"" AM "";
  hour = (hour >= 12)? hour - 12: hour;
  if (hour===0 && prepand===' PM ') 
  { 
  if (minute===0 && second===0)
  { 
  hour=12;
  prepand=' Noon';
  } 
  else
  { 
  hour=12;
  prepand=' PM';
  } 
  } 
  if (hour===0 && prepand===' AM ') 
  { 
  if (minute===0 && second===0)
  { 
  hour=12;
  prepand=' Midnight';
  } 
  else
  { 
  hour=12;
  prepand=' AM';
  } 
  } 
console.log(""Current Time : ""+hour + prepand + "" : "" + minute + "" : "" + second);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript current day and time</title>
  </head>
  <body></body>
</html>
","Easy
",高级,JavaScript Basic
44,JavaScript: Print the contents of the current window,Write a JavaScript function to print the contents of the current window.,"function print_current_page()
{
window.print();
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Print the current page.</title>
</head>
<body>
<p></p>
<p>Click the button to print the current page.</p>
<button onclick=""print_current_page()"">Print this page</button>
</body>
</html>
","Easy
",高级,JavaScript Basic
45,JavaScript : Display the current date,"
Write a JavaScript program to get the current date.

Expected Output : 

mm-dd-yyyy, mm/dd/yyyy or dd-mm-yyyy, dd/mm/yyyy ","
var today = new Date();
var dd = today.getDate();

var mm = today.getMonth()+1; 
var yyyy = today.getFullYear();
if(dd<10) 
{
    dd='0'+dd;
} 

if(mm<10) 
{
    mm='0'+mm;
} 
today = mm+'-'+dd+'-'+yyyy;
console.log(today);
today = mm+'/'+dd+'/'+yyyy;
console.log(today);
today = dd+'-'+mm+'-'+yyyy;
console.log(today);
today = dd+'/'+mm+'/'+yyyy;
console.log(today);
","
<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript program to get the current date.</title>
  </head>
  <body>
  </body>
  </html>
  ","Easy
",高级,JavaScript Basic
46,"JavaScript: Find the area of a triangle where lengths of the three of its sides are 5, 6, 7","Write a JavaScript function to find the area of a triangle where lengths of the three of its sides are 5, 6, 7.","var side1 = 5; 
var side2 = 6; 
var side3 = 7; 
var s = (side1 + side2 + side3)/2;
var area =  Math.sqrt(s*((s-side1)*(s-side2)*(s-side3)));
console.log(area);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>The area of a triangle</title>
</head>
<body>  
</body>
</html>
","Easy
",高级,JavaScript Basic
47,JavaScript: Rotate a string from left to right,Write a JavaScript program to rotate the string 'w3resource' in right direction by periodically removing one letter from the end of the string and attaching it to the front.,"function animate_string(id) 
{
    var element = document.getElementById(id);
    var textNode = element.childNodes[0]; // assuming no other children
    var text = textNode.data;

setInterval(function () 
{
 text = text[text.length - 1] + text.substring(0, text.length - 1);
  textNode.data = text;
}, 100);
}
","<!DOCTYPE html>
  <html> 
  <head>
  <title>JavaScript basic animation</title>
  <script type=""text/javascript"">
  </script>
  </head> <body onload=""animate_string('target')""
  <pre id=""target"">w3resource </pre>
  </body> 
  </html>
  ","Medium
",高级,JavaScript Basic
48,JavaScript: Check whether a given year is a leap year in the Gregorian calendar,Write a JavaScript program to determine whether a given year is a leap year in the Gregorian calendar.,"function leapyear(year)
{
return (year % 100 === 0) ? (year % 400 === 0) : (year % 4 === 0);
}
console.log(leapyear(2016));
console.log(leapyear(2000));
console.log(leapyear(1700));
console.log(leapyear(1800));
console.log(leapyear(100));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find Leap Year</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
49,JavaScript: Find 1st January be a Sunday between a range of years,Write a JavaScript program to find which 1st January is being a Sunday between 2014 and 2050.,"console.log('--------------------');
for (var year = 2014; year <= 2050; year++)
    {
    var d = new Date(year, 0, 1);
    if ( d.getDay() === 0 )
        console.log(""1st January is being a Sunday  ""+year);
    }
console.log('--------------------');
",,"Easy
",高级,JavaScript Basic
50,JavaScript: Display a message when a number is between a range,"Write a JavaScript program where the program takes a random integer between 1 to 10, the user is then prompted to input a guess number. If the user input matches with guess number, the program will display a message ""Good Work"" otherwise display a message ""Not matched""","// Get a random integer from 1 to 10 inclusive
 const num = Math.ceil(Math.random() * 10);
console.log(num);
 const gnum = prompt('Guess the number between 1 and 10 inclusive');
 if (gnum == num)
   console.log('Matched');
  else
   console.log('Not matched, the number was '+gnum);
   ","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Guess a number</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
51,JavaScript: Calculate number of days left until next Christmas,Write a JavaScript program to calculate number of days left until next Christmas.,"today=new Date();
var cmas=new Date(today.getFullYear(), 11, 25);
if (today.getMonth()==11 && today.getDate()>25) 
{
cmas.setFullYear(cmas.getFullYear()+1); 
}  
var one_day=1000*60*60*24;
console.log(Math.ceil((cmas.getTime()-today.getTime())/(one_day))+
"" days left until Christmas!"");
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=utf-8 />
  <title>Write a JavaScript program to calculate days left until next Christmas</title>
  </head>
  <body>
</body>
  </html>
  ",未知,高级,JavaScript Basic
52,JavaScript: Calculate multiplication and division of two numbers,Write a JavaScript program to calculate multiplication and division of two numbers (input from user).Sample Form: ,"function multiplyBy()
{
        num1 = document.getElementById(""firstNumber"").value;
        num2 = document.getElementById(""secondNumber"").value;
        document.getElementById(""result"").innerHTML = num1 * num2;
}

function divideBy() 
{ 
        num1 = document.getElementById(""firstNumber"").value;
        num2 = document.getElementById(""secondNumber"").value;
document.getElementById(""result"").innerHTML = num1 / num2;
}
","<!DOCTYPE html>
<html> 
<head>
<meta charset=utf-8 />
<title>JavaScript program to calculate multiplication and division of two numbers </title>
<style type=""text/css"">
body {margin: 30px;}
</style> 
</head>
<body>
<form>
1st Number : <input type=""text"" id=""firstNumber"" /><br>
2nd Number: <input type=""text"" id=""secondNumber"" /><br>
<input type=""button"" onClick=""multiplyBy()"" Value=""Multiply"" />
<input type=""button"" onClick=""divideBy()"" Value=""Divide"" />
</form>
<p>The Result is : <br>
<span id = ""result""></span>
</p>
</body>
</html>
","Easy
",高级,JavaScript Basic
53,"JavaScript: Convert temperatures to and from celsius, fahrenheit","Write a JavaScript program to convert temperatures to and from celsius, fahrenheit.","function cToF(celsius) 
{
  var cTemp = celsius;
  var cToFahr = cTemp * 9 / 5 + 32;
  var message = cTemp+'\xB0C is ' + cToFahr + ' \xB0F.';
    console.log(message);
}

function fToC(fahrenheit) 
{
  var fTemp = fahrenheit;
  var fToCel = (fTemp - 32) * 5 / 9;
  var message = fTemp+'\xB0F is ' + fToCel + '\xB0C.';
    console.log(message);
} 
cToF(60);
fToC(45);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript program to convert temperatures to and from celsius, fahrenheit</title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",高级,JavaScript Basic
54,JavaScript: Get the website URL (loading page),Write a JavaScript program to get the website URL (loading page). ,"//Write a JavaScript program to get the website URL (loading page)
console.log(document.URL);
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Write a JavaScript program to get the website URL (loading page)</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
55,JavaScript: Create a variable using a user-defined name,Write a JavaScript exercise to create a variable using a user-defined name. ,"var var_name = 'abcd';
var n = 120;
this[var_name] = n;
console.log(this[var_name])
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Create a variable using a user-defined name</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
56,JavaScript: Get the extension of a filename,Write a JavaScript exercise to get the extension of a filename. ,"filename = ""system.php""
console.log(filename.split('.').pop());
filename = ""abc.js""
console.log(filename.split('.').pop());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>The extension of a filename.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
57,JavaScript: Get the difference between a given number,"Write a JavaScript program to get the difference between a given number and 13, if the number is greater than 13 return double the absolute difference. ","function difference(n)
 {
    if (n <= 13)
        return 13 - n;
    else
        return (n - 13) * 2;
 }
console.log(difference(32))
console.log(difference(11))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>The difference between a given number and 13, if the number is greater than 13 return double the absolute difference.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
58,JavaScript: Compute the sum of the two given integers,"Write a JavaScript program to compute the sum of the two given integers. If the two values are same, then returns triple their sum. ","function sumTriple (x, y) {
  if (x == y) {
    return 3 * (x + y);
    } 
   else
   {
    return (x + y);
   }
 }
console.log(sumTriple(10, 20));
console.log(sumTriple(10, 10));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to compute the sum of the two given integers. If the two values are same, then return triple their sum</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
59,JavaScript: Compute the absolute difference between a specified number and 19,Write a JavaScript program to compute the absolute difference between a specified number and 19. Returns triple their absolute difference if the specified number is greater than 19. ,"function diff_num(n) {
  if (n <= 19) {
    return (19 - n);
    }
  else
    {
     return (n - 19) * 3;
    }
}

console.log(diff_num(12));
console.log(diff_num(19));
console.log(diff_num(22));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to compute the absolute difference between a specified number and 19.  Returns triple their absolute difference if the specified number is greater than 19.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
60,JavaScript: Check two given numbers and return true if one of the number is 50 or if their sum is 50,Write a JavaScript program to check two given numbers and return true if one of the number is 50 or if their sum is 50. ,"function test50(x, y) 
{
  return ((x == 50 || y == 50) || (x + y == 50));
}
console.log(test50(50, 50))
console.log(test50(20, 50))
console.log(test50(20, 20))
console.log(test50(20, 30))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check two given numbers and return true if one of the number is 50 or if their sum is 50.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
61,JavaScript: Check whether a given integer is within 20 of 100 or 400,Write a JavaScript program to check whether a given integer is within 20 of 100 or 400. ,"function testhundred(x) {
  return ((Math.abs(100 - x) <= 20) ||
	 (Math.abs(400 - x) <= 20));
}

console.log(testhundred(10));
console.log(testhundred(90));
console.log(testhundred(99));
console.log(testhundred(199));
console.log(testhundred(200));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether a given integer is within 20 of 100 or 400.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
62,"JavaScript: Check two given integers, whether one is positive and another one is negative","Write a JavaScript program to check from two given integers, whether one is positive and another one is negative. ","function positive_negative(x, y)
{
  if ((x < 0 && y > 0) || x > 0 && y < 0) 
  {
    return true;
  }
  else 
  {
    return false;
  }
}
console.log(positive_negative(2, 2));
console.log(positive_negative(-2, 2));
console.log(positive_negative(2, -2));
console.log(positive_negative(-2, -2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to  check from two given integers, whether one is positive and another one is negative.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
63,JavaScript: Create a new string adding "Py" in front of a given string,Write a JavaScript program to create a new string adding "Py" in front of a given string. If the given string begins with "Py" then return the original string. ,"function string_check(str1) {
  if (str1 === null || str1 === undefined || str1.substring(0, 2) === 'Py') 
  {
    return str1;
  }
  return ""Py""+str1;
}

console.log(string_check(""Python""));
console.log(string_check(""thon""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string adding “Py” in front of a given string.  If the given string begins with “Py” then return the original string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
64,JavaScript: Remove a character at the specified position of a given string and return the new string,Write a JavaScript program to remove a character at the specified position of a given string and return the new string.,"function remove_character(str, char_pos) 
 {
  part1 = str.substring(0, char_pos);
  part2 = str.substring(char_pos + 1, str.length);
  return (part1 + part2);
 }

console.log(remove_character(""Python"",0));
console.log(remove_character(""Python"",3));
console.log(remove_character(""Python"",5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to remove a character at the specified position of a given string and return the new string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
66,JavaScript: Create a new string from a given string with the first character of the given string added at the front and back,Write a JavaScript program to create a new string from a given string with the first character of the given string added at the front and back.,"function front_back(str)
{
  first = str.substring(0,1);
  return first + str + first;
}
console.log(front_back('a'));
console.log(front_back('ab'));
console.log(front_back('abc'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string from a given string with the first character of the given string added at the front and back.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
67,JavaScript: Check whether a given positive number is a multiple of 3 or a multiple of 7,Write a JavaScript program to check whether a given positive number is a multiple of 3 or a multiple of 7.,"function test37(x) 
{
  if (x % 3 == 0 || x % 7 == 0) 
  {
    return true;
  } 
  else {
    return false;
  }
}

console.log(test37(12));
console.log(test37(14));
console.log(test37(10));
console.log(test37(11));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether a given positive number is a multiple of 3 or a multiple of 7. </title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
68,JavaScript: Create a new string from a given string taking the last 3 characters and added at both the front and back,Write a JavaScript program to create a new string from a given string taking the last 3 characters and added at both the front and back. The string length must be 3 or more.,"function front_back3(str)
 {
  if (str.length>=3)
   {
   str_len = 3;
 
  back = str.substring(str.length-3);
   return back + str + back;
 }
   else
     return false;
 }
console.log(front_back3(""abc""));
console.log(front_back3(""ab""));
console.log(front_back3(""abcd""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string from a given string taking the last 3 characters and added at both the front and back. The string length must be 3 or more.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
69,JavaScript: Check whether a string starts with 'Java' and false otherwise,Write a JavaScript program to check whether a string starts with 'Java' and false otherwise.,"function start_spec_str(str)
{
  if (str.length < 4)
  {
    return false;
  }
  front = str.substring(0, 4);
  if (front == 'Java') 
  {
    return true;
  }
   else 
   {
    return false;
  }
}

console.log(start_spec_str(""JavaScript""));
console.log(start_spec_str(""Java""));
console.log(start_spec_str(""Python""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether a string starts with 'Java' and false otherwise.</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
70,JavaScript: Check whether two given integer values are in the range 50..99,Write a JavaScript program to check whether two given integer values are in the range 50..99 (inclusive). Return true if either of them are in the said range.,"function check_numbers(x, y) 
  {
  if ((x >= 50 && x <= 99) || (y >= 50 && y <= 99))
  {
    return true;
  } 
  else 
  {
    return false;
  }
}

console.log(check_numbers(12, 101));
console.log(check_numbers(52, 80));
console.log(check_numbers(15, 99));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether two given integer values are in the range 50..99 (inclusive). Return true if either of them are in the said range.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
72,JavaScript: Check whether a string "Script" presents at 5th (index 4) position in a given string,"Write a JavaScript program to check whether a string ""Script"" presents at 5th (index 4) position in a given string, if ""Script"" presents in the string return the string without ""Script"" otherwise return the original one.","function check_script(str)
{
  if (str.length < 6) {
    return str;
  }
  let result_str = str;
    
  if (str.substring(10, 4) == 'Script') 
    {
    
   result_str = str.substring(0, 4) + str.substring(10,str.length);
      
  }
  return result_str;
}

console.log(check_script(""JavaScript""));
console.log(check_script(""CoffeeScript""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether a string “Script” presents at 5th (index 4) position in a given string, if “Script” presents in the string return the string without “Script” otherwise return the original one.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
73,JavaScript: Find the largest of three given integers,Write a JavaScript program to find the largest of three given integers.,"function max_of_three(x, y, z) 
 {
  max_val = 0;
  if (x > y)
  {
    max_val = x;
  } else
  {
    max_val = y;
  }
  if (z > max_val) 
  {
    max_val = z;
  }
  return max_val;
}

console.log(max_of_three(1,0,1));
console.log(max_of_three(0,-10,-20));
console.log(max_of_three(1000,510,440));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to find the largest of three given integers.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
74,JavaScript: Find a value which is nearest to 100 from two different given integer values,Write a JavaScript program to find a value which is nearest to 100 from two different given integer values.,"function near_100(x, y) {
  if (x != y)
  {
  x1 = Math.abs(x - 100);
  y1 = Math.abs(y - 100);

  if (x1 < y1)
  {
    return x;
  }
  if (y1 < x1)
  {
    return y;
  }
  return 0;
  }
  else
    return false;
}

console.log(near_100(90, 89));
console.log(near_100(-90, -89));
console.log(near_100(90, 90));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to find a value which is nearest to 100 from two different given integer values.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
75,JavaScript: Check whether two numbers are in range 40..60 or in the range 70..100 inclusive,Write a JavaScript program to check whether two numbers are in range 40..60 or in the range 70..100 inclusive.,"function numbers_ranges(x, y) {
  if ((x >= 40 && x <= 60 && y >= 40 && y <= 60) 
      || 
      (x >= 70 && x <= 100 && y >= 70 && y <= 100))
     {
    return true;
     } 
    else 
     {
    return false;
  }
}

console.log(numbers_ranges(44, 56));
console.log(numbers_ranges(70, 95));
console.log(numbers_ranges(50, 89));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether two numbers are in range 40..60 or in the range 70..100 inclusive</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
78,JavaScript: Check whether the last digit of the three given positive integers is same,Write a JavaScript program to check whether the last digit of the three given positive integers is same.,"function last_digit(x, y, z)
{
  if ((x > 0) && y > 0 && z > 0)
    {
     return (x % 10 == y % 10 && y % 10 == z % 10 && x % 10 == z % 10);
   }
  else
    return false;
}

console.log(last_digit(20, 30, 400));
console.log(last_digit(-20, 30, 400));
console.log(last_digit(20, -30, 400));
console.log(last_digit(20, 30, -400));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether the last digit of the three given positive integers is same.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
76,JavaScript: Find the larger number from the two given positive integers,"Write a JavaScript program to find the larger number from the two given positive integers, the two numbers are in the range 40..60 inclusive.","function max_townums_range(x, y) {
  if (x >= 40 && x <= 60 && y >= 40 && y <= 60) {
    if (x === y) {
      return ""Numbers are the same"";
    } else if (x > y) {
      return x;
    } else {
      return y;
    }
  } else {
    return ""Numbers don't fit in range"";
  }
}

console.log(max_townums_range(45, 60));
console.log(max_townums_range(25, 60));
console.log(max_townums_range(45, 80));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to find the larger number from the two given positive integers, the two numbers  are in the range 40..60 inclusive.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
77,JavaScript: Check a given string contains 2 to 4 numbers of a specified character,Write a JavaScript program to check a given string contains 2 to 4 numbers of a specified character.,"function check_char(str1, char)
 {
  ctr = 0;
  for (let i = 0; i < str1.length; i++)
  {
    if ((str1.charAt(i) == char) && (i >= 1 && i <= 3))
    {
        ctr=1;
        break;
    }
   }
   if (ctr==1) return true;
   return false;
}
console.log(check_char(""Python"", ""y""));
console.log(check_char(""JavaScript"", ""a""));
console.log(check_char(""Console"", ""o""));
console.log(check_char(""Console"", ""C""));
console.log(check_char(""Console"", ""e""));
console.log(check_char(""JavaScript"", ""S""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check a given string contains 2 to 4 numbers of a specified character.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
79,JavaScript: Create new string with first 3 characters are in lower case,Write a JavaScript program to create a new string with first 3 characters are in lower case from a given string. If the string length is less than 3 convert all the characters in upper case.,"function upper_lower(str) {
  if (str.length < 3) {
    return str.toUpperCase();
  }
  front_part = (str.substring(0, 3)).toLowerCase();
  back_part = str.substring(3, str.length);  
  return front_part + back_part;
}
console.log(upper_lower(""Python""));
console.log(upper_lower(""Py""));
console.log(upper_lower(""JAVAScript""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create new string with first 3 characters are in lower case from a given string. If the string length is less than 3 convert all the characters in upper case.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
80,JavaScript: Check the total marks of a student in various examinations," Write a JavaScript program to check the total marks of a student in various examinations. The student will get A+ grade if the total marks are in the range 89..100 inclusive, if the examination is ""Final-exam."" the student will get A+ grade where total marks must be greater than or equal to 90. Return true if the student get A+ grade or false otherwise.","function exam_status(totmarks,is_exam)
  {
  if (is_exam) {
    return totmarks >= 90;
  }
 return (totmarks >= 89 && totmarks <= 100);
 }

console.log(exam_status(""78"", "" ""));
console.log(exam_status(""89"", ""true ""));
console.log(exam_status(""99"", ""true ""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check the total marks of a student in various examinations</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
81,JavaScript: Compute the sum of the two given integers,"Write a JavaScript program to compute the sum of the two given integers, If the sum is in the range 50..80 return 65 other wise return 80.","function sortaSum(x, y) 
 {
  const sum_nums = x + y;
  if (sum_nums >= 50 && sum_nums <= 80) {
    return 65;
  }
  return 80;
}

console.log(sortaSum(30,20));
console.log(sortaSum(90,80));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to compute the sum of the two given integers, If the sum is in the range 50..80  return 65 other wise return 80.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
82,JavaScript: Check from two given integers whether one of them is 8 or their sum or difference is 8,Write a JavaScript program to check from two given integers whether one of them is 8 or their sum or difference is 8.,"function check8(x, y) {
  if (x == 8 || y == 8) {
    return true;
  }

  if (x + y == 8 || Math.abs(x - y) == 8)
  {
    return true;
  }

  return false;
}

console.log(check8(7, 8));
console.log(check8(16, 8));
console.log(check8(24, 32));
console.log(check8(17, 18));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Write a JavaScript program to check from two given integers whether one of them is 8 or their sum or difference is 8.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
83,"JavaScript: Check three given numbers, if the three numbers are same return 30 otherwise return 20 and if two numbers are same return 40 ","Write a JavaScript program to check three given numbers, if the three numbers are same return 30 otherwise return 20 and if two numbers are same return 40.","function three_numbers(x, y, z) {
  if (x == y && y == z) {
    return 30;
  }

  if (x == y || y == z || z == x) {
    return 40;
  }

  return 20;
}
console.log(three_numbers(8, 8, 8));
console.log(three_numbers(8, 8, 18));
console.log(three_numbers(8, 7, 18));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check three given numbers, if the three numbers are same return 30 otherwise return 20 and if two numbers are same return 40.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
85,JavaScript: Check from three given numbers that two or all of them have the same rightmost digit, Write a JavaScript program to check from three given numbers (non negative integers) that two or all of them have the same rightmost digit.,"function same_last_digit(p, q, r) {
    return (p % 10 === q % 10) ||
           (p % 10 === r % 10) ||
           (q % 10 === r % 10);
           
}

console.log(same_last_digit(22,32,42));
console.log(same_last_digit(102,302,2));
console.log(same_last_digit(20,22,45));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check from three  given numbers (non negative integers) that two  or all of them have the same rightmost digit.</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
87,JavaScript: Check two given integer values and return true if one of the number is 15 or if their sum or difference is 15, Write a JavaScript program to check two given integer values and return true if one of the number is 15 or if their sum or difference is 15.,"function test_number(x, y) {
    return (x === 15 || y === 15 || x + y === 15 || Math.abs(x - y) === 15);
}

console.log(test_number(15, 9));
console.log(test_number(25, 15));
console.log(test_number(7, 8));
console.log(test_number(25, 10));
console.log(test_number(5, 9));
console.log(test_number(7, 9));
console.log(test_number(9, 25));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check two given integer values and return true if one of the number is 15 or if their sum or difference is 15.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
88,JavaScript: Check from two given non-negative integers that whether one of the number is multiple of 7 or 11, Write a JavaScript program to check two given non-negative integers that whether one of the number (not both) is multiple of 7 or 11.,"function valCheck (a, b) {
if (!((a % 7 == 0 || a % 11 == 0) && (b % 7 == 0 || b % 11 == 0))) {
return ((a % 7 == 0 || a % 11 == 0) || (b % 7 == 0 || b % 11 == 0));
}
else
return false;
}
console.log(valCheck(14, 21));
console.log(valCheck(14, 20));
console.log(valCheck(16, 20));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check two given non-negative integers that whether one of the number (not both) is multiple of 7 or 11.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
89,JavaScript: Check whether a given number presents in the range 40..10000,"
 Write a JavaScript program to check whether a given number is presents in the range 40..10000.

For example 40 presents in 40 and 4000.","function test_digit(x, y, n) 
  {    
    if (n < 40 || n > 10000)
      return false;
    else
      if (n >= x && n <= y)
        return true;
      else
        return false;
  }
console.log(test_digit(40, 4000, 45));  
console.log(test_digit(80, 320, 79));  
console.log(test_digit(89, 4000, 30));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether a given number is presents in the range 40..10000. </title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
90,JavaScript: Reverse a given string, Write a JavaScript program to reverse a given string.,"function string_reverse(str) 
{
    return str.split("""").reverse().join("""");
}

console.log(string_reverse(""w3resource""));
console.log(string_reverse(""www""));
console.log(string_reverse(""JavaScript""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to reverse a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
91,JavaScript: Replace every character in a given string with the character following it in the alphabet, Write a JavaScript program to replace every character in a given string with the character following it in the alphabet.,"function string_reverse(str) 
function LetterChanges(text) {
//https://goo.gl/R8gn7u
var s = text.split('');
for (var i = 0; i < s.length; i++) {
// Caesar cipher
switch(s[i]) {
case ' ':
break;
case 'z':
s[i] = 'a';
break;
case 'Z': 
s[i] = 'A';
break;
default:
s[i] = String.fromCharCode(1 + s[i].charCodeAt(0));
}

// Upper-case vowels
switch(s[i]) {
case 'a': case 'e': case 'i': case 'o': case 'u':
s[i] = s[i].toUpperCase();
}
}
return s.join('');
}
console.log(LetterChanges(""PYTHON""));
console.log(LetterChanges(""W3R""));
console.log(LetterChanges(""php""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to replace every character in a given string with the character following it in the alphabet.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
92,JavaScript: Capitalize the first letter of each word of a given string, Write a JavaScript program to capitalize the first letter of each word of a given string.,"function capital_letter(str) 
{
    str = str.split("" "");

    for (var i = 0, x = str.length; i < x; i++) {
        str[i] = str[i][0].toUpperCase() + str[i].substr(1);
    }

    return str.join("" "");
}

console.log(capital_letter(""Write a JavaScript program to capitalize the first letter of each word of a given string.""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to capitalize the first letter of each word of a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
93,JavaScript: Convert a given number to hours and minutes, Write a JavaScript program to convert a given number to hours and minutes.,"function time_convert(num)
 { 
  var hours = Math.floor(num / 60);  
  var minutes = num % 60;
  return hours + "":"" + minutes;         
}

console.log(time_convert(71));
console.log(time_convert(450));
console.log(time_convert(1441));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to convert a given number to hours and minutes.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
94,JavaScript: Convert the letters of a given string in alphabetical order, Write a JavaScript program to convert the letters of a given string in alphabetical order.,"function alphabet_Soup(str) { 

    return str.split("""").sort().join("""");
         
}

console.log(alphabet_Soup(""Python""));

console.log(alphabet_Soup(""Exercises""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to convert the letters of a given string  in alphabetical order.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
95,JavaScript: Check whether the characters a and b are separated by exactly 3 places anywhere in a given string, Write a JavaScript program to check whether the characters a and b are separated by exactly 3 places anywhere (at least once) in a given string.,"function ab_Check(str)
 {
    return (/a...b/).test(str) || (/b...a/).test(str);
 }

console.log(ab_Check(""Chainsbreak""));
console.log(ab_Check(""pane borrowed""));
console.log(ab_Check(""abCheck""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether the characters a and b are separated by exactly 3 places anywhere (at least once) in a given string.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
96,JavaScript: Count the number of vowels in a given string, Write a JavaScript program to count the number of vowels in a given string.,"function vowel_Count(str)
{ 

  return str.replace(/[^aeiou]/g, """").length; 
}

console.log(vowel_Count(""Python""));
console.log(vowel_Count(""w3resource.com""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to count the number of vowels in a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
97,JavaScript: Check whether a given string contains equal number of p's and t's, Write a JavaScript program to check whether a given string contains equal number of p's and t's.,"function equal_pt(str)
{ 
  const str_p = str.replace(/[^p]/g, """");

  const str_t = str.replace(/[^t]/g, """");

  const p_num = str_p.length;
  const s_num = str_t.length;

  return p_num === s_num;
         
}
console.log(equal_pt(""paatpss""));
console.log(equal_pt(""paatps""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>check whether a given string contains equal number of p's and t's</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
98,JavaScript: Divide two positive numbers and return a string with properly formatted commas,Write a JavaScript program to divide two positive numbers and return a string with properly formatted commas.,"function division_string(n1, n2) {
  
n1 = 80;
n2 = 6;

var div = Math.round(n1 / n2).toString(),
result_array = div.split("""");

if (div >= 1000)
{
for (var i = div.length - 3; i > 0; i -= 3) 
{
result_array.splice(i, 0, "","");
}
result_array;
}
console.log(result_array);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to divide two positive numbers and return a string with properly formatted commas.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
99,JavaScript: Create a new string of specified copies of a given string,Write a JavaScript program to create a new string of specified copies (positive number) of a given string.,"function string_copies (str, n) 
{
  if (n < 0)
    return false;
  else
  return str.repeat(n);
}
console.log(string_copies(""abc"", 5));
console.log(string_copies(""abc"", 0));
console.log(string_copies(""abc"", -2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string of specified copies of a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
100,JavaScript: Create a new string of 4 copies of the last 3 characters of a given original string,Write a JavaScript program to create a new string of 4 copies of the last 3 characters of a given original string. The length of the given string must be 3 and above.,"function newstring(str)
{
  if (str.length >= 3) {
    result_str = str.substring(str.length - 3);
    return result_str + result_str + result_str + result_str;
  }
  else
    return false;
}
console.log(newstring(""Python 3.0""));
console.log(newstring(""JS""));
console.log(newstring(""JavaScript""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string of 4 copies of the last 3 characters of a given original string. The length of the given string must be 3 and above.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
101,JavaScript: Extract the first half of a string of even length,Write a JavaScript program to extract the first half of a string of even length.,"function first_half (str) {
  if (str.length % 2 == 0) {
    return str.slice(0, str.length / 2);
  }
  return str;
}
console.log(first_half(""Python""));  
console.log(first_half(""JavaScript"")); 
console.log(first_half(""PHP""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to  extract the first half of a string of even length.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
102,JavaScript: Create a new string without the first and last character of a given string,Write a JavaScript program to create a new string without the first and last character of a given string.,"function without_first_end(str) {
  return str.substring(1, str.length - 1);
}
console.log(without_first_end('JavaScript'));
console.log(without_first_end('JS'));
console.log(without_first_end('PHP'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string without the first and last character of a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
103,JavaScript: Concatenate two strings except their first character,Write a JavaScript program to concatenate two strings except their first character.,"function concatenate(str1, str2) {
  str1 = str1.substring(1, str1.length);
  str2 = str2.substring(1, str2.length);
  return str1 + str2;
}

console.log(concatenate(""PHP"",""JS""));
console.log(concatenate(""A"",""B""));
console.log(concatenate(""AA"",""BB""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to concatenate two strings except their first character.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
104,JavaScript: Move last three character to the start of a specified string,Write a JavaScript program to move last three character to the start of a given string. The string length must be greater or equal to three.,"function right_three(str) {
     if (str.length > 1)
       {
         return str.slice(-3) + str.slice(0, -3);
       }
  return str;
}
console.log(right_three(""Python""));
console.log(right_three(""JavaScript""));
console.log(right_three(""Hi""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to move last three character to the start of a given string. The string length must be 3.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
105,JavaScript: Create a string using the middle three characters of a given string of odd length,"Write a JavaScript program to create a string using the middle three characters of a given string of odd
length. The string length must be greater or equal to three.","function middle_three(str) {
   if (str.length % 2!= 0) {
   
    mid = (str.length + 1)/2;
    return str.slice(mid - 2, mid + 1);
    }
  return str;
}
console.log(middle_three('abcdefg'));
console.log(middle_three('HTML5'));
console.log(middle_three('Python'));
console.log(middle_three('PHP'));
console.log(middle_three('Exercises'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a string using the middle three characters of a given string of odd length. The string length must be 3.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
107,JavaScript: Test whether a string end with "Script" ,Write a JavaScript program to test whether a string end with "Script". The string length must be greater or equal to 6.,"function end_script(str) {
  if (str.substring(str.length - 6, str.length) == 'Script') 
  {
    return true;
  } 
  else 
  {
    return false;
  }
}
console.log(end_script(""JavaScript""));
console.log(end_script(""Java Script""));
console.log(end_script(""Java Scripts""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to test whether a string end with “Script”.  The string length must be greater or equal to 6.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
108,JavaScript: Display the city name if the string begins with "Los" or "New" otherwise return blank ,Write a JavaScript program to display the city name if the string begins with "Los" or "New" otherwise return blank.,"function city_name(str) {
  if (str.length >= 3 && ((str.substring(0, 3) == 'Los')
                          || (str.substring(0, 3) == 'New')))
   
      {
          return str;
    }

  return '';
}

console.log(city_name(""New York""));
console.log(city_name(""Los Angeles""));
console.log(city_name(""London""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to display the city name  if the string begins with “Los” or “New” otherwise return blank.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
109,"JavaScript: Create a new string from a given string, removing the first and last characters of the string if the first or last character are 'P' ","Write a JavaScript program to create a new string from a given string, removing the first and last characters of the string if the first or last character are 'P'. Return the original string if the condition is not satisfied.","function nop(str) {
  let start_pos = 0;
  let end_pos = str.length;

  if (str.length > 0 && str.charAt(0) == 'P') 
    { 
      start_pos = 1; 
    }

  if (str.length > 1 && str.charAt(str.length - 1) == 'P') 
  {
    end_pos--;
  }

  return str.substring(start_pos, end_pos);
}

console.log(nop(""PythonP""));
console.log(nop(""Python""));
console.log(nop(""JavaScript""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string from a given string, removing the first and last characters of the string if the first or  last character are ?P</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
110,JavaScript: Create a new string taking the first and last n characters from a given string ,Write a JavaScript program to create a new string taking the first and last n characters from a given string. The string length must be greater or equal to n.,"function two_string(str, n)
  {
    first_part = str.substring(0, n);
    last_part = str.substring(str.length - n);
    return first_part + last_part;
 }

console.log(two_string(""JavaScript"", 2));
console.log(two_string(""JavaScript"", 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string using the first and last n characters from a given string. The string length must be greater or equal to n.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
111,JavaScript: Compute the sum of three elements of a given array of integers of length 3 ,Write a JavaScript program to compute the sum of three elements of a given array of integers of length 3.,"function sum_three(nums)
{
  return nums[0] + nums[1] + nums[2];
}

console.log(sum_three([10, 32, 20]));  
console.log(sum_three([5, 7, 9])); 
console.log(sum_three([0, 8, -11]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to compute the sum of three elements of an given integers of length 3.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
112,JavaScript: Rotate the elements left of a given array of integers of length 3,Write a JavaScript program to rotate the elements left of a given array of integers of length 3.,"function rotate_elements_left(array)
{
    return [array[1], array[2], array[0]];
}
console.log(rotate_elements_left([3, 4, 5]));  
console.log(rotate_elements_left([0, -1, 2]));  
console.log(rotate_elements_left([7, 6, 5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to rotate the elements left of a given array of integers of length 3.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
113,JavaScript: Check whether 1 appears in first or last position of a given array of integers,Write a JavaScript program to check whether 1 appears in first or last position of a given array of integers. The array length must be greater or equal to 1.,"function first_last_1(nums)
{
  var end_pos = nums.length - 1;
  return nums[0] == 1 || nums[end_pos] == 1;
}


console.log(first_last_1([1, 3, 5]));
console.log(first_last_1([1, 3, 5, 1]));
console.log(first_last_1([2, 4, 6]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether 1 appears in first or last position of a given array of integers. The array length must be greater or equal to 1.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
114,JavaScript: Check whether the first and last elements are equal of a given array of integers length 3,Write a JavaScript program to check whether the first and last elements are equal of a given array of integers length 3.,"function first_last_same(nums)
   {
    const end = nums.length - 1;
    if (nums.length >= 1){
       return nums[0] == nums[end];
    } else {return false;}
}

console.log(first_last_same([10, 20, 30])); 
console.log(first_last_same([10, 20, 30, 10])); 
console.log(first_last_same([20, 20, 20]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether the first and last elements are equal of a given array of integers length 3</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Basic
115,JavaScript: Reverse the elements of a given array of integers length 3,Write a JavaScript program to reverse the elements of a given array of integers length 3.,"function reverse3(array) {
    return array.map((element, idx, arr) => arr[(arr.length - 1) - idx]);
}

console.log(reverse3([5, 4, 3])); 
console.log(reverse3([1, 0, -1]));  
console.log(reverse3([2, 3, 1]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to reverse the elements of a given array of integers length 3.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
117,JavaScript: Create a new array taking the middle elements of the two arrays of integer and each length 3,Write a JavaScript program to create a new array taking the middle elements of the two arrays of integer and each length 3.,"function middle_elements(a, b) 
{
  var new_array = []
  new_array.push(a[1], b[1]);

    return new_array;
}
console.log(middle_elements([1, 2, 3], [1, 5, 6]));  
console.log(middle_elements([3, 3, 3], [2, 8, 0]));  
console.log(middle_elements([4, 2, 7], [2, 4, 5])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new array taking the middle elements of the two arrays of integer and each length 3.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
119,JavaScript: Test whether an array of integers of length 2 contains 1 or a 3,Write a JavaScript program to test whether an array of integers of length 2 contains 1 or a 3.,"function contains13(nums) {

    if (nums.indexOf(1) != -1 || nums.indexOf(3) != -1){
       return true
    } 
    else
    {
       return false
    }
}

console.log(contains13([1, 5]));  
console.log(contains13([2, 3]));  
console.log(contains13([7, 5])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to test whether an array of integers of length 2 contains 1 or a 3.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
120,JavaScript: Test whether an array of integers of length 2 does not contain 1 or a 3,Write a JavaScript program to test whether an array of integers of length 2 does not contain 1 or a 3.,"function is13(nums) {
  if (nums.indexOf(1) == -1 && nums.indexOf(3) == -1){
      return true;
  } else {
      return false;
  }
}

console.log(is13([7, 8]));
console.log(is13([3, 2]));
console.log(is13([0, 1])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to test whether an array of integers of length 2 does not contain 1 or a 3.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
121,JavaScript: Test whether a given array of integers contains 30 or 40 twice,"Write a JavaScript program to test whether a given array of integers contains 30 or 40 twice. The array length should be 0, 1, or 2.","function twice3040(arra1) {
    let a = arra1[0],
        b = arra1[1];
    return (a === 30 && b === 30) || (a === 40 && b === 40);
}

console.log(twice3040([30, 30]));
console.log(twice3040([40, 40]));
console.log(twice3040([20, 20]));
console.log(twice3040([30]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to test whether a given array of integers contains 30 or 40 twice. The array length should be 0, 1, or 2.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
122,JavaScript: Swap the first and last elements of a given array of integers,Write a JavaScript program to swap the first and last elements of a given array of integers. The array length should be at least 1.,"function swap(arra) {
    [arra[0], arra[arra.length - 1]] = [arra[arra.length - 1], arra[0]];
    return arra;
}
console.log(swap([1, 2, 3, 4]));  
console.log(swap([0, 2, 1]));  
console.log(swap([3])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to swap the first and last elements of a given array of integers. The array length should be  at least 1.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
123,JavaScript: Add two digits of a given positive integer of length two,Write a JavaScript program to add two digits of a given positive integer of length two.,"function add_two_digits(n)
   {
      return n % 10 + Math.floor(n / 10);
   }
console.log(add_two_digits(25))
console.log(add_two_digits(50))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to add two digits of a given positive integer of length two.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
124,JavaScript: Add two positive integers without carry,Write a JavaScript to add two positive integers without carry.,"function add_two_int_without_carrying(n1, n2) {
    var result = 0,
        x = 1;
    while (n1 > 0 && n2 > 0) {
        result += x * ((n1 + n2) % 10);
        n1 = Math.floor(n1 / 10);
        n2 = Math.floor(n2 / 10);
        x*= 10;
    }
    return result;
}
console.log(add_two_int_without_carrying(222, 911))
console.log(add_two_int_without_carrying(200, 900))

","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript to add two positive integers without carry</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
125,JavaScript: Find the longest string from a given array of strings,Write a JavaScript to find the longest string from a given array of strings.,"function longest_string(str_ara) {
  var max = str_ara[0].length;
  str_ara.map(v => max = Math.max(max, v.length));
  result = str_ara.filter(v => v.length == max);
  return result;
}

console.log(longest_string(['a', 'aa', 'aaa',
                                          'aaaaa','aaaa']))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript to find the longest string from a given array of strings</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
126,JavaScript: Replace each character of a given string by the next one in the English alphabet,Write a JavaScript to replace each character of a given string by the next one in the English alphabet.Note: ‘a’ will be replace by ‘b’ or ‘z’ would be replaced by ‘a’.,"function alphabet_char_Shift(str) {
  var all_chars = str.split("""");
  for(var i = 0; i < all_chars.length; i++) {
    var n = all_chars[i].charCodeAt() - 'a'.charCodeAt();
    n = (n + 1) % 26; 
    all_chars[i] = String.fromCharCode(n + 'a'.charCodeAt());
  }
  return all_chars.join("""");
}

console.log(alphabet_char_Shift(""abcdxyz""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Write a JavaScript to replace each character of a given string by the next one in the English alphabet</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
127,JavaScript: Compute the sum of two parts and store into an array of size two,"Write a JavaScript code to divide a given array of positive integers into two parts. First element goes to first part, second element goes to second part, and third element goes to first part and so on. Now compute the sum of two parts and store into an array of size two.","function alternate_Sums(arr) {
  var result = [0, 0];
  for(var i = 0; i < arr.length; i++) 
  {
    if(i % 2) result[1] += arr[i];
    else
      result[0] += arr[i];
  }
  return result
}

console.log(alternate_Sums([1, 3, 6, 2, 5, 10]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Compute the sum of two parts and store into an array of size two</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
129,JavaScript: Check whether two arrays of integers of same length are similar or not,Write a JavaScript program to check whether two arrays of integers of same length are similar or not. The arrays will be similar if one array can be obtained from another array by swapping at most one pair of elements.,"function array_checking(arra1, arra2) {

  for(var i = 0; i < arra1.length; i++) {
    for(var j = i; j < arra1.length; j++) {
      var result = true,
        temp = arra1[i];
      arra1[i] = arra1[j];
      arra1[j] = temp;
      for(var k = 0; k < arra1.length; k++) {
        if(arra1[k] !== arra2[k]) {
          result = false;
          break;
        }
      }
      if(result) {
        return true;
      }
      arra1[j] = arra1[i];
      arra1[i] = temp;
    }
  }
  return false;
}

console.log(array_checking([10,20,30], [10,20,30]))
console.log(array_checking([10,20,30], [30,10,20]))
console.log(array_checking([10,20,30,40], [10,30,20,40]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Write a JavaScript program to check whether two arrays of integers of same length are similar or not. The arrays will be similar if one array can be obtained from another array by swapping at most one pair of elements</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
130,JavaScript: Check whether two given integers are similar or not,"Write a JavaScript program to check whether two given integers are similar or not, if a given divisor divides both integers and it does not divide either.","function checking_numbers(x, y, divisor) {
  if(x % divisor === 0 && y % divisor === 0 || x % divisor !== 0 && y % divisor !==
    0) {
    return true;
  }
  return false;
}

console.log(checking_numbers(10, 25, 5))
console.log(checking_numbers(10, 20, 5))
console.log(checking_numbers(10, 20, 4))

","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Check whether two given integers are similar or not</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
131,JavaScript: Check whether it is possible to replace $ in a specified expression,"Write a JavaScript program to check whether it is possible to replace $ in a given expression x $ y = z with one of the four signs +, -, * or / to obtain a correct expression.For example x = 10, y = 30 and z = 300, we can replace $ with a multiple operator (*) to obtain x * y = z","function check_arithmetic_Expression(x, y, z) {
  return x + y == z || x * y == z || x / y == z || x - y == z;
}

console.log(check_arithmetic_Expression(10, 25, 35))
console.log(check_arithmetic_Expression(10, 25, 250))
console.log(check_arithmetic_Expression(30, 25, 5))
console.log(check_arithmetic_Expression(100, 25, 4.0))
console.log(check_arithmetic_Expression(100, 25, 25))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Check whether it is possible to replace $ in a specified expression</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Basic
133,JavaScript: Find the maximum possible sum of some of its k consecutive numbers of a specified array of positive integers,Write a JavaScript program to find the maximum possible sum of some of its k consecutive numbers (numbers that follow each other in order.) of a given array of positive integers.,"function array_max_consecutive_sum(nums, k) {
  let result = 0;
  let temp_sum = 0;
  for (var i = 0; i < k - 1; i++) {
    temp_sum += nums[i];
  }
  for (var i = k - 1; i < nums.length; i++) {
    temp_sum += nums[i];
    if (temp_sum > result) {
      result = temp_sum;
    }
    temp_sum -= nums[i - k + 1];
  }
  return result;
}

console.log(array_max_consecutive_sum([1, 2, 3, 14, 5], 2))
console.log(array_max_consecutive_sum([2, 3, 5, 1, 6], 3))
console.log(array_max_consecutive_sum([9, 3, 5, 1, 7], 2))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the maximum possible sum of some of its k consecutive numbers of a specified array of positive integers.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
135,JavaScript: Find the maximum difference among all possible pairs of a given array of integers,Write a JavaScript program to find the maximum difference among all possible pairs of a given array of integers.,"function array_max_diff(arr) {

    var max_result = 0;

    for(var i=0;i<arr.length;i++)
       {
        for(var k=0; k!=i && k<arr.length; k++)
        {
            var diff = Math.abs(arr[i]-arr[k]);
            max_result = Math.max(max_result, diff);
        }
    }
    return max_result;
}
console.log(array_max_diff([1, 2, 3, 8, 9]))
console.log(array_max_diff([1, 2, 3, 18, 9]))
console.log(array_max_diff([13, 2, 3, 8, 9]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the maximum difference among all possible pairs of a given array of integers.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
136,JavaScript: Find the number which appears most in a given array of integers,Write a JavaScript program to find the number which appears most in a given array of integers.,"function array_element_mode(arr) {
  var ctr = [],
    ans = 0;

  for(var i = 0; i < 10; i++) {
    ctr.push(0);
  }
  for(var i = 0; i < arr.length; i++) {
    ctr[arr[i] - 1]++;
    if(ctr[arr[i] - 1] > ctr[ans]) {
      ans = arr[i] - 1;
    }
  }
  return ans + 1;  
}
console.log(array_element_mode([1, 2, 3, 2, 2, 8, 1, 9]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the number which appears most in a given array of integers</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
137,JavaScript: Replace all the numbers with a specified number of a given array of integers,Write a JavaScript program to replace all the numbers with a specified number of a given array of integers.,"function array_element_replace(arr, old_value, new_value) {
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] === old_value) {
      arr[i] = new_value;
    }
  }
  return arr;
}
num = [1, 2, 3, 2, 2, 8, 1, 9];
console.log(""Original Array: ""+num);
console.log(array_element_replace(num, 2, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Replace all the numbers with a specified number of a given array of integers</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
138,JavaScript: Compute the sum of absolute differences of consecutive numbers of a given array of integers,Write a JavaScript program to compute the sum of absolute differences of consecutive numbers of a given array of integers.,"function sum_adjacent_difference(arr) {
	var result = 0;
	for (var i = 1; i < arr.length; i++) {
		result += Math.abs(arr[i] - arr[i - 1]);
	}
	return result;
}

console.log(sum_adjacent_difference([1, 2, 3, 2, -5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Compute the sum of absolute differences of consecutive numbers of a given array of integers</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
139,JavaScript: Find the shortest possible string which can create a string to make it a palindrome by adding characters to the end of it,Write a JavaScript program to find the shortest possible string which can create a string to make it a palindrome by adding characters to the end of it.,"function build_Palindrome(new_str) {
  var flag;
  for (var i = new_str.length;; i++) {
    flag = true;
    for (var j = 0; j < i - j - 1; j++) {
      if (i - j - 1 < new_str.length && new_str[j] != new_str[i - j - 1]) {
        flag = false;
        break;
      }
    }
    if (flag) {
      for (var j = new_str.length; j < i; j++) {
        new_str += new_str[i - j - 1];
      }
      return new_str;
    }
  }
}

console.log(build_Palindrome(""abcddc""))
console.log(build_Palindrome(""122""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the shortest possible string which can create a string to make it a palindrome by adding characters to the end of it</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
140,JavaScript: Switch case of the minimum possible number of letters to make a given string written in the upper case or in the lower case,Write a JavaScript program to switch case of the minimum possible number of letters to make a given string written in the upper case or in the lower case.Fox example "Write" will be write and "PHp" will be "PHP","function change_case(new_str) {
  var x = 0;
  var y = 0;

  for (var i = 0; i < new_str.length; i++) {
    if (/[A-Z]/.test(new_str[i])) {
      x++;
    } else y++;
  }

  if (y > x) return new_str.toLowerCase();
  return new_str.toUpperCase();
}

console.log(change_case(""Write""))
console.log(change_case(""PHp""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Switch case of the minimum possible number of letters to make a given string written in the upper case or in the lower case</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
141,JavaScript: Rearrange characters of a given string in such way that it will become equal to another given string,Write a JavaScript program to check whether it is possible to rearrange characters of a given string in such way that it will become equal to another given string.,"function rearrangement_characters(str1, str2) {

  var first_set = str1.split(''),
      second_set = str2.split(''),
      result = true;

  first_set.sort();
  second_set.sort();

  for (var i = 0; i < Math.max(first_set.length, second_set.length); i++) {
    if (first_set[i] !== second_set[i]) {
      result = false;
    }
  }

  return result;
}

console.log(rearrangement_characters(""xyz"", ""zyx""))
console.log(rearrangement_characters(""xyz"", ""zyp""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Rearrange characters of a given string in such way that it will become equal to another given string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
142,JavaScript: Check whether there is at least one element which occurs in two given sorted arrays of integers,Write a JavaScript program to check whether there is at least one element which occurs in two given sorted arrays of integers.,"function check_common_element(arra1, arra2) {
  for (var i = 0; i < arra1.length; i++)
  {
    if (arra2.indexOf(arra1[i]) != -1) 
      return true;
  }
  return false;
}
console.log(check_common_element([1,2,3], [3,4,5]));   
console.log(check_common_element([1,2,3], [5,6,7]));   
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether there is at least one element which occurs in two given sorted arrays of integers</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
143,JavaScript: Check whether a given string contains only Latin letters and no two uppercase and no two lowercase letters are in adjacent positions,Write a JavaScript program to check whether a given string contains only Latin letters and no two uppercase and no two lowercase letters are in adjacent positions.,"function test_string(input_str) {

  var is_lower_case = function(symbol) {
    if ('a' <= symbol && symbol <= 'z') {
      return true;
    }
    return false;
  }

  var is_upper_case = function(symbol) {
    if ('A' <= symbol && symbol <= 'Z') {
      return true;
    }
    return false;
  }

  var is_first_char_lower = is_lower_case(input_str[0]),
    is_first_char_upper = is_upper_case(input_str[0]);

  if (!(is_first_char_lower || is_first_char_upper)) {
    return false;
  }

  for (var i = 1; i < input_str.length; i++) {
    if (i % 2) {
      if (is_lower_case(input_str[i]) === is_first_char_lower ||
        is_upper_case(input_str[i]) === is_first_char_upper) {
        return false;
      }
    } else {
      if (is_lower_case(input_str[i]) !== is_first_char_lower ||
        is_upper_case(input_str[i]) !== is_first_char_upper) {
        return false;
      }
    }
  }

  return true;
}

console.log(test_string('xYr'));   
console.log(test_string('XXyx'));   
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a given string contains only Latin letters and no two uppercase and no two lowercase letters are in adjacent positions</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
144,JavaScript: Find the number of inversions of a specified array of integers,Write a JavaScript program to find the number of inversions of a given array of integers.Note: Two elements of the array a stored at positions i and j form an inversion if a[i] > a[j] and i < j.,"function number_of_InversionsNaive(arr) {
    var ctr = 0;
    for (var i = 0; i < arr.length; i++) {
        for (var j = i + 1; j < arr.length; j++) {
            if (arr[i] > arr[j]) 
              ctr++;
        }
    }
    return ctr;
}

console.log(number_of_InversionsNaive([0, 3, 2, 5, 9]));   
console.log(number_of_InversionsNaive([1, 5, 4, 3]));   
console.log(number_of_InversionsNaive([10, 30, 20, -10]));  
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of inversions of a specified array of integers</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
145,JavaScript: Find the maximum number from a given positive integer by deleting exactly one digit of the given number,Write a JavaScript program to find the maximum number from a given positive integer by deleting exactly one digit of the given number.,"function digit_delete(num) {
    var result = 0,
        num_digits = [];
    while (num) {
        num_digits.push(num % 10);
        num = Math.floor(num / 10);
    }
    for (var index_num = 0; index_num < num_digits.length; index_num++) {
        var n = 0;
        for (var i = num_digits.length - 1; i >= 0; i--) {
            if (i !== index_num) {
                n = n * 10 + num_digits[i];
            }
        }
        result = Math.max(n, result);
    }
    return result;
}

console.log(digit_delete(100));
console.log(digit_delete(10));
console.log(digit_delete(1245)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the maximum number from a given positive integer by deleting exactly one digit of the given number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
146,JavaScript: Find two elements of the array such that their absolute difference is not greater than a given integer but is as close to the said integer,Write a JavaScript program to find two elements of the array such that their absolute difference is not greater than a given integer but is as close to the said integer.,"function different_values(ara, n) {
    var max_val = -1;
    for (var i = 0; i < ara.length; i++) {
        for (var j = i + 1; j < ara.length; j++) {
            var x = Math.abs(ara[i] - ara[j]);
            if (x <= n) {
                max_val = Math.max(max_val, x)
            }
        }
    }
    return max_val
}
console.log(different_values([12, 10, 33, 34], 10));
console.log(different_values([12, 10, 33, 34], 24));
console.log(different_values([12, 10, 33, 44], 40));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find two elements of the array such that their absolute difference is not greater than a given integer but is as close to the said integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
147,JavaScript: Find the number of times to replace a given number with the sum of its digits until it convert to a single digit number,Write a JavaScript program to find the number of times to replace a given number with the sum of its digits until it convert to a single digit number.,"function digit_to_one(num) {

    var digitSum = function(num) {

        var digit_sum = 0;
        while (num) {
            digit_sum += num % 10;
            num = Math.floor(num / 10);
        }

        return digit_sum;
    };

    var result = 0;

    while (num >= 10) {
        result += 1;
        num = digitSum(num);
    }

    return result;
}

console.log(digit_to_one(123))
console.log(digit_to_one(156))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of times to replace a given number with the sum of its digits until it convert to a single digit number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
148,JavaScript: Divide an integer by another integer as long as the result is an integer and return the result,Write a JavaScript program to divide an integer by another integer as long as the result is an integer and return the result.,"function divide_digit(num, d) {
       if (d==1)
         return num;
       else
       {
      while (num % d === 0) {
        num /= d;
        }
    return num;
       }
}
console.log(divide_digit(-12, 2))
console.log(divide_digit(13, 2))
console.log(divide_digit(13, 1))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Divide an integer by another integer as long as the result is an integer and return the result</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
149,JavaScript: Find the number of sorted pairs formed by its elements of a given array of integers such that one element in the pair is divisible by the other one,"Write a JavaScript program to find the number of sorted pairs formed by its elements of a given array of integers such that one element in the pair is divisible by the other one.
For example - The output of [1, 3, 2] -&gt;2 - (1,3), (1,2).

The output of [2, 4, 6] -&gt; 2 - (2,4), (2,6)

The output of [2, 4, 16] -&gt; 3 - (2,4), (2,16), (4,16)","function arr_pairs(arr) {
    var result = 0;
    for (var i = 0; i < arr.length; i++)
        {
        for (var j = i + 1; j < arr.length; j++)
            {
              if (arr[i] % arr[j] === 0 || arr[j] % arr[i] === 0)
                {
                result++;
                }
         }
      }
    return result;
}
console.log(arr_pairs([1,2,3]))
console.log(arr_pairs([2,4,6]))
console.log(arr_pairs([2,4,16]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of sorted pairs formed by its elements of a given array of integers such that one element in the pair is divisible by the other one</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
150,JavaScript: Create the dot products of two given 3D vectors,Write a JavaScript program to create the dot products of two given 3D vectors.Note: The dot product is the sum of the products of the corresponding entries of the two sequences of numbers.,"function dot_product(vector1, vector2) {
  var result = 0;
  for (var i = 0; i < 3; i++) {
    result += vector1[i] * vector2[i];
  }
  return result;
}
console.log(dot_product([1,2,3], [1,2,3]))
console.log(dot_product([2,4,6], [2,4,6]))
console.log(dot_product([1,1,1], [0,1,-1]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Create the dot products of two given 3D vectors</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
152,JavaScript: Find the number of even values in sequence before the first occurrence of a given number,"Write a JavaScript program to find the number of even values in sequence before the first occurrence of a given number.
Sample sequence = [1,2,3,4,5,6,7,8]

Given number: 5

Output: 2","function find_numbers(arr_num, num) {
    var result = 0;
    for (var i = 0; i < arr_num.length; i++)
    {
        if (arr_num[i] % 2 === 0 && arr_num[i] !== num) {
            result++;
        }
        if (arr_num[i] === num) 
        {
            return result;
        }
    }
    return -1;
}

console.log(find_numbers([1,2,3,4,5,6,7,8], 5))
console.log(find_numbers([1,3,5,6,7,8], 6))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of even values in sequence before the first occurrence of a given number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
153,"JavaScript: Check a number from three given numbers where two numbers are equal, find the third one","Write a JavaScript program to check a number from three given numbers where two numbers are equal, find the third one.","function find_third_number(x, y, z) {
   if((x!==y) && (x!==z) && (y!==z))
    return ""Three numbers are unequal."";
	if(x==y) return z;
	if(x==z) return y;
	return x;
}

console.log(find_third_number(1,2,2))
console.log(find_third_number(1,1,2))
console.log(find_third_number(1,2,3))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check a number from three given numbers where two numbers are equal, find the third one</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
155,JavaScript: Calculate the sum of n + n/2 + n/4 + n/8 + ....,Write a JavaScript program to calculate the sum of n + n/2 + n/4 + n/8 + .... where n is a positive integer and all divisions are integer.,"function int_sum(num) {
    var s_sum = 0;
    while (num > 0) {
        s_sum += num;
        num = Math.floor(num / 2);
    }
    return s_sum;
}
console.log(int_sum(8))
console.log(int_sum(9))
console.log(int_sum(26))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Calculate the sum of n + n/2 + n/4 + n/8 + ....</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
156,JavaScript: Check whether a given string represents a correct sentence or not,Write a JavaScript program to check whether a given string represents a correct sentence or not. A string is considered correct sentence if it starts with the capital letter and ends with a full stop (.).,"function is_correct_Sentence(input_str) {
    var first_char = input_str[0];
    var last_char = input_str[input_str.length - 1];
    return /[A-Z]/.test(first_char) && last_char == "".""
}
console.log(is_correct_Sentence(""This tool will help you write better English and efficiently corrects texts.""));
console.log(is_correct_Sentence(""This tool will help you write better English and efficiently corrects texts""));            
console.log(is_correct_Sentence(""this tool will help you write better English and efficiently corrects texts.""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a given string represents a correct sentence or not</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
157,JavaScript: Check whether a matrix is a diagonal matrix or not,"Write a JavaScript program to check whether a matrix is a diagonal matrix or not. In linear algebra, a diagonal matrix is a matrix in which the entries outside the main diagonal are all zero (the diagonal from the upper left to the lower right).
Example: 

[1, 0, 0], [0, 2, 0], [0, 0, 3] ]) = true

[1, 0, 0], [0, 2, 3], [0, 0, 3] ]) = false","function is_diagonal_matrix(user_matrix) {
    for (var i = 0; i < user_matrix.length; i++) {
        for (var j = 0; j < user_matrix.length; j++) {
            if (i !== j && user_matrix[i][j] !== 0) 
              return false;
        }
    }
    return true;
}


console.log(is_diagonal_matrix([[1, 0, 0], [0, 2, 0], [0, 0, 3] ]));
console.log(is_diagonal_matrix([[1, 0, 0], [0, 2, 3], [0, 0, 3] ]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a matrix is a diagonal matrix or not</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
158,JavaScript: Find all the possible options to replace the hash in a string,"Write a JavaScript program to find all the possible options to replace the hash in a string (Consists of digits and one hash (#)) with a digit to produce an integer divisible by 3.For a string ""2*0"", the output should be : [""210"", ""240"", ""270""]","function is_divisible_by3(mask_str) {

  var digitSum = 0,
    left = '0'.charCodeAt(),
    right = '9'.charCodeAt(),
    result = [],
    mask_data = mask_str.split(''),
    hash_pos = -1;

  for (var i = 0; i < mask_data.length; i++) {
    if (left <= mask_data[i].charCodeAt() && mask_data[i].charCodeAt() <= right)
    {
      digitSum += mask_data[i].charCodeAt() - left;
    } 
    else 
    {
      hash_pos = i;
    }
  }

  for (var i = 0; i < 10; i++) {
    if ((digitSum + i) % 3 === 0) {
      mask_data[hash_pos] = String.fromCharCode(left + i);
      result.push(mask_data.join(''));
    }
  }

  return result;
}

console.log(is_divisible_by3(""2#0""))
console.log(is_divisible_by3(""4#2""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find all the possible options to replace the hash in a string</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
159,JavaScript: Check whether a given matrix is an identity matrix,"Write a JavaScript program to check whether a given matrix is an identity matrix.
Note: In linear algebra, the identity matrix, or sometimes ambiguously called a unit matrix, of size n is the n × n square matrix with ones on the main diagonal and zeros elsewhere.

[[1, 0, 0], [0, 1, 0], [0, 0, 1]] -&gt; true

[[1, 0, 0], [0, 1, 0], [1, 0, 1]] -&gt; false","function is_identity_Matrix(matrix_data) {
  for (var i = 0; i < matrix_data.length; i++) 
   {
    for (var j = 0; j < matrix_data.length; j++)
     {
      if (matrix_data[i][j] !== 1 && i === j || matrix_data[i][j] && i !== j)
      {
        return false;
      }
    }
  }
  return true;
}

console.log(is_identity_Matrix([[1, 0, 0],  [0, 1, 0],  [0, 0, 1]]))
console.log(is_identity_Matrix([[1, 0, 1],  [0, 1, 0],  [0, 0, 1]]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check if a given matrix is an identity matrix</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
160,JavaScript: Check whether a given number is in a given range,Write a JavaScript program to check whether a given number is in a given range.,"function is_inrange(x, y, z) 
{
    return y >= x && y <= z;
}

console.log(is_inrange(1,2,3));
console.log(is_inrange(1,2,-3));
console.log(is_inrange(1.1,1.2,1.3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check if a given number is in a given range</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
161,JavaScript: Check whether a given integer has an increasing digits sequence,Write a JavaScript program to check whether a given integer has an increasing digits sequence.,"function is_increasing_digits_Sequence(num) {

  var arr_num = ('' + num).split('');

  for (var i = 0; i < arr_num.length - 1; i++) {
    if (parseInt(arr_num[i]) >= parseInt(arr_num[i + 1]))
      return false;
    }
  return true;
}

console.log(is_increasing_digits_Sequence(123));
console.log(is_increasing_digits_Sequence(1223));
console.log(is_increasing_digits_Sequence(45677));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a given integer has an increasing digits sequence</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
162,JavaScript: Check whether a point lies strictly inside a given circle,"Write a JavaScript program to check whether a point lies strictly inside a given circle.
Input: 

Center of the circle (x, y)

Radius of circle: r

Point inside a circle (a, b)","function check_a_point(a, b, x, y, r) {
    var dist_points = (a - x) * (a - x) + (b - y) * (b - y);
    r *= r;
    if (dist_points < r) {
        return true;
    }
    return false;
}

console.log(check_a_point(0, 0, 2, 4, 6));
console.log(check_a_point(0, 0, 6, 8, 6));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a point lies strictly inside a given circle</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
163,JavaScript: Check whether a given matrix is lower triangular or not,Write a JavaScript program to check whether a given matrix is lower triangular or not.Note: A square matrix is called lower triangular if all the entries above the main diagonal are zero.,"function lower_triangular_matrix(user_matrix) {
    for (var i = 0; i < user_matrix.length; i++) 
         {
        for (var j = 0; j < user_matrix[0].length; j++) 
            {
            if (j > i && user_matrix[i][j] !== 0)
              return false;
        }
    }
    return true;
}

console.log(lower_triangular_matrix([[1, 0, 0],[2, 0, 0], [0, 3, 3]]));
console.log(lower_triangular_matrix([[1, 0, 1],[2, 0, 0], [0, 3, 3]]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a given matrix is lower triangular or not</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
164,JavaScript: Check whether a given array of integers represents either a strictly increasing or a strictly decreasing sequence,Write a JavaScript program to check whether a given array of integers represents either a strictly increasing or a strictly decreasing sequence.,"function is_monotonous(num) {
    if (num.length === 1) {
        return true;
    }
    var num_direction = num[1] - num[0];
    for (var i = 0; i < num.length - 1; i++) {
        if (num_direction * (num[i + 1] - num[i]) <= 0) {
            return false;
        }
    }
    return true;
}
console.log(is_monotonous([1, 2, 3]));
console.log(is_monotonous([1, 2, 2]))
console.log(is_monotonous([-3, -2, -1]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Check whether a given array of integers represents either a strictly increasing or a strictly decreasing sequence</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
165,JavaScript: Find whether the members of a given array of integers is a permutation of numbers from 1 to a given integer,Write a JavaScript program to find whether the members of a given array of integers is a permutation of numbers from 1 to a given integer.,"function is_permutation(input_arr, n) {
    for (var i = 0; i < n; i++) {
        if (input_arr.indexOf(i + 1) < 0) 
          return false;
    }
    return true;
}
console.log(is_permutation([1, 2, 3, 4, 5], 5));
console.log(is_permutation([1, 2, 3, 5], 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find whether the members of a given array of integers is a permutation of numbers from 1 to a given integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
166,JavaScript: Create the value of NOR of two given booleans,"Write a JavaScript program to create the value of NOR of two given booleans.Note: In boolean logic, logical nor or joint denial is a truth-functional operator which produces a result that is the negation of logical or. That is, a sentence of the form (p NOR q) is true precisely when neither p nor q is true - i.e. when both of p and q are falseSample Example:For x = true and y = false, the output should be logical_Nor(x, y) = false; For x = false and y = false, the output should be logical_Nor(x, y) = true.","function test_logical_Nor(a, b) {
  return (!a && !b)
}
console.log(test_logical_Nor(true, false));
console.log(test_logical_Nor(false, false));
console.log(test_logical_Nor(true, true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Create the value of NOR of two given booleans</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
167,JavaScript: Find the longest string from a given array,Write a JavaScript program to find the longest string from a given array.,"function longest_str_in_array(arra)
  {
    var max_str = arra[0].length;
    var ans = arra[0];
    for (var i = 1; i < arra.length; i++) {
        var maxi = arra[i].length;
        if (maxi > max_str) {
            ans = arra[i];
            max_str = maxi;
        }
    }
    return ans;
}
console.log(longest_str_in_array([""ab"", ""a"", ""abcd""]));
console.log(longest_str_in_array([""ab"", ""ab"", ""ab""]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the longest string from a given array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
168,JavaScript: Get the largest even number from an array of integers,Write a JavaScript program to get the largest even number from an array of integers.,"function max_even(arra) {

  arra.sort((x, y) => y - x);

  for (var i = 0; i < arra.length; i++) {
    if (arra[i] % 2 == 0)
      return arra[i];
    }
  }

console.log(max_even([20, 40, 200]));
console.log(max_even([20, 40, 200, 301]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Get the largest even number from an array of integers</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
169,JavaScript: Reverse the order of the bits in a given integer,"Write a JavaScript program to reverse the order of the bits in a given integer.
56 -&gt; 111000 after reverse 7 -&gt; 111

234 -&gt; 11101010 after reverse 87 -&gt; 1010111","function mirror_bits(n) {
  return parseInt(n.toString(2).split("""").reverse().join(""""), 2);
}

console.log(mirror_bits(56));
console.log(mirror_bits(234));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Reverse the order of the bits in a given integer</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
170,JavaScript: Find the smallest round number that is not less than a given value,"Write a JavaScript program to find the smallest round number that is not less than a given value.Note: A round number is informally considered to be an integer that ends with one or more zeros. So, 590 is rounder than 592, but 590 is less round than 600.","function nearest_round_number(num) {
    while (num % 10) {
        num++;
    }
    return num;
}

console.log(nearest_round_number(56));
console.log(nearest_round_number(592));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the smallest round number that is not less than a given value</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
171,JavaScript: Find the smallest prime number strictly greater than a given number,Write a JavaScript program to find the smallest prime number strictly greater than a given number.,"function next_Prime_num(num) {
    for (var i = num + 1;; i++) {
        var isPrime = true;
        for (var d = 2; d * d <= i; d++) {
            if (i % d === 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            return i;
        }
    }
}

console.log(next_Prime_num(3));
console.log(next_Prime_num(17));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the smallest prime number strictly greater than a given number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
172,JavaScript: Find the number of even digits in a given integer,Write a JavaScript program to find the number of even digits in a given integer.,"function even_digits(num) {
  var ctr = 0;
  while (num) {
    ctr += num % 2 === 0;
    num = Math.floor(num / 10);
  }
  return ctr;
}

console.log(even_digits(123));
console.log(even_digits(1020));
console.log(even_digits(102));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of even digits in a given integer</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
173,JavaScript: Create an array of prefix sums of the given array,"Write a JavaScript program to create an array of prefix sums of the given array.
In computer science, the prefix sum, cumulative sum, inclusive scan, or simply scan of a sequence of numbers x0, x1, x2, ... is a second sequence of numbers y0, y1, y2, ..., the sums of prefixes of the input sequence:

y0 = x0	

y1 = x0 + x1

y2 = x0 + x1+ x2

...","function prefix_sums(arr) {
  var new_arr = [];
  for (var i = 0; i < arr.length; i++) {
    new_arr[i] = 0;
    for (var j = 0; j < i + 1; j++) {
      new_arr[i] += arr[j];
    }
  }
  return new_arr;
}

console.log(prefix_sums([1, 2, 3, 4, 5]));

console.log(prefix_sums([1, 2, -3, 4, 5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Create an array of prefix sums of the given array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
174,JavaScript: Find all distinct prime factors of a given integer,Write a JavaScript program to find all distinct prime factors of a given integer,"function prime_factors(num) {
  function is_prime(num) {
    for (let i = 2; i <= Math.sqrt(num); i++)
    {
      if (num % i === 0) return false;
    }
    return true;
  }
  const result = [];
  for (let i = 2; i <= num; i++)
  {
    while (is_prime(i) && num % i === 0) 
    {
      if (!result.includes(i)) result.push(i);
      num /= i;
    }
  }
  return result;
}
console.log(prime_factors(100));
console.log(prime_factors(101));
console.log(prime_factors(103));
console.log(prime_factors(104));
console.log(prime_factors(105));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find all distinct prime factors of a given integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
175,JavaScript: Check whether a given fraction is proper or not,"Write a JavaScript program to check whether a given fraction is proper or not.Note: There are two types of common fractions, proper or improper. When the numerator and the denominator are both positive, the fraction is called proper if the numerator is less than the denominator, and improper otherwise.","function proper_improper_test(num) {
  return Math.abs(num[0] / num[1]) < 1
    ? ""Proper fraction.""
    : ""Improper fraction."";
}
console.log(proper_improper_test([12, 300]));
console.log(proper_improper_test([2, 4]));
console.log(proper_improper_test([103, 3]));
console.log(proper_improper_test([104, 2]));
console.log(proper_improper_test([5, 40]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Check whether a given fraction is proper or not</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
176,"JavaScript: Change the characters (lower case) in a string where a turns into z, b turns into y, c turns into x, ..., n turns into m, m turns into n, ..., z turns into a","Write a JavaScript program to change the characters (lower case) in a string where a turns into z, b turns into y, c turns into x, ..., n turns into m, m turns into n, ..., z turns into a.","function change_char(str1) {
	var result = [];
	for (var i = 0; i < str1.length; i++)
    {
		var char_order = str1.charCodeAt(i) - 'a'.charCodeAt(0),
			change_char = 25 - char_order + 'a'.charCodeAt(0);
		result.push(String.fromCharCode(change_char));
	}
	return result.join("""");
}
console.log(change_char(""abcxyz""));
console.log(change_char(""python""));  
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Change the characters (lower case) in a string where a turns into z, b turns into y, c turns into x, ..., n turns into m, m turns into n, ..., z turns into a</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
177,JavaScript: Remove all characters from a given string that appear more than once,Write a JavaScript program to remove all characters from a given string that appear more than once.,"function remove_duplicate_cchars(str) {
  var arr_char = str.split("""");
  var result_arr = [];

  for (var i = 0; i < arr_char.length; i++) {
    if (str.indexOf(arr_char[i]) === str.lastIndexOf(arr_char[i]))
      result_arr.push(arr_char[i]);
    }

  return result_arr.join("""");
}
console.log(remove_duplicate_cchars(""abcdabc""));
console.log(remove_duplicate_cchars(""python""));
console.log(remove_duplicate_cchars(""abcabc""));
console.log(remove_duplicate_cchars(""1365451""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Remove all characters from a given string that appear more than once</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
178,JavaScript: Replace the first digit in a string (should contains at least digit) with $ character,Write a JavaScript program to replace the first digit in a string (should contains at least digit) with $ character. ,"function replace_first_digit(input_str) {

  return input_str.replace(/[0-9]/, '$');
}
console.log(replace_first_digit(""abc1dabc""));
console.log(replace_first_digit(""p3ython""));
console.log(replace_first_digit(""ab1cabc""));   
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Replace the first digit in a string (should contains at least digit) with $ character</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
179,"JavaScript: Test whether a given integer is greater than 15 return the given number, otherwise return 15","Write a JavaScript program to test whether a given integer is greater than 15 return the given number, otherwise return 15.","function test_fifteen(num) 
{
    while(num<15){
        num++;
    }
    return num;
}
console.log(test_fifteen(""123""));
console.log(test_fifteen(""10""));
console.log(test_fifteen(""5""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Test whether a given integer is greater than 15 return the given number, otherwise return 15.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
180,JavaScript: Reverse the bits of a given 16 bits unsigned short integer,Write a JavaScript program to reverse the bits of a given 16 bits unsigned short integer.,"function sixteen_bits_reverse(num) {
	var result = 0;
	for (var i = 0; i < 16; i++) 
    {
		result = result * 2 + (num % 2);
		num = Math.floor(num / 2);
	}
	return result;
}
console.log(sixteen_bits_reverse(12345));
console.log(sixteen_bits_reverse(10));
console.log(sixteen_bits_reverse(5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Reverse the bits of a given 16 bits unsigned short integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
181,JavaScript: Find the position of a rightmost round number in an array of integers. Returns 0 if there are no round number,Write a JavaScript program to find the position of a rightmost round number in an array of integers. Returns 0 if there are no round number. Note: A round number is informally considered to be an integer that ends with one or more zeros.,"function find_rightmost_round_number(input_arr) {

  var result = 0;
  for (var i = 0; i < input_arr.length; i++)
  {
    if (input_arr[i] % 10 === 0) {
      result = i;
    }
  }

  return result;
}

console.log(find_rightmost_round_number([1, 22, 30, 54, 56]));
console.log(find_rightmost_round_number([1, 22, 32, 54, 56]));
console.log(find_rightmost_round_number([1, 22, 32, 54, 50]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the position of a rightmost round number in an array of integers. Returns 0 if there are no round number</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
182,JavaScript: Check whether all the digits in a given number are the same or not,Write a JavaScript program to check whether all the digits in a given number are the same or not. ,"function test_same_digit(num) {
  var first = num % 10;
  while (num) {
    if (num % 10 !== first) return false;
num = Math.floor(num / 10);
  }
  return true
}

console.log(test_same_digit(1234));
console.log(test_same_digit(1111));
console.log(test_same_digit(22222222));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Check whether all the digits in a given number are the same or not</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
183,JavaScript: Find the number of elements which presents in both of the given arrays,Write a JavaScript program to find the number of elements which presents in both of the given arrays. ,"function test_same_elements_both_arrays(arra1, arra2) {
  var result = 0;
  for(var i = 0; i < arra1.length; i++) {
    for(var j = 0; j < arra2.length; j++){
      if(arra1[i] === arra2[j])
      {
        result++;
      }
    }
  }
  return result;
}
console.log(test_same_elements_both_arrays([1,2,3,4], [1,2,3,4]));
console.log(test_same_elements_both_arrays([1,2,3,4], [1,2,3,5]));
console.log(test_same_elements_both_arrays([1,2,3,4], [11,22,33,44]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the number of elements which presents in both of the given arrays.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
184,JavaScript: Simplify a given absolute path for a file in Unix-style,Write a JavaScript program to simplify a given absolute path for a file in Unix-style. ,"function simplify_path(main_path) {
  var parts = main_path.split('/'),
      new_path = [],
      length = 0;
  for (var i = 0; i < parts.length; i++) {
    var part = parts[i];
    if (part === '.' || part === '' || part === '..') {
      if (part === '..' && length > 0) {
        length--;
      }
      continue;
    }
    new_path[length++] = part;
  }

  if (length === 0) {
    return '/';
  }

  var result = '';
  for (var i = 0; i < length; i++) {
    result +=  '/'+new_path[i] ;
  }

  return result;
}
console.log(simplify_path(""/home/var/./www/../html//sql/""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Simplify a given absolute path for a file in Unix-style.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
185,JavaScript: Sort the strings of a given array of strings in the order of increasing lengths,Write a JavaScript program to sort the strings of a given array of strings in the order of increasing lengths. Note: Do not change the order if the lengths of two string are same.,"function sort_by_string_length(arra) {
	for (var i = 0; i < arra.length; i++) {
		for (var j = i + 1; j < arra.length; j++) {
			if (arra[i].length > arra[j].length) {
				var m = arra[i];
				arra[i] = arra[j];
				arra[j] = m;
			}
		}
	}
	return arra;
}
var arra = [""xyz"",""acd"",""aa"",""bb"",""zzz"","""", ""a"",""b""];
console.log(""Original array: ""+ arra+""\n"");
console.log(sort_by_string_length([""xyz"",""acd"",""aa"",""bb"",""zzz"","""", ""a"",""b""]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Sort the strings of a given array of strings in the order of increasing lengths.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
186,JavaScript: Break an address of an url and put it's part into an array,Write a JavaScript program to break an address of an url and put it's part into an array. Note: url structure : ://.org[/] and there may be no part in the address.,"function break_address(url_add) {
    var data = url_add.split(""://"")
    var protocol = data[0];
    data = data[1].split("".com"");
    var domain = data[0];
    data = data[1].split(""/"");

    if(data[1]){
        return [protocol,domain,data[1]]
    }

    return [protocol,domain]
}

var url_add = ""https://www.w3resource.com/javascript-exercises/""
console.log(""Original address: ""+url_add)
console.log(break_address(url_add))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Break an address of an url and put it's part into an array.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
187,JavaScript: Find the maximum integer n,Write a JavaScript program to find the maximum integer n such that 1 + 2 + ... + n <= a given integer. ,"function sumn(val) {
  var sn = 0;
  var i = 0;
  while (sn <= val) {
    sn += i++;
  }
  return i - 2;
}
console.log(sumn(11))
console.log(sumn(15))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the maximum integer n.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
188,JavaScript: Compute the sum of cubes of all integer from 1 to an given integer,Write a JavaScript program to compute the sum of cubes of all integer from 1 to a given integer. ,"function sum_Of_Cubes(n) {
  var sumn = 0;

  for (var i = 1; i <= n; i++) {
    sumn += Math.pow(i, 3);
  }
  return sumn;
}

console.log(sum_Of_Cubes(3));
console.log(sum_Of_Cubes(4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Compute the sum of cubes of all integer from 1 to an given integer.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
189,JavaScript: Compute the sum of all digits that occur in a given string,Write a JavaScript program to compute the sum of all digits that occur in a given string. ,"function sum_digits_from_string(dstr) {
  var dsum = 0;

  for (var i = 0; i < dstr.length; i++)
  {

    if (/[0-9]/.test(dstr[i])) dsum += parseInt(dstr[i])
  }
  return dsum;
}

console.log(sum_digits_from_string(""abcd12efg9""))
console.log(sum_digits_from_string(""w3resource""))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Compute the sum of all digits that occur in a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
190,JavaScript: Swap two halves of a given array of integers of even length,Write a JavaScript program to swap two halves of a given array of integers of even length. ,"function halv_array_swap(iarra) {
  if (((iarra.length)%2)!=0)
    {
    return false;
    }

  for (var i = 0; i < iarra.length / 2; i++) {
    var tmp = iarra[i];
    iarra[i] = iarra[i + iarra.length / 2];
    iarra[i + iarra.length / 2] = tmp;
  }
  return iarra;
}

console.log(halv_array_swap([1,2,3,4,5,6]))
console.log(halv_array_swap([1,2,3,4,5,6,7]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Swap two halves of a given array of integers of even length.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
191,JavaScript: Change the capitalization of all letters in a given string,Write a JavaScript program to change the capitalization of all letters in a given string. ,"function change_case(txt) {
    var str1 = """";
    for (var i = 0; i < txt.length; i++) {
        if (/[A-Z]/.test(txt[i])) str1 += txt[i].toLowerCase();
        else str1 += txt[i].toUpperCase();
    }
    return str1;
}

console.log(change_case(""w3resource""));
console.log(change_case(""Germany""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Change the capitalization of all letters in a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
192,JavaScript: Swap pairs of adjacent digits of a given integer of even length,Write a JavaScript program to swap pairs of adjacent digits of a given integer of even length. ,"function swap_adjacent_digits(n)
{
   if (n.toString().length%2!=0)
     {
       return false;
     }
  var result = 0,
		x = 1;
	while (n != 0) {
		var dg1 = n % 10,
			dg2 = ((n - dg1) / 10) % 10;
		result += x * (10 * dg1 + dg2);
		n = Math.floor(n / 100);
		x *= 100;
	}
	return result;
}
console.log(swap_adjacent_digits(15));
console.log(swap_adjacent_digits(1234));
console.log(swap_adjacent_digits(123456));
console.log(swap_adjacent_digits(12345));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Swap pairs of adjacent digits of a given integer of even length.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
71,JavaScript: Check whether three given integer values are in the range 50..99,Write a JavaScript program to check whether three given integer values are in the range 50..99 (inclusive). Return true if one or more of them are in the said range.,"function check_three_nums(x, y, z) 
{
  return (x >= 50 && x <= 99) || (y >= 50 && y <= 99) || (z >= 50 && z <= 99);
}

console.log(check_three_nums(50, 90, 99));
console.log(check_three_nums(5, 9, 199));
console.log(check_three_nums(65, 89, 199));
console.log(check_three_nums(65, 9, 199));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check whether three given integer values are in the range 50..99 (inclusive). Return true if one or more of them are in the said range.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
128,JavaScript: Find the types of a specified angle,"Write a JavaScript program to find the types of a given angle.
Types of angles:

?	Acute angle: An angle between 0 and 90 degrees.

?	Right angle: An 90 degree angle.

?	Obtuse angle: An angle between 90 and 180 degrees.

?	Straight angle: A 180 degree angle.","function angle_Type(angle) {
  if(angle < 90) {
    return ""Acute angle."";
  }
  if(angle === 90) {
    return ""Right angle."";
  }
  if(angle < 180) {
    return ""Obtuse angle."";
  }
  return ""Straight angle."";
}

console.log(angle_Type(47))
console.log(angle_Type(90))
console.log(angle_Type(145))
console.log(angle_Type(180))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the types of a specified array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
154,JavaScript: Find the number of trailing zeros in the decimal representation of the factorial of a given number,Write a JavaScript program to find the number of trailing zeros in the decimal representation of the factorial of a given number.,"function trailing_zeros_factorial(n) {
    var result = 0;
    for (var i = 5; i <= n; i += 5) {
        var num = i;
        while (num % 5 === 0) {
            num /= 5;
            result++;
        }
    }
    return result;
}

console.log(trailing_zeros_factorial(8))
console.log(trailing_zeros_factorial(9))
console.log(trailing_zeros_factorial(10))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Find the number of trailing zeros in the decimal representation of the factorial of a given number</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
65,JavaScript: Create a new string from a given string changing the position of first and last characters,Write a JavaScript program to create a new string from a given string changing the position of first and last characters. The string length must be greater than or equal to 1.,"function first_last(str1) 
  {
  if (str1.length <= 1)
  {
    return str1;
  }
  mid_char = str1.substring(1, str1.length - 1);
  return (str1.charAt(str1.length - 1)) + mid_char + str1.charAt(0);
}
console.log(first_last('a'));
console.log(first_last('ab'));
console.log(first_last('abc'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new string from a given string changing the position of first and last characters.</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Basic
84,JavaScript: Check whether three given numbers are increasing in strict mode or in soft mode,"
 Write a JavaScript program to check whether three given numbers are increasing in strict mode or in soft mode.

Note: Strict mode -&gt; 10, 15, 31 : Soft mode -&gt; 24, 22, 31 or 22, 22, 31 ","function number_order(x, y, z ) {
  if ( y > x && z > y) 
  {
    return ""strict mode"";    
  }
  else if(z > y) 
   return ""Soft mode"";
  else
    return ""Undefinded"";
}

console.log(number_order(10,15,31));
console.log(number_order(24,22,31));
console.log(number_order(50,21,15));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Write a JavaScript program to check whether three given numbers are increasing in strict mode or in soft mode.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
86,JavaScript: Check from three given integers that whether a number is greater than or equal to 20 and less than one of the others, Write a JavaScript program to check from three given integers that whether a number is greater than or equal to 20 and less than one of the others.,"function lessby20_others(x, y, z) 
{
return (x >= 20 && (x < y || x < z)) ||
(y >= 20 && (y < x || y < z)) ||
(z >= 20 && (z < y || z < x));
}
console.log(lessby20_others(23, 45, 10));
console.log(lessby20_others(23, 23, 10));
console.log(lessby20_others(21, 66, 75));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to check from three given integers that whether a number is greater than or equal to 20 and less than one of the others.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
106,JavaScript: Concatenate two strings and return the result ,Write a JavaScript program to concatenate two strings and return the result. If the length of the strings are not same then remove the characters from the longer string.For example "Python" and "JS" will be "onJS".,"function str_con_cat(str1, str2) {
  const m = Math.min(str1.length, str2.length);

  return str1.substring(str1.length - m) + str2.substring(str2.length - m);
}

console.log(str_con_cat(""Python"", ""JS""));
console.log(str_con_cat(""ab"", ""cdef""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to concatenate two strings and return the result. If the length of the strings are not same then remove the characters from the longer string.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
116,JavaScript: Find the larger value between the first or last and set all the other elements with that value,Write a JavaScript program to find the larger value between the first or last and set all the other elements with that value. Display the new array.,"function all_max(nums) 
 {
    var max_val = nums[0] > nums[2] ? nums[0] : nums[2];

    nums[0] = max_val;
    nums[1] = max_val;
    nums[2] = max_val;

    return nums;
}
console.log(all_max([20, 30, 40]));
console.log(all_max([-7, -9, 0]));
console.log(all_max([12, 10, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to find the larger value between the first or last and set all the other elements with that value.  Display the new array.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
118,JavaScript: Create a new array taking the first and last elements from a given array of integers and length must be greater or equal to 1,Write a JavaScript program to create a new array taking the first and last elements from a given array of integers and length must be greater or equal to 1.,"function started(nums) {
     var array1 = [];
     array1.push(nums[0], nums[nums.length - 1]);

     return array1;
}
console.log(started([20, 20, 30]));
console.log(started([5, 2, 7, 8]));
console.log(started([17, 12, 34, 78])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>JavaScript program to create a new array taking the first and last elements from a given array of integers and length must be greater or equal to 1.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Basic
132,JavaScript: Find the kth greatest element of a given array of integers,Write a JavaScript program to find the kth greatest element of a given array of integers.,"function Kth_greatest_in_array(arr, k) {

  for (var i = 0; i < k; i++) {
    var max_index = i,
      tmp = arr[i];

    for (var j = i + 1; j < arr.length; j++) {
      if (arr[j] > arr[max_index]) {
        max_index = j;
      }
    }

    arr[i] = arr[max_index];
    arr[max_index] = tmp;
  }

  return arr[k - 1];
}

console.log(Kth_greatest_in_array([1,2,6,4,5], 3))
console.log(Kth_greatest_in_array([-10,-25,-47,-36,0], 1))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the kth greatest element of a given array of integers.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
134,JavaScript: Find the maximum difference between any two adjacent elements of a given array of integers,Write a JavaScript program to find the maximum difference between any two adjacent elements of a given array of integers.,"function max_difference(arr) {
	var max = -1;
    var temp;
	for (var i = 0; i < arr.length - 1; i++)
      {
		temp = Math.abs(arr[i] - arr[i + 1]);
		max = Math.max(max, temp);
	  }
	return max;
}

console.log(max_difference([1, 2, 3, 8, 9]))
console.log(max_difference([1, 2, 3, 18, 9]))
console.log(max_difference([13, 2, 3, 8, 9]))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Find the maximum difference between any two adjacent elements of a given array of integers.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
151,JavaScript: Sort an array of all prime numbers between 1 and a given integer,Write a JavaScript program to sort an array of all prime numbers between 1 and a given integer.,"function sort_prime(num) {

  var prime_num1 = [],
      prime_num2 = [];
  for (var i = 0; i <= num; i++) {
    prime_num2.push(true);
  }
  for (var i = 2; i <= num; i++) {
    if (prime_num2[i]) {
      prime_num1.push(i);
      for (var j = 1; i * j <= num; j++) {
        prime_num2[i * j] = false;
      }
    }
  }

  return prime_num1;
}

console.log(sort_prime(5))
console.log(sort_prime(11))
console.log(sort_prime(19))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title> Sort an array of all prime numbers between 1 and a given integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Basic
194,JavaScript: Get the current date,"Write a JavaScript function to get the current date.

Test Data :

console.log(curday('/')); 

console.log(curday('-'));

Output :

""11/13/2014"" 

""11-13-2014""","var curday = function(sp){
today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //As January is 0.
var yyyy = today.getFullYear();

if(dd<10) dd='0'+dd;
if(mm<10) mm='0'+mm;
return (mm+sp+dd+sp+yyyy);
};
console.log(curday('/'));
console.log(curday('-'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Get the current date</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
196,JavaScript: Get the month name from a particular date,"Write a JavaScript function to get the month name from a particular date.

Test Data:

console.log(month_name(new Date(""10/11/2009""))); 

console.log(month_name(new Date(""11/13/2014"")));

Output :

""October"" 

""November""","var month_name = function(dt){
mlist = [ ""January"", ""February"", ""March"", ""April"", ""May"", ""June"", ""July"", ""August"", ""September"", ""October"", ""November"", ""December"" ];
  return mlist[dt.getMonth()];
};
console.log(month_name(new Date(""10/11/2009"")));
console.log(month_name(new Date(""11/13/2014"")));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Get the month name from a particular date</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript Date
197,JavaScript: Comparison between two dates,"Write a JavaScript function to compare dates (i.e. greater than, less than or equal to).

Test Data:

console.log(compare_dates(new Date('11/14/2013 00:00'), new Date('11/14/2013 00:00'))); 

console.log(compare_dates(new Date('11/14/2013 00:01'), new Date('11/14/2013 00:00'))); 

console.log(compare_dates(new Date('11/14/2013 00:00'), new Date('11/14/2013 00:01')));

Output :

""Date1 = Date2"" 

""Date1 &gt; Date2"" 

""Date2 &gt; Date1""","var compare_dates = function(date1,date2){
     if (date1>date2) return (""Date1 > Date2"");
   else if (date1<date2) return (""Date2 > Date1"");
   else return (""Date1 = Date2""); 
  }

console.log(compare_dates(new Date('11/14/2013 00:00'), new Date('11/14/2013 00:00')));
console.log(compare_dates(new Date('11/14/2013 00:01'), new Date('11/14/2013 00:00')));
console.log(compare_dates(new Date('11/14/2013 00:00'), new Date('11/14/2013 00:01')));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Compare Dates</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
198,JavaScript: Add minutes to a Date object,"Write a JavaScript function to add specified minutes to a Date object.

Test Data:

console.log(add_minutes(new Date(2014,10,2), 30).toString());

Output :

""Sun Nov 02 2014 00:30:00 GMT+0530 (India Standard Time)""","var add_minutes =  function (dt, minutes) {
    return new Date(dt.getTime() + minutes*60000);
}
console.log(add_minutes(new Date(2014,10,2), 30).toString());
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Add minutes to a date object.</title>
</head>
<body>
</body>
</html> 
","Easy
",中级,JavaScript Date
199,JavaScript: Check whether a date is a weekend date,"Write a JavaScript function to test whether a date is a weekend.

Test Data :

console.log(is_weekend('Nov 15, 2014')); 

console.log(is_weekend('Nov 16, 2014')); 

console.log(is_weekend('Nov 17, 2014'));

Output :

""weekend"" 

""weekend"" 

undefined","var is_weekend =  function(date1){
    var dt = new Date(date1);
     
    if(dt.getDay() == 6 || dt.getDay() == 0)
       {
        return ""weekend"";
        } 
}

console.log(is_weekend('Nov 15, 2014'));
console.log(is_weekend('Nov 16, 2014'));
console.log(is_weekend('Nov 17, 2014'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JavaScript Weekend test</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
200,JavaScript: Difference between two dates in days,"Write a JavaScript function to get difference between two dates in days.

Test Data:

console.log(date_diff_indays('04/02/2014', '11/04/2014')); 

console.log(date_diff_indays('12/02/2014', '11/04/2014'));

Output :

216 

-28","var date_diff_indays = function(date1, date2) {
dt1 = new Date(date1);
dt2 = new Date(date2);
return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) /(1000 * 60 * 60 * 24));
}
console.log(date_diff_indays('04/02/2014', '11/04/2014'));
console.log(date_diff_indays('12/02/2014', '11/04/2014'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JavaScript difference between two dates in days</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript Date
201,JavaScript: Find out the last day of a month,"Write a JavaScript function to get the last day of a month.

Test Data:

console.log(lastday(2014,0)); 

console.log(lastday(2014,1)); 

console.log(lastday(2014,11));

Output :

31 

28 

31","var lastday = function(y,m){
return  new Date(y, m +1, 0).getDate();
}
console.log(lastday(2014,0));
console.log(lastday(2014,1));
console.log(lastday(2014,11));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Find out the last day of a month</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
202,JavaScript: Find out which day was in yesterday,"Write a JavaScript function to calculate 'yesterday day'.

Test Data:

console.log(yesterday('Nov 15, 2014')); 

console.log(yesterday('Nov 16, 2015')); 

console.log(yesterday('Nov 17, 2016'));

Output :

""Fri Nov 14 2014 00:00:00 GMT+0530 (India Standard Time)"" 

""Sun Nov 15 2015 00:00:00 GMT+0530 (India Standard Time)"" 

""Wed Nov 16 2016 00:00:00 GMT+0530 (India Standard Time)""","var yesterday =  function(date1){
    var dt = new Date(date1);
  return new Date((dt.setDate(dt.getDate()-1))).toString();
}
console.log(yesterday('Nov 15, 2014'));
console.log(yesterday('Nov 16, 2015'));
console.log(yesterday('Nov 17, 2016'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Find out which day was in yesterday</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
203,JavaScript: Maximum date from an array of dates,"Write a JavaScript function to get the maximum date from an array of dates.
Test Data:

console.log(max_date(['2015/02/01', '2015/02/02', '2015/01/03']));

Output :

""2015/02/02""","function max_date(all_dates) {
var max_dt = all_dates[0],
  max_dtObj = new Date(all_dates[0]);
all_dates.forEach(function(dt, index)
  {
  if ( new Date( dt ) > max_dtObj)
  {
  max_dt = dt;
  max_dtObj = new Date(dt);
  }
  });
 return max_dt;
  }
console.log(max_date(['2015/02/01', '2015/02/02', '2015/01/03']));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Maximum date from an array of dates</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
204,JavaScript: Minimum date from an array of dates,"Write a JavaScript function to get the minimum date from an array of dates.
Test Data:

console.log(min_date(['2015/02/01', '2015/02/02', '2015/01/03']));

Output :

""2015/01/03""","function min_date(all_dates) {
 var min_dt = all_dates[0],
  min_dtObj = new Date(all_dates[0]);
 all_dates.forEach(function(dt, index)
  {
  if ( new Date( dt ) < min_dtObj)
  {
  min_dt = dt;
  min_dtObj = new Date(dt);
  }
  });
 return min_dt;
  }
console.log(min_date(['2015/02/01', '2015/02/02', '2015/01/03']));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Minimum date from an array of dates</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Date
205,JavaScript: Return the number of minutes in hours and minutes,"Write a JavaScript function that will return the number of minutes in hours and minutes.

Test Data :

console.log(timeConvert(200));

Output :

""200 minutes = 3 hour(s) and 20 minute(s).""","function timeConvert(n) {
var num = n;
var hours = (num / 60);
var rhours = Math.floor(hours);
var minutes = (hours - rhours) * 60;
var rminutes = Math.round(minutes);
return num + "" minutes = "" + rhours + "" hour(s) and "" + rminutes + "" minute(s)."";
}

console.log(timeConvert(200));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return the number of minutes in hours and minutes.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
206,JavaScript: Get the amount of days of a year,"Write a JavaScript function to get the amount of days of a year.
Test Data :

console.log(days_of_a_year(2015)); 

365

console.log(days_of_a_year(2016));

366

","function days_of_a_year(year) 
{
   
  return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
     return year % 400 === 0 || (year % 100 !== 0 && year % 4 === 0);
}

console.log(days_of_a_year(2015));
console.log(days_of_a_year(2016));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the amount of days of a year</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
207,JavaScript: Get the quarter of the year,"Write a JavaScript function to get the quarter (1 to 4) of the year.
Test Data:

console.log(quarter_of_the_year(new Date(2015, 1, 21))); 

2

console.log(quarter_of_the_year(new Date(2015, 10, 18)));

4","function quarter_of_the_year(date) 
  {
    var month = date.getMonth() + 1;
    return (Math.ceil(month / 3));
  }


console.log(quarter_of_the_year(new Date()));
console.log(quarter_of_the_year(new Date(2015, 1, 21))); 
console.log(quarter_of_the_year(new Date(2015, 10, 18)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the the quarter (1 to 4) of the year</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
208,JavaScript: Count the number of days passed since beginning of the year,"Write a JavaScript function to count the number of days passed since beginning of the year.
Test Data:

console.log(days_passed(new Date(2015, 0, 15))); 

15

console.log(days_passed(new Date(2015, 11, 14)));

348","function days_passed(dt) {
  var current = new Date(dt.getTime());
  var previous = new Date(dt.getFullYear(), 0, 1);

  return Math.ceil((current - previous + 1) / 86400000);
}
console.log(days_passed(new Date(2015, 0, 15)));
console.log(days_passed(new Date(2015, 11, 14)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to count the number of days passed since beginning of the year</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
209,JavaScript: Convert a Unix timestamp to time,"Write a JavaScript function to convert a Unix timestamp to time.
Test Data:

console.log(Unix_timestamp(1412743274)); 

10:11:14","function Unix_timestamp(t)
{
var dt = new Date(t*1000);
var hr = dt.getHours();
var m = ""0"" + dt.getMinutes();
var s = ""0"" + dt.getSeconds();
return hr+ ':' + m.substr(-2) + ':' + s.substr(-2);  
}

console.log(Unix_timestamp(1412743274));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert a Unix timestamp to time.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
210,JavaScript: Calculate age,"Write a JavaScript program to calculate age.
Test Data:

console.log(calculate_age(new Date(1982, 11, 4))); 

35

console.log(calculate_age(new Date(1962, 1, 1)));

56","function calculate_age(dob) { 
    var diff_ms = Date.now() - dob.getTime();
    var age_dt = new Date(diff_ms); 
  
    return Math.abs(age_dt.getUTCFullYear() - 1970);
}

console.log(calculate_age(new Date(1982, 11, 4)));

console.log(calculate_age(new Date(1962, 1, 1)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript program to calculate age</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
211,"JavaScript: Get the day of the month, 2 digits with leading zeros","Write a JavaScript function to get the day of the month, 2 digits with leading zeros.
Test Data :

d= new Date(2015, 10, 1); 

console.log(day_of_the_month(d));

19

01","function day_of_the_month(d)
{ 
  return (d.getDate() < 10 ? '0' : '') + d.getDate();
}

d= new Date();
console.log(day_of_the_month(d));

d= new Date(2015, 10, 1);
console.log(day_of_the_month(d));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the day of the month, 2 digits with leading zeros.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
212,JavaScript: Get a textual representation of a day,"Write a JavaScript function to get a textual representation of a day (three letters, Mon through Sun).
Test Data:

dt = new Date(2015, 10, 1); 

console.log(short_Days(dt));

""Sun""","Date.shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

function short_Days(dt)
{ 
   return Date.shortDays[dt.getDay()];
}

dt = new Date();
console.log(short_Days(dt));

dt = new Date(2015, 10, 1);
console.log(short_Days(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a textual representation of a day (three letters).</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
213,JavaScript: Get a full textual representation of the day of the week,"Write a JavaScript function to get a full textual representation of the day of the week (Sunday through Saturday).
Test Data:

dt = new Date(2015, 10, 1); 

console.log(long_Days(dt));

""Sunday""","Date.longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

function long_Days(dt)
    { 
      return Date.longDays[dt.getDay()]; 
    }

dt = new Date();
console.log(long_Days(dt));

dt = new Date(2015, 10, 1);
console.log(long_Days(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a full textual representation of the day of the week (Sunday through Saturday).</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
214,JavaScript: Get ISO-8601 numeric representation of the day of the week,"Write a JavaScript function to get ISO-8601 numeric representation of the day of the week (1 (for Monday) to 7 (for Sunday)).
Test Data :

dt = new Date(); 

console.log(ISO_numeric_date(dt)); 

4

dt = new Date(2015, 10, 1); 

console.log(ISO_numeric_date(dt));

7","function ISO_numeric_date(dt)
{
  return (dt.getDay() === 0 ? 7 : dt.getDay()); 
}

dt = new Date();
console.log(ISO_numeric_date(dt));

dt = new Date(2015, 10, 1);
console.log(ISO_numeric_date(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get ISO-8601 numeric representation of the day of the week (1 (for Monday) to 7 (for Sunday))</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript Date
215,JavaScript: Get English ordinal suffix for the day of the month,"Write a JavaScript function to get English ordinal suffix for the day of the month, 2 characters (st, nd, rd or th.).
Test Data :

dt= new Date(); 

console.log(english_ordinal_suffix(dt)); 

""23rd""

dt = new Date(2015, 10, 1); 

console.log(english_ordinal_suffix(dt));

""1st""","function english_ordinal_suffix(dt)
  {
    return dt.getDate()+(dt.getDate() % 10 == 1 && dt.getDate() != 11 ? 'st' : (dt.getDate() % 10 == 2 && dt.getDate() != 12 ? 'nd' : (dt.getDate() % 10 == 3 && dt.getDate() != 13 ? 'rd' : 'th'))); 
  }

dt = new Date();
console.log(english_ordinal_suffix(dt));

dt = new Date(2015, 10, 1);
console.log(english_ordinal_suffix(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get English ordinal suffix for the day of the month, 2 characters (st, nd, rd or th.)</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
216,"JavaScript: Get ISO-8601 week number of year, weeks starting on Monday","Write a JavaScript function to get ISO-8601 week number of year, weeks starting on Monday.
Example : 42 (the 42nd week in the year)

Test Data :

dt = new Date(2015, 10, 1); 

console.log(ISO8601_week_no(dt)); 

44","function ISO8601_week_no(dt) 
  {
     var tdt = new Date(dt.valueOf());
     var dayn = (dt.getDay() + 6) % 7;
     tdt.setDate(tdt.getDate() - dayn + 3);
     var firstThursday = tdt.valueOf();
     tdt.setMonth(0, 1);
     if (tdt.getDay() !== 4) 
       {
      tdt.setMonth(0, 1 + ((4 - tdt.getDay()) + 7) % 7);
        }
     return 1 + Math.ceil((firstThursday - tdt) / 604800000);
        }

dt = new Date();
console.log(ISO8601_week_no(dt));

dt = new Date(2015, 10, 1);
console.log(ISO8601_week_no(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get ISO-8601 week number of year, weeks starting on Monday</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
217,JavaScript: Get a full textual representation of a month,"Write a JavaScript function to get a full textual representation of a month, such as January or June.
Test Data:

dt = new Date(2015, 10, 1); 

console.log(full_month(dt));

""November""","Date.longMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

function full_month(dt)
  { 
   return Date.longMonths[dt.getMonth()]; 
  }

dt = new Date(); 
console.log(full_month(dt)); 

dt = new Date(2015, 10, 1); 
console.log(full_month(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a full textual representation of a month, such as January or June.</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
218,JavaScript: Get a numeric representation of a month,"Write a JavaScript function to get a numeric representation of a month, with leading zeros (01 through 12).
Test Data:

dt = new Date(2015, 10, 1); 

console.log(numeric_month(dt));

""11""","function numeric_month(dt)
{
  return (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1); 
}
dt = new Date(); 
console.log(numeric_month(dt)); 

dt = new Date(2015, 10, 1); 
console.log(numeric_month(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a numeric representation of a month, with leading zeros (01 through 12).</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
219,JavaScript: Get a short textual representation of a month,"Write a JavaScript function to get a short textual representation of a month, three letters (Jan through Dec).
Test Data :

dt = new Date(2015, 10, 1);

console.log(short_months(dt));

""Nov"""," Date.shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

function short_months(dt)
   { 
     return Date.shortMonths[dt.getMonth()]; 
   }

dt = new Date(); 
console.log(short_months(dt)); 

dt = new Date(2015, 10, 1); 
console.log(short_months(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>avaScript function to get a short textual representation of a month, three letters (Jan through Dec)</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
220,JavaScript: Get a full numeric representation of a year,"Write a JavaScript function to get a full numeric representation of a year (4 digits).
Test Data :

dt = new Date(2015, 10, 1); 

console.log(full_year(dt)); 

2015","function full_year(dt) 
{ 
  return dt.getFullYear(); 
}
dt = new Date(); 
console.log(full_year(dt)); 

dt = new Date(2015, 10, 1); 
console.log(full_year(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a full numeric representation of a year (4 digits)</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript Date
221,JavaScript: Get a two digit representation of a year,"Write a JavaScript function to get a two digit representation of a year.
Test Data:

dt = new Date(); 

console.log(sort_year(dt)); 

18

dt = new Date(1989, 10, 1); 

console.log(sort_year(dt)); 

89","function sort_year(dt) 
{ 
  return ('' + dt.getFullYear()).substr(2);
}

dt = new Date(); 
console.log(sort_year(dt)); 

dt = new Date(1989, 10, 1); 
console.log(sort_year(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a two digit representation of a year</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
222,JavaScript: Get lowercase Ante meridiem and Post meridiem,Write a JavaScript function to get lowercase Ante meridiem and Post meridiem.,"function lower_am_pm(dt) 
{ 
   return dt.getHours() < 12 ? 'AM' : 'PM';
}

dt = new Date(); 
console.log(lower_am_pm(dt)); 

dt = new Date(1989, 10, 1); 
console.log(lower_am_pm(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get lowercase Ante meridiem and Post meridiem. </title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript Date
223,JavaScript: Get uppercase Ante meridiem and Post meridiem,Write a JavaScript function to get uppercase Ante meridiem and Post meridiem.,"function upper_am_pm(dt) 
{ 
  return dt.getHours() < 12 ? 'AM' : 'PM';
}

dt = new Date(); 
console.log(upper_am_pm(dt)); 

dt = new Date(1989, 10, 1); 
console.log(upper_am_pm(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get uppercase Ante meridiem and Post meridiem</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript Date
224,JavaScript: swatch Internet time,"Write a JavaScript function to swatch Internet time (000 through 999).
Test Data :

dt = new Date(1989, 10, 1); 

console.log(internet_time(dt));

812","function internet_time(dt) 
{ 
  return Math.floor((((dt.getUTCHours() + 1) % 24) + dt.getUTCMinutes() / 60 + dt.getUTCSeconds() / 3600) * 1000 / 24);
}

dt = new Date(); 
console.log(internet_time(dt)); 

dt = new Date(1989, 10, 1); 
console.log(internet_time(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to swatch Internet time (000 through 999)</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
225,JavaScript: Get 12-hour format of an hour with leading zeros,"Write a JavaScript function to get 12-hour format of an hour with leading zeros.
Test Data:

dt = new Date(1989, 10, 1); 

console.log(hours_with_zeroes(dt)); 

""12""","function hours_with_zeroes(dt) 
{ 
  return ((dt.getHours() % 12 || 12) < 10 ? '0' : '') + (dt.getHours() % 12 || 12);
}

dt = new Date(); 
console.log(hours_with_zeroes(dt)); 

dt = new Date(1989, 10, 1); 
console.log(hours_with_zeroes(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get 12-hour format of an hour with leading zeros</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
226,JavaScript: Get 24-hour format of an hour without leading zeros,"Write a JavaScript function to get 24-hour format of an hour without leading zeros.
Test Data :

dt = new Date(1989, 10, 1); 

console.log(hours_without_zeroes(dt));

0","function hours_without_zeroes(dt) 
{ 
  return dt.getHours();
}

dt = new Date(); 
console.log(hours_without_zeroes(dt)); 

dt = new Date(1989, 10, 1); 
console.log(hours_without_zeroes(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get 24-hour format of an hour without leading zeros</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
227,JavaScript: Get minutes with leading zeros,"Write a JavaScript function to get minutes with leading zeros (00 to 59).
Test Data:

dt = new Date(1989, 10, 1); 

console.log(minutes_with_leading_zeros(dt)); 

""00""","function minutes_with_leading_zeros(dt) 
{ 
  return (dt.getMinutes() < 10 ? '0' : '') + dt.getMinutes();
}

dt = new Date(); 
console.log(minutes_with_leading_zeros(dt)); 

dt = new Date(1989, 10, 1); 
console.log(minutes_with_leading_zeros(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get minutes with leading zeros.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
228,JavaScript: Get seconds with leading zeros,"Write a JavaScript function to get seconds with leading zeros (00 through 59).
Test Data:

dt = new Date(); 

console.log(seconds_with_leading_zeros(dt)); 

""India Standard Time""","function seconds_with_leading_zeros(dt) 
{ 
  return (dt.getMinutes() < 10 ? '0' : '') + dt.getMinutes();
}

dt = new Date(); 
console.log(seconds_with_leading_zeros(dt)); 

dt = new Date(1989, 10, 1); 
console.log(seconds_with_leading_zeros(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get seconds with leading zeros (00 through 59)</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
229,JavaScript: Get Timezone,"Write a JavaScript function to get Timezone.
Test Data:

dt = new Date(); 

console.log(seconds_with_leading_zeros(dt)); 

""India Standard Time""","function seconds_with_leading_zeros(dt) 
{ 
  return /\((.*)\)/.exec(new Date().toString())[1];
}

dt = new Date(); 
console.log(seconds_with_leading_zeros(dt)); 

dt = new Date(1989, 10, 1); 
console.log(seconds_with_leading_zeros(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get Timezone.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
230,JavaScript: Find whether or not the date is in daylights savings time,"Write a JavaScript function to find whether or not the date is in daylights savings time.
Test Data :

dt = new Date(); 

console.log(daylights_savings(dt)); 

1","function daylights_savings(dt) 
{ 
  var dst = null;
  for (var i = 0; i < 12; ++i) 
    {
      var d = new Date(dt.getFullYear(), i, 1);
      var offset = dt.getTimezoneOffset();

      if (dst === null) 
        dst = offset;
      else if (offset < dst) 
         {
           dst = offset; 
           break;
         } 
      else if (offset > dst) 
        break;
         }
return (dt.getTimezoneOffset() == dst) | 0;
}

dt = new Date(); 
console.log(daylights_savings(dt)); 

dt = new Date(1989, 10, 1); 
console.log(daylights_savings(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to find whether or not the date is in daylights savings time.</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
231,JavaScript: Get difference to Greenwich time in hours,"Write a JavaScript function to get difference to Greenwich time (GMT) in hours.
Test Data :

dt = new Date(); 

console.log(diff_to_GMT(dt)); 

""+05.500""","
function diff_to_GMT(dt) 
{ 
   return (-dt.getTimezoneOffset() < 0 ? '-' : '+') + (Math.abs(dt.getTimezoneOffset() / 60) < 10 ? '0' : '') + (Math.abs(dt.getTimezoneOffset() / 60)) + '00';
}

dt = new Date(); 
console.log(diff_to_GMT(dt)); 

dt = new Date(1989, 10, 1); 
console.log(diff_to_GMT(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get difference to Greenwich time (GMT) in hours.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
232,JavaScript: Get timezone offset in seconds,"Write a JavaScript function to get timezone offset in seconds.
Note : The offset for timezones west of UTC is always negative, and for those east of UTC is always positive.

Test Data :

dt = new Date(); 

console.log(timezone_offset_in_seconds(dt)); 

19800","function timezone_offset_in_seconds(dt) 
{ 
   return -dt.getTimezoneOffset() * 60;
}

dt = new Date(); 
console.log(timezone_offset_in_seconds(dt)); 

dt = new Date(1989, 10, 1); 
console.log(timezone_offset_in_seconds(dt));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get timezone offset in seconds</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
233,JavaScript: Add specified years to a date,"Write a JavaScript function to add specified years to a date.
Test Data:

dt = new Date(2014,10,2); 

console.log(add_years(dt, 10).toString());

Output:

""Sat Nov 02 2024 00:00:00 GMT+0530 (India Standard Time)""","function add_years(dt,n) 
 {
 return new Date(dt.setFullYear(dt.getFullYear() + n));      
 }

dt = new Date();
console.log(add_years(dt, 10).toString());  

dt = new Date(2014,10,2);
console.log(add_years(dt, 10).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to add specified years to a date</title>
</head>
<body>
<p id=""demo""></p>
</body>
</html>
","Easy
",中级,JavaScript Date
234,JavaScript: Add specified weeks to a date,"Write a JavaScript function to add specified weeks to a date.
Test Data :

dt = new Date(2014,10,2); 

console.log(add_weeks(dt, 10).toString());

Output :

""Sun Jan 11 2015 00:00:00 GMT+0530 (India Standard Time)""","function add_weeks(dt, n) 
 {
 return new Date(dt.setDate(dt.getDate() + (n * 7)));      
 }

dt = new Date();
console.log(add_weeks(dt, 10).toString());  

dt = new Date(2014,10,2);
console.log(add_weeks(dt, 10).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to add specified weeks to a date</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
235,JavaScript: Add specified months to a date,"Write a JavaScript function to add specified months to a date.
Test Data :

dt = new Date(2014,10,2);
 
console.log(add_months(dt, 10).toString());

Output :

""Wed Sep 02 2015 00:00:00 GMT+0530 (India Standard Time)""","function add_months(dt, n) 
 {

   return new Date(dt.setMonth(dt.getMonth() + n));      
 }

dt = new Date();
console.log(add_months(dt, 10).toString());  

dt = new Date(2014,10,2);
console.log(add_months(dt, 10).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to add specified months to a date</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
236,JavaScript: Get time differences in minutes between two dates,"Write a JavaScript function to get time differences in minutes between two dates.
Test Data :

dt1 = new Date(""October 13, 2014 11:11:00""); 

dt2 = new Date(""October 13, 2014 11:13:00""); 

console.log(diff_minutes(dt1, dt2)); 

2","function diff_minutes(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
  diff /= 60;
  return Math.abs(Math.round(diff));
  
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,3);
console.log(diff_minutes(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in minutes between two dates</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
242,JavaScript: Get the week start date,Write a JavaScript function to get the week start date.,"function startOfWeek(date)
  {
    var diff = date.getDate() - date.getDay() + (date.getDay() === 0 ? -6 : 1);
  
    return new Date(date.setDate(diff));
 
  }

dt = new Date(); 

console.log(startOfWeek(dt).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to get the week start date</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
243,JavaScript: Get the week end date,Write a JavaScript function to get the week end date.,"function endOfWeek(date)
  {
     
    var lastday = date.getDate() - (date.getDay() - 1) + 6;
    return new Date(date.setDate(lastday));
 
  }

dt = new Date(); 

console.log(endOfWeek(dt).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to get the week end date</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
244,JavaScript: Get the month start date,Write a JavaScript function to get the month start date.,"function startOfMonth(date)
  {
     
   return new Date(date.getFullYear(), date.getMonth(), 1);
 
  }

dt = new Date(); 

console.log(startOfMonth(dt).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to get the month start date</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
245,JavaScript: Get the month end date,Write a JavaScript function to get the month end date.,"function endOfMonth(date)
  {
     
  return new Date(date.getFullYear(), date.getMonth() + 1, 0);
 
  }

dt = new Date(); 

console.log(endOfMonth(dt).toString());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to get the month end date</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
240,JavaScript: Get time differences in months between two dates,"Write a JavaScript function to get time differences in months between two dates.
Test Data:

dt1 = new Date(""June 13, 2014 08:11:00""); 

dt2 = new Date(""October 19, 2014 11:13:00""); 

console.log(diff_months(dt1, dt2)); 

5","function diff_months(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
   diff /= (60 * 60 * 24 * 7 * 4);
  return Math.abs(Math.round(diff));
  
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,11);
console.log(diff_months(dt1, dt2));

dt1 = new Date(""June 13, 2014 08:11:00"");
dt2 = new Date(""October 19, 2014 11:13:00"");
console.log(diff_months(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in months between two dates</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
193,JavaScript: Check whether an input is a date object or not,"Write a JavaScript function to check whether an 'input' is a date object or not.

Test Data:

console.log(is_date(""October 13, 2014 11:13:00"")); 

console.log(is_date(new Date(86400000))); 

console.log(is_date(new Date(99,5,24,11,33,30,0))); 

console.log(is_date([1, 2, 4, 0]));

Output :

false 

true 

true 

false","var is_date = function(input) {
  if ( Object.prototype.toString.call(input) === ""[object Date]"" ) 
    return true;
  return false;   
    };

console.log(is_date(""October 13, 2014 11:13:00""));
console.log(is_date(new Date(86400000)));
console.log(is_date(new Date(99,5,24,11,33,30,0)));
console.log(is_date([1, 2, 4, 0]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Checking a date object</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript Date
195,JavaScript: Get the number of days in a month,"Write a JavaScript function to get the number of days in a month.

Test Data:

console.log(getDaysInMonth(1, 2012)); 

console.log(getDaysInMonth(2, 2012)); 

console.log(getDaysInMonth(9, 2012)); 

console.log(getDaysInMonth(12, 2012)); 

Output :

31 

29 

30 

31","var getDaysInMonth = function(month,year) {
  // Here January is 1 based
  //Day 0 is the last day in the previous month
 return new Date(year, month, 0).getDate();
// Here January is 0 based
// return new Date(year, month+1, 0).getDate();
};
console.log(getDaysInMonth(1, 2012));
console.log(getDaysInMonth(2, 2012));
console.log(getDaysInMonth(9, 2012));
console.log(getDaysInMonth(12, 2012));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Get days in Month</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript Date
237,JavaScript: Get time differences in hours between two dates,"Write a JavaScript function to get time differences in hours between two dates.
Test Data:

dt1 = new Date(""October 13, 2014 08:11:00""); 

dt2 = new Date(""October 13, 2014 11:13:00""); 

console.log(diff_hours(dt1, dt2)); 

3","function diff_hours(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
  diff /= (60 * 60);
  return Math.abs(Math.round(diff));
  
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,3);
console.log(diff_hours(dt1, dt2));


dt1 = new Date(""October 13, 2014 08:11:00"");
dt2 = new Date(""October 13, 2014 11:13:00"");
console.log(diff_hours(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in hours between two dates</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
238,JavaScript: Get time differences in days between two dates ,"Write a JavaScript function to get time differences in days between two dates.
Test Data:

dt1 = new Date(""October 13, 2014 08:11:00""); 

dt2 = new Date(""October 19, 2014 11:13:00""); 

console.log(diff_days(dt1, dt2));

6","function diff_days(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
  diff /= (60 * 60 * 24);
  return Math.abs(Math.round(diff));
  
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,6);
console.log(diff_days(dt1, dt2));

dt1 = new Date(""October 13, 2014 08:11:00"");
dt2 = new Date(""October 19, 2014 11:13:00"");
console.log(diff_days(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in days between two dates</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript Date
239,JavaScript: Get time differences in weeks between two dates ,"Write a JavaScript function to get time differences in weeks between two dates.
Test Data :

dt1 = new Date(""June 13, 2014 08:11:00""); 

dt2 = new Date(""October 19, 2014 11:13:00""); 

console.log(diff_weeks(dt1, dt2)); 

18","function diff_weeks(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
  diff /= (60 * 60 * 24 * 7);
  return Math.abs(Math.round(diff));
  
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,11);
console.log(diff_weeks(dt1, dt2));

dt1 = new Date(""June 13, 2014 08:11:00"");
dt2 = new Date(""October 19, 2014 11:13:00"");
console.log(diff_weeks(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in weeks between two dates</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Date
241,JavaScript: Get time differences in years between two dates,"Write a JavaScript function to get time differences in years between two dates.
Test Data :

dt1 = new Date(""June 13, 2014 08:11:00""); 

dt2 = new Date(""October 19, 2017 11:13:00""); 

console.log(diff_years(dt1, dt2)); 

3","function diff_years(dt2, dt1) 
 {

  var diff =(dt2.getTime() - dt1.getTime()) / 1000;
   diff /= (60 * 60 * 24);
  return Math.abs(Math.round(diff/365.25));
   
 }

dt1 = new Date(2014,10,2);
dt2 = new Date(2014,10,11);
console.log(diff_years(dt1, dt2));

dt1 = new Date(""June 13, 2014 08:11:00"");
dt2 = new Date(""October 19, 2017 11:13:00"");
console.log(diff_years(dt1, dt2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get time differences in years between two dates</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Date
246,JavaScript: Modify paragraph text style through javascript code using button,"Here is a sample html file with a submit button. Now modify the style of the paragraph text through javascript code.Sample HTML file: Tips: Clicking on the button the font, font size, and color of the paragraph text will be changed.","function js_style() 
{
//font styles added by JS:
 text.style.fontSize = ""14pt"";
 text.style.fontFamily = ""Comic Sans MS"";
 text.style.color = ""green"";
}
",,"Easy
",初级,JavaScript HTML DOM
247,JavaScript: Store and display the values of text boxes of a form,Write a JavaScript function to get the values of First and Last name of the following form.Sample HTML file: ,"function getFormvalue()
{
  var x=document.getElementById(""form1"");
  for (var i=0;i<x.length;i++)
  {
   if (x.elements[i].value!='Submit')
    {  
      console.log(x.elements[i].value);
     }  
   }
}
","<!DOCTYPE html>
<html><head>
<meta charset=utf-8 />
<title>Return first and last name from a form - w3resource</title>
</head><body>
<form id=""form1"" onsubmit=""getFormvalue()"">
First name: <input type=""text"" name=""fname"" value=""David""><br>
Last name: <input type=""text"" name=""lname"" value=""Beckham""><br>
<input type=""submit"" value=""Submit"">
</form>
</body>
</html>
","Easy
",初级,JavaScript HTML DOM
249,"JavaScript: Collect the value of href, hreflang, rel, target, and type attributes of a link"," Write a JavaScript function to get the value of the href, hreflang, rel, target, and type attributes of the specified link.Sample HTML file: ","function getAttributes()
{
 var u = document.getElementById(""w3r"").href;
 alert('The value of the href attribute of the link is : '+u);
 var v = document.getElementById(""w3r"").hreflang;   
 alert('The value of the hreflang attribute of the link is : '+v);
 var w = document.getElementById(""w3r"").rel; 
  alert('The value of the rel attribute of the link is : '+w);
 var x = document.getElementById(""w3r"").target; 
  alert('The value of the taget attribute of the link is : '+x);
 var y = document.getElementById(""w3r"").type; 
  alert('The value of the type attribute of the link is : '+y);  
}
","
<!DOCTYPE html>
<html><head>
<meta charset=utf-8 />
</head>
<body>
<p><a id=""w3r"" type=""text/html"" hreflang=""en-us"" rel=""nofollow"" target=""_self"" href=""https://www.w3resource.com/"">w3resource</a></p>
<button onclick=""getAttributes()"">Click here to get  attributes value</button>
</body></html>
","Easy
",初级,JavaScript HTML DOM
248,JavaScript: Set the background color of a paragraph,Write a JavaScript program to set the background color of a paragraph.,"function set_background() {
 docBody = document.getElementsByTagName(""body"")[0];
  //Get all the p elements that are descendants of the body
  myBodyElements = docBody.getElementsByTagName(""p"");
// get the first p elements
  myp1 = myBodyElements[0];
  myp1.style.background = ""rgb(255,0,0)"";
// get the second p elements
  myp2 = myBodyElements[1];
  myp2.style.background = ""rgb(255,255,0)"";
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Set the background color of a paragraph</title>
</head>
<body>
<input type=""button"" value=""Click to set paragraph background color"" onclick=""set_background()"">
<p>w3resource JavaScript Exercises</p>
<p>w3resource PHP Exercises</p> 
</body>
</html>
","Easy
",初级,JavaScript HTML DOM
250,JavaScript: Draw a rectangular shape,Write a JavaScript program to draw the following rectangular shape.Sample output: ,"function draw() {
  var canvas = document.getElementById('canvas');
  if (canvas.getContext) {
    var context = canvas.getContext('2d');

    context.fillRect(20,20,100,100);
    context.clearRect(40,40,60,60);
    context.strokeRect(45,45,50,50);
  }
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Draw a rectangular shape</title>
</head>
<body onload=""draw();"">
<canvas id=""canvas"" width=""150"" height=""150""></canvas>
</body>
</html>
","Easy
",初级,JavaScript Drawing
251,JavaScript: Draw a circle,Write a JavaScript program to draw a circle.Sample output: ,"function draw()
  {
var canvas = document.getElementById('circle');
if (canvas.getContext)
{
var ctx = canvas.getContext('2d'); 
var X = canvas.width / 2;
var Y = canvas.height / 2;
var R = 45;
ctx.beginPath();
ctx.arc(X, Y, R, 0, 2 * Math.PI, false);
ctx.lineWidth = 3;
ctx.strokeStyle = '#FF0000';
ctx.stroke();
}
}
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=utf-8 />
  <title>Draw a circle</title>
  </head>
  <body onload=""draw();"">
  <canvas id=""circle"" width=""150"" height=""150""></canvas>
  </body>
  </html>
  ","Medium
",初级,JavaScript Drawing
253,JavaScript: Draw a right-angled triangle,Write a JavaScript program to draw the following right-angled triangle.Sample output: ,"function draw() 
{
  var canvas = document.getElementById('canvas');
  if (canvas.getContext)
  {
    var context = canvas.getContext('2d');

    context.beginPath();
    context.moveTo(75,75);
    context.lineTo(10,75);
    context.lineTo(10,25);
    context.fill();
  }
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Draw a right-angled triangle</title>
</head>
<body onload=""draw();"">
<canvas id=""canvas"" width=""150"" height=""150""></canvas>
</body>
</html>
","Medium
",初级,JavaScript Drawing
255,"JavaScript: Draw a diagram with diagonal, white to black circles","Write a JavaScript program to draw the following diagram [diagonal, white to black circles].Sample output: ",,"<!DOCTYPE html>
  <html>
  <head>
  <title>Diagonal, White to Black circles</title>
  </head>
 <body>
  <canvas id=""myCanvas"" width=""1500"" height=""800"">
  <p>Update your browser!</p>
  </canvas>
  </body> 
  </html>
  ","Medium
",初级,JavaScript Drawing
254,JavaScript: Draw a diagram using moveto() function,Write a JavaScript program to draw the following diagram [use moveto() function].Sample output: ,"function draw() 
{
  var canvas = document.getElementById('canvas');
  if (canvas.getContext)
  {
    var context = canvas.getContext('2d');
    context.beginPath();
   // Outer circle
    context.arc(75,75,50,0,Math.PI*2,true);
    context.moveTo(110,75);
    // Mouth 
    context.arc(75,75,35,0,Math.PI,false); 
    // Lefy and Right eye
    context.moveTo(55,65);
    context.arc(60,65,5,0,Math.PI*2,true); 
    context.arc(90,65,5,0,Math.PI*2,true);
    context.stroke();
  }
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Draw diagram using moveto() function</title>
</head>
<body onload=""draw();"">
<canvas id=""canvas"" width=""250"" height=""250""></canvas>
</body>
</html>
","Medium
",初级,JavaScript Drawing
252,"JavaScript: Draw two intersecting rectangles, one of which has alpha transparency","Write a JavaScript program to draw two intersecting rectangles, one of which has alpha transparency.Sample output :","function draw() 
  {
      var canvas = document.getElementById(""canvas"");
      if (canvas.getContext)
      {
        var context = canvas.getContext(""2d"");

        context.fillStyle = ""rgb(256,0,0)"";
        context.fillRect (15, 10, 55, 50);
        
        context.fillStyle = ""rgba(0, 0, 200, 0.6)"";
        context.fillRect (35, 30, 55, 50);
      }
  }
  ","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=utf-8 />
  <title>Draw two intersecting rectangles, one of which has alpha transparency</title>
  </head>
  <body onload=""draw();"">
  <canvas id=""canvas"" width=""150"" height=""150""></canvas>
  </body>
  </html>
  ","Easy
",初级,JavaScript Drawing
256,JavaScript: Reverse a number,"
Write a JavaScript function that reverse a number.

Sample Data and output: 

Example x = 32243;


Expected Output: 34223","function reverse_a_number(n)
{
	n = n + """";
	return n.split("""").reverse().join("""");
}
console.log(reverse_a_number(32243));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Reverse a number</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
257,JavaScript: Check whether a passed string is palindrome or not,Write a JavaScript function that checks whether a passed string is palindrome or not?,"// Write a JavaScript function that checks whether a passed string is palindrome or not? 

function check_Palindrome(str_entry){
// Change the string into lower case and remove  all non-alphanumeric characters
   var cstr = str_entry.toLowerCase().replace(/[^a-zA-Z0-9]+/g,'');
	var ccount = 0;
// Check whether the string is empty or not
	if(cstr==="""") {
		console.log(""Nothing found!"");
		return false;
	}
// Check if the length of the string is even or odd 
	if ((cstr.length) % 2 === 0) {
		ccount = (cstr.length) / 2;
	} else {
// If the length of the string is 1 then it becomes a palindrome
		if (cstr.length === 1) {
			console.log(""Entry is a palindrome."");
			return true;
		} else {
// If the length of the string is odd ignore middle character
			ccount = (cstr.length - 1) / 2;
		}
	}
// Loop through to check the first character to the last character and then move next
	for (var x = 0; x < ccount; x++) {
// Compare characters and drop them if they do not match 
		if (cstr[x] != cstr.slice(-1-x)[0]) {
			console.log(""Entry is not a palindrome."");
			return false;
		}
	}
	console.log(""The entry is a palindrome."");
	return true;
}
check_Palindrome('madam');
check_Palindrome('nurses run');
check_Palindrome('fox');
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8/>
<title>A passed string is palindrome or notlt;/title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
258,JavaScript: Generates all combinations of a string,"
Write a JavaScript function that generates all combinations of a string.

Example string: 'dog' 

Expected Output: d,o,do,g,dg,og,dog","//Write a JavaScript function that generates all combinations of a string.
function substrings(str1)
{
var array1 = [];
  for (var x = 0, y=1; x < str1.length; x++,y++) 
  {
   array1[x]=str1.substring(x, y);
    }
var combi = [];
var temp= """";
var slent = Math.pow(2, array1.length);

for (var i = 0; i < slent ; i++)
{
    temp= """";
    for (var j=0;j<array1.length;j++) {
        if ((i & Math.pow(2,j))){ 
            temp += array1[j];
        }
    }
    if (temp !== """")
    {
        combi.push(temp);
    }
}
  console.log(combi.join(""\n""));
}

substrings(""dog"");
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Combination of a string</title>
</head>
<body>
  
</body>
</html>
","Medium
",高级,JavaScript Functions
259,JavaScript: Returns a passed string with letters in alphabetical order,"
Write a JavaScript function that returns a passed string with letters in alphabetical order.

Example string: 'webmaster' 

Expected Output: 'abeemrstw'","function alphabet_order(str)
  {
return str.split('').sort().join('');
  }
console.log(alphabet_order(""webmaster""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Returns a passed string with letters in alphabetical order</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
261,JavaScript: Find the longest word within a string,"
Write a JavaScript function that accepts a string as a parameter and find the longest word within the string.

Sample Data and output: 

Example string: 'Web Development Tutorial' 

Expected Output: 'Development' ","function find_longest_word(str)
{
  var array1 = str.match(/\w[a-z]{0,}/gi);
  var result = array1[0];

  for(var x = 1 ; x < array1.length ; x++)
  {
    if(result.length < array1[x].length)
    {
    result = array1[x];
    } 
  }
  return result;
}
console.log(find_longest_word('Web Development Tutorial'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find the longest word within a string</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
260,JavaScript: Converts the first letter of each word of a string in upper case,"
Write a JavaScript function that accepts a string as a parameter and converts the first letter of each word of the string in upper case.

Example string: 'the quick brown fox'


Expected Output: 'The Quick Brown Fox '","//Write a JavaScript function that accepts a string as a parameter and converts the first letter of each word of the string in upper case.

function uppercase(str)
{
  var array1 = str.split(' ');
  var newarray1 = [];
    
  for(var x = 0; x < array1.length; x++){
      newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));
  }
  return newarray1.join(' ');
}
console.log(uppercase(""the quick brown fox""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Converts the first letter of each word of a string in upper case</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
262,JavaScript: Counts the number of vowels within a string,"
Write a JavaScript function that accepts a string as a parameter and counts the number of vowels within the string.



Note : As the letter 'y' can be regarded as both a vowel and a consonant, we do not count 'y' as vowel here. 
Sample Data and output: 

Example string: 'The quick brown fox' 

Expected Output: 5","function vowel_count(str1)
{
  var vowel_list = 'aeiouAEIOU';
  var vcount = 0;
  
  for(var x = 0; x < str1.length ; x++)
  {
    if (vowel_list.indexOf(str1[x]) !== -1)
    {
      vcount += 1;
    }
  
  }
  return vcount;
}
console.log(vowel_count(""The quick brown fox""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Counts the number of vowels within a string</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
263,JavaScript: Check a number is prime or not,Write a JavaScript function that accepts a number as a parameter and check the number is prime or not.,"function test_prime(n)
{

  if (n===1)
  {
    return false;
  }
  else if(n === 2)
  {
    return true;
  }else
  {
    for(var x = 2; x < n; x++)
    {
      if(n % x === 0)
      {
        return false;
      }
    }
    return true;  
  }
}

console.log(test_prime(37));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Check a number is prime or not</title>
</head>
<body>
 
</body>
</html>
","Easy
",高级,JavaScript Functions
264,JavaScript: Get the data type,"Write a JavaScript function which accepts an argument and returns the type.Note : There are six possible values that typeof returns: object, boolean, function, number, string, and undefined.","function detect_data_type(value)
{
var dtypes = [Function, RegExp, Number, String, Boolean, Object], x, len;
    
if (typeof value === ""object"" || typeof value === ""function"") 
    {
     for (x = 0, len = dtypes.length; x < len; x++) 
     {
            if (value instanceof dtypes[x])
            {
                return dtypes[x];
            }
      }
    }
    
    return typeof value;
}
console.log(detect_data_type(12));
console.log(detect_data_type('w3resource'));
console.log(detect_data_type(false));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Detect JavaScript Data Types</title>
</head>
<body>
  
</body>
</html>
","Medium
",高级,JavaScript Functions
265,JavaScript: Returns n rows by n columns identity matrix,Write a JavaScript function which returns the n rows by n columns identity matrix.,"function matrix(n) {

        var i;
        var j;

        for (i=0; i < n; i++)
        {
          for (j=0; j < n; j++)
          {
               if (i === j)
               {
                
                 console.log(' 1 ');
               }
                      
               else 
                {
                 console.log(' 0 ');}
                }
             console.log('----------');
           }
       }
matrix(4);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Returns the n rows by n columns identity matrix</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
267,JavaScript: Find a perfect number,Write a JavaScript function which says whether a number is perfect.,"function is_perfect(number)
{
var temp = 0;
   for(var i=1;i<=number/2;i++)
     {
         if(number%i === 0)
          {
            temp += i;
          }
     }
   
     if(temp === number && temp !== 0)
        {
       console.log(""It is a perfect number."");
        } 
     else
        {
       console.log(""It is not a perfect number."");
        }   
 } 
is_perfect(28); 
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find a perfect number</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
268,JavaScript: Compute the factors of a positive integer,Write a JavaScript function to compute the factors of a positive integer.,"function factors(n)
{
 var num_factors = [], i;
 
 for (i = 1; i <= Math.floor(Math.sqrt(n)); i += 1)
  if (n % i === 0)
  {
   num_factors.push(i);
   if (n / i !== i)
    num_factors.push(n / i);
  }
 num_factors.sort(function(x, y)
   {
     return x - y;});  // numeric sort
     return num_factors;
    }
console.log(factors(15));  // [1,3,5,15] 
console.log(factors(16));  // [1,2,4,8,16] 
console.log(factors(17));  // [1,17]
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the factors of a positive integer</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
270,JavaScript: Compute the value of bn where n is the exponent and b is the bases,Write a JavaScript function to compute the value of bn where n is the exponent and b is the bases. Accept b and n from the user and display the result. ,"function exp(b,n)
{
        var ans = 1;
        for (var i =1; i <= n; i++)
        {
                ans = b * ans;        
        }
        return ans;
}
console.log(exp(2, 3));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the value of bn where n is the exponent and b is the bases</title>
</head>
<body>
<body onload=""updateClock(); setInterval('updateClock()', 1000)"">  
</body>
</html>
","Easy
",高级,JavaScript Functions
271,JavaScript: Extract unique characters from a string,"Write a JavaScript function to extract unique characters from a string.
Example string : ""thequickbrownfoxjumpsoverthelazydog""

Expected Output : ""thequickbrownfxjmpsvlazydg""","function unique_char(str1)
{
 var str=str1;
 var uniql="""";
 for (var x=0;x < str.length;x++)
 {

 if(uniql.indexOf(str.charAt(x))==-1)
  {
  uniql += str[x];  
  
   }
  }
  return uniql;  
}  
console.log(unique_char(""thequickbrownfoxjumpsoverthelazydog""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Extract unique character from a string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
272,JavaScript: Number of occurrences of each letter in specified string,Write a JavaScript function to get the number of occurrences of each letter in specified string. ,"function Char_Counts(str1) {
var uchars = {};
str1.replace(/\S/g, function(l){uchars[l] = (isNaN(uchars[l]) ? 1 : uchars[l] + 1);});
return uchars;
}
console.log(Char_Counts(""The quick brown fox jumps over the lazy dog""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Number of occurrences of each letter in specified string</title>
</head>
<body>
","Medium
",高级,JavaScript Functions
273,JavaScript: Search JavaScript arrays with a binary search,"Write a function for searching JavaScript arrays with a binary search. 
<i>Note</i> : A binary search searches by splitting an array into smaller and smaller chunks until it finds the desired value.

","function array_binarySearch(narray, delement) {
   var mposition = Math.floor(narray.length / 2);

   if (narray[mposition] === delement){
      return mposition;
   }
   else if (narray.length === 1) 
   {
      return null;
   }
   else if (narray[mposition] < delement) {
      var arr = narray.slice(mposition + 1);
      var res = array_binarySearch(arr, delement);
      if (res === null)
      {
         return null;
      }
      else {
         return mposition + 1 + res;
      }
   }
   else {
      var arr1 = narray.slice(0, mposition);
      return array_binarySearch(arr1, delement);
   }
}

 var myArray = [1, 2, 3, 5, 6, 7, 10, 11, 14, 15, 17, 19, 20, 22, 23];
 console.log(array_binarySearch(myArray, 6));
 ","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Search JavaScript arrays with a binary search</title>
</head>
<body>
  
</body>
</html>
","Medium
",高级,JavaScript Functions
274,JavaScript: Bigger elements in an array,Write a JavaScript function that returns array elements larger than a number.,"function BiggerElements(val)
   {
     return function(evalue, index, array)
     {
     return (evalue >= val);
     };
   }
var result = [11, 45, 4, 31, 64, 10]. filter(BiggerElements(10));
console.log(result);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Bigger elements in an array</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
275,JavaScript: Generates a string id (specified length) of random characters,"Write a JavaScript function that generates a string id (specified length) of random characters.
<i>Sample character list</i> : ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789""","function makeid(l)
{
var text = """";
var char_list = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"";
for(var i=0; i < l; i++ )
{  
text += char_list.charAt(Math.floor(Math.random() * char_list.length));
}
return text;
}
console.log(makeid(8));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Generates a string id (specified length) of random characters</title>
</head>
<body>
  
</body>
</html>
","Easy
",高级,JavaScript Functions
276,JavaScript: Get all possible subset with a fixed length combinations in an array,"Write a JavaScript function to get all possible subset with a fixed length (for example 2) combinations in an array.
<i>Sample array</i> : [1, 2, 3] and subset length is 2 



Expected output : [[2, 1], [3, 1], [3, 2], [3, 2, 1]]

","function subset(arra, arra_size)
 {
    var result_set = [], 
        result;
    
   
for(var x = 0; x < Math.pow(2, arra.length); x++)
  {
    result = [];
    i = arra.length - 1; 
     do
      {
      if( (x & (1 << i)) !== 0)
          {
             result.push(arra[i]);
           }
        }  while(i--);

    if( result.length >= arra_size)
       {
          result_set.push(result);
        }
    }

    return result_set; 
}

console.log(subset([1, 2, 3], 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript array subset</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Functions
277,JavaScript: Letter count within a string,"
Write a JavaScript function that accepts two arguments, a string and a letter and the function will count the number of occurrences of the specified letter within the string.



<i>Sample arguments</i>: 'w3resource.com', 'o'


Expected output: 2 ","function char_count(str, letter) 
{
 var letter_Count = 0;
 for (var position = 0; position < str.length; position++) 
 {
    if (str.charAt(position) == letter) 
      {
      letter_Count += 1;
      }
  }
  return letter_Count;
}

console.log(char_count('w3resource.com', 'o'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Letter count within a string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
278,JavaScript: Find the first not repeated character,"Write a JavaScript function to find the first not repeated character.
<i>Sample arguments </i> : 'abacddbec' 

Expected output : 'e' 




<strong>Pictorial Presentation:</strong>
<img alt=""JavaScript: Find the first not repeated character"" src=""https://www.w3resource.com/w3r_images/javascript-function-image-exercise-23.png"" style=""max-width:100%;display:block;height:auto;border: 2px solid silver;"">

<strong>Sample Solution: </strong> - </img>","function find_FirstNotRepeatedChar(str) {
  var arra1 = str.split('');
  var result = '';
  var ctr = 0;
 
  for (var x = 0; x < arra1.length; x++) {
    ctr = 0;
 
    for (var y = 0; y < arra1.length; y++) 
    {
      if (arra1[x] === arra1[y]) {
        ctr+= 1;
      }
    }
 
    if (ctr < 2) {
      result = arra1[x];
      break;
    }
  }
  return result;
}
console.log(find_FirstNotRepeatedChar('abacddbec'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>find the first not repeated character.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
279,JavaScript: Bubble Sort algorithm,"Write a JavaScript function to apply Bubble Sort algorithm.
Note : According to wikipedia ""Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that works by repeatedly stepping through the list to be sorted, comparing each pair of adjacent items and swapping them if they are in the wrong order"". 
<i>Sample array</i>: [12, 345, 4, 546, 122, 84, 98, 64, 9, 1, 3223, 455, 23, 234, 213]

Expected output: [3223, 546, 455, 345, 234, 213, 122, 98, 84, 64, 23, 12, 9, 4, 1]","function bubble_Sort(a)
{
    var swapp;
    var n = a.length-1;
    var x=a;
    do {
        swapp = false;
        for (var i=0; i < n; i++)
        {
            if (x[i] < x[i+1])
            {
               var temp = x[i];
               x[i] = x[i+1];
               x[i+1] = temp;
               swapp = true;
            }
        }
        n--;
    } while (swapp);
 return x; 
}

console.log(bubble_Sort([12, 345, 4, 546, 122, 84, 98, 64, 9, 1, 3223, 455, 23, 234, 213]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Bubble Sort algorithm</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Functions
280,JavaScript: Accept a list of words and returns the longest,"Write a JavaScript function that accept a list of country names as input and returns the longest country name as output
S<i>ample function </i> : Longest_Country_Name([""Australia"", ""Germany"", ""United States of America""])

Expected output : ""United States of America""","function Longest_Country_Name(country_name)
  {
  return country_name.reduce(function(lname, country) 
  {
    return lname.length > country.length ? lname : country;
  }, 
"""");
}
console.log(Longest_Country_Name([""Australia"", ""Germany"", ""United States of America""]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find longest word</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
281,JavaScript: Find longest substring in a given string without repeating characters,Write a JavaScript function to find longest substring in a given string without repeating characters.,"function longest_substring_without_repeating_characters(input) {
var chars = input.split('');
var curr_char;
var str = """";
var longest_string = """";
var hash = {};
for (var i = 0; i < chars.length; i++) {
curr_char = chars[i];
if (!hash[chars[i]]) 
{ 
str += curr_char; 
hash[chars[i]] = {index:i};
}
else 
{
if(longest_string.length <= str.length)
{
longest_string = str;
}
var prev_dupeIndex = hash[curr_char].index;
var str_FromPrevDupe = input.substring(prev_dupeIndex + 1, i);
str = str_FromPrevDupe + curr_char;
hash = {};
for (var j = prev_dupeIndex + 1; j <= i; j++) {
hash[input.charAt(j)] = {index:j};
}
}
}
return longest_string.length > str.length ? longest_string : str;
}
console.log(longest_substring_without_repeating_characters(""google.com"")); 

console.log(longest_substring_without_repeating_characters(""example.com"")); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find longest substring in a given string without repeating characters</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Functions
283,JavaScript: Pass a JavaScript function as parameter,Write a JavaScript program to pass a 'JavaScript function' as parameter.,"function addStudent(id, refreshCallback)
{
    refreshCallback();  
}

function refreshStudentList() {
    console.log('Hello');
}

addStudent(1, refreshStudentList);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript program to pass a JavaScript function as parameter</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
266,JavaScript: Find the second lowest and second greatest numbers from an array,"Write a JavaScript function which will take an array of numbers stored and find the second lowest and second greatest numbers, respectively.","function Second_Greatest_Lowest(arr_num)
{
  arr_num.sort(function(x,y)
           {
           return x-y;
           });
  var uniqa = [arr_num[0]];
  var result = [];
  
  for(var j=1; j < arr_num.length; j++)
  {
    if(arr_num[j-1] !== arr_num[j])
    {
      uniqa.push(arr_num[j]);
    }
  }
    result.push(uniqa[1],uniqa[uniqa.length-2]);
  return result.join(',');
  }

console.log(Second_Greatest_Lowest([1,2,3,4,5]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find the second lowest and second greatest numbers from an array</title>
</head>
<body>
  
</body>
","Easy
",高级,JavaScript Functions
284,JavaScript: Get the function name,Write a JavaScript function to get the function name.,"function abc() {
    console.log( arguments.callee.name );
}

abc();
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the function name.</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Functions
282,JavaScript: The longest palindrome in a specified string,"Write a JavaScript function that returns the longest palindrome in a given string.
Note: According to Wikipedia ""In computer science, the longest palindromic substring or longest symmetric factor problem is
the problem of finding a maximum-length contiguous substring of a given string that is also a palindrome.
For example, the longest palindromic substring of ""bananas"" is ""anana"".
The longest palindromic substring is not guaranteed to be unique; for example,
in the string ""abracadabra"", there is no palindromic substring with length greater than three,
but there are two palindromic substrings with length three, namely, ""aca"" and ""ada"".

In some applications it may be necessary to return all maximal
palindromic substrings (that is, all substrings that are themselves palindromes and cannot
be extended to larger palindromic substrings) rather than returning only one substring or
returning the maximum length of a palindromic substring.","function is_Palindrome(str1) {
var rev = str1.split("""").reverse().join("""");
return str1 == rev;
}

function longest_palindrome(str1){

var max_length = 0,
maxp = '';

for(var i=0; i < str1.length; i++) 
{
var subs = str1.substr(i, str1.length);

for(var j=subs.length; j>=0; j--) 
{
var sub_subs_str = subs.substr(0, j);
if (sub_subs_str.length <= 1)
continue;

if (is_Palindrome(sub_subs_str))
{
if (sub_subs_str.length > max_length) 
{
max_length = sub_subs_str.length;
maxp = sub_subs_str;
}
}
}
}

return maxp;
}
console.log(longest_palindrome(""abracadabra""));

console.log(longest_palindrome(""HYTBCABADEFGHABCDEDCBAGHTFYW12345678987654321ZWETYGDE"")); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function that returns the longest palindrome in a given string</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Functions
269,JavaScript: Convert an amount to coins,"Write a JavaScript function to convert an amount to coins.
<i>Sample function</i> : amountTocoins(46, [25, 10, 5, 2, 1])

Here 46 is the amount. and 25, 10, 5, 2, 1 are coins. 

<i>Output</i> : 25, 10, 10, 1

","function amountTocoins(amount, coins) 
{
 if (amount === 0) 
  {
     return [];
   } 
 else
   {
     if (amount >= coins[0]) 
       {
        left = (amount - coins[0]);
        return [coins[0]].concat( amountTocoins(left, coins) );
        } 
      else
        {
         coins.shift();
         return amountTocoins(amount, coins);
        }
    }
} 
console.log(amountTocoins(46, [25, 10, 5, 2,1]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript function to convert an amount to coins.</title>
</head>
<body>
  
</body>
</html>
","Medium
",高级,JavaScript Functions
285,JavaScript: Compare two objects to determine if the first one contains equivalent property values to the second one,Write a JavaScript program to compare two objects to determine if the first one contains equivalent property values to the second one.,"//#Source https://bit.ly/2neWfJ2
const matches = (obj, source) =>
  Object.keys(source).every(key => obj.hasOwnProperty(key) && obj[key] === source[key]);
console.log(matches({ age: 25, hair: 'long', beard: true }, { hair: 'long', beard: true })); // true
console.log(matches({ hair: 'long', beard: true }, { age: 25, hair: 'long', beard: true })); // false
console.log(matches({ hair: 'long', beard: true }, { age: 26, hair: 'long', beard: true })); // false
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Compare two objects to determine if the first one contains equivalent property values to the second one</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
287,JavaScript: Converts a comma-separated values string to a 2D array,"Write a JavaScript program to converts a comma-separated values (CSV) string to a 2D array.Note: Use String.split('\n') to create a string for each row, then String.split(delimiter) to separate the values in each row. Omit the second argument, delimiter, to use a default delimiter of ,. Omit the third argument, omitFirstRow, to include the first row (title row) of the CSV string.","//#Source https://bit.ly/2neWfJ2
const csv_to_array = (data, delimiter = ',', omitFirstRow = false) =>
  data
    .slice(omitFirstRow ? data.indexOf('\n') + 1 : 0)
    .split('\n')
    .map(v => v.split(delimiter));

console.log(csv_to_array('a,b\nc,d')); 
console.log(csv_to_array('a;b\nc;d', ';')); 
console.log(csv_to_array('head1,head2\na,b\nc,d', ',', true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Converts a comma-separated values string to a 2D array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
288,JavaScript : Convert a comma-separated values string to a 2D array of objects,Write a JavaScript program to convert a comma-separated values (CSV) string to a 2D array of objects. The first row of the string is used as the title row.,"//#Source https://bit.ly/2neWfJ2
const CSV_to_JSON = (data, delimiter = ',') => {
  const titles = data.slice(0, data.indexOf('\n')).split(delimiter);
  return data
    .slice(data.indexOf('\n') + 1)
    .split('\n')
    .map(v => {
      const values = v.split(delimiter);
      return titles.reduce((obj, title, index) => ((obj[title] = values[index]), obj), {});
    });
};
console.log(CSV_to_JSON('col1,col2\na,b\nc,d')); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];
console.log(CSV_to_JSON('col1;col2\na;b\nc;d', ';')); // [{'col1': 'a', 'col2': 'b'}, {'col1': 'c', 'col2': 'd'}];
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a comma-separated values string to a 2D array of objects</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
289,JavaScript: Convert an array of objects to a comma-separated values string that contains only the columns specified,Write a JavaScript program to? convert an array of objects to a comma-separated values (CSV) string that contains only the columns specified.,"//#Source https://bit.ly/2neWfJ2
const JSON_to_CSV = (arr, columns, delimiter = ',') =>
  [
    columns.join(delimiter),
    ...arr.map(obj =>
      columns.reduce(
        (acc, key) => `${acc}${!acc.length ? '' : delimiter}""${!obj[key] ? '' : obj[key]}""`,
        ''
      )
    )
  ].join('\n');

console.log(JSON_to_CSV([{ x: 100, y: 200 }, { x: 300, y: 400, z: 500 }, { x: 6 }, { y: 7 }], ['x', 'y']));
console.log(JSON_to_CSV([{ x: 100, y: 200 }, { x: 300, y: 400, z: 500 }, { x: 6 }, { y: 7 }], ['x', 'y'], ';'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert an array of objects to a comma-separated values string that contains only the columns specified</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
290,JavaScript: Target a given value in a nested JSON object,"Write a JavaScript program to target a given value in a nested JSON object, based on the given key.","//#Source https://bit.ly/2neWfJ2
const dig = (obj, target) =>
  target in obj
    ? obj[target]
    : Object.values(obj).reduce((acc, val) => {
        if (acc !== undefined) return acc;
        if (typeof val === 'object') return dig(val, target);
      }, undefined);

const data = {
  level1: {
    level2: {
      level3: 'some data'
    }
  }
};

const dog = {
    ""status"": ""success"",
    ""message"": ""https://images.dog.ceo/breeds/african/n02116738_1105.jpg""
}
console.log(dig(data, 'level3'));
console.log(dig(data, 'level4'));
console.log(dig(dog, 'message'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Target a given value in a nested JSON object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
291,JavaScript: Converts a specified number to an array of digits,"Write a JavaScript program to converts a specified number to an array of digits.Note: Convert the number to a string, using the spread operator (...) to build an array.","const digitize = n => [...`${n}`].map(i => parseInt(i));

console.log(digitize(123));
console.log(digitize(1230));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Converts a specified number to an array of digits</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
292,JavaScript: Filter out the specified values from a specified array,Write a JavaScript program to?filter out the specified values from a specified array. Return the original array without the filtered values.,"//#Source https://bit.ly/2neWfJ2 
 const pull = (arr, ...args) => {
  let argState = Array.isArray(args[0]) ? args[0] : args;
  let pulled = arr.filter((v, i) => !argState.includes(v));
  arr.length = 0;
  pulled.forEach(v => arr.push(v));
  return pulled;
};
let arra1 = ['a', 'b', 'c', 'a', 'b', 'c'];
console.log(pull(arra1, 'a', 'c'));
let arra2 =  ['a', 'b', 'c', 'a', 'b', 'c'];
console.log(pull(arra2, 'b'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter out the specified values from a specified array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
293,JavaScript: Combine?the numbers of a?given?array into an array containing all combinations,Write a JavaScript program to combine?the numbers of a?given?array into an array containing all combinations.,"//#Source https://bit.ly/2neWfJ2 
const powerset = arr => arr.reduce((a, v) => a.concat(a.map(r => [v].concat(r))), [[]]);
console.log(powerset([1, 2]));
console.log(powerset([1, 2, 3]));
console.log(powerset([1, 2, 3, 4]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Combine?the numbers of a?given?array into an array containing all combinations</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
295,JavaScript: Generate a random hexadecimal color code,Write a JavaScript program to generate a random hexadecimal color code.,"//#Source https://bit.ly/2neWfJ2 
const random_hex_color_code = () => {
  let n = (Math.random() * 0xfffff * 1000000).toString(16);
  return '#' + n.slice(0, 6);
};

console.log(random_hex_color_code())
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Generate a random hexadecimal color code</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
296,JavaScript: Removes non-printable ASCII characters from a given string,Write a JavaScript program? to removes non-printable ASCII characters from a given string.,"//#Source https://bit.ly/2neWfJ2 
const remove_non_ASCII = str => str.replace(/[^\x20-\x7E]/g, '');
console.log(remove_non_ASCII('????ééêw3resour?ce?Dtúú'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Removes non-printable ASCII characters from a given string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
297,JavaScript: Convert the length of a given string in bytes,Write a JavaScript program to convert the length of a given string in bytes.,"//#Source https://bit.ly/2neWfJ2 
const byte_Size = str => new Blob([str]).size;
console.log(byte_Size('123456'));  
console.log(byte_Size('Hello World'));  
console.log(byte_Size('?￠')); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert the length of a given string in bytes</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
300,"JavaScript: Returns true if the provided predicate function returns true for all elements in a collection, false otherwise","Write a JavaScript function that returns true if the provided predicate function returns true for all elements in a collection, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const all = (arr, fn = Boolean) => arr.every(fn);
console.log(all([4, 2, 3], x => x > 1)); 
console.log(all([4, 2, 3], x => x < 1));
console.log(all([1, 2, 3])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Returns true if the provided predicate function returns true for all elements in a collection, false otherwise</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
301,JavaScript: Split values of two given arrays into two groups,"Write a JavaScript program to split values of two given arrays into two groups. If an element in filter is truthy, the corresponding element in the collection belongs to the first group; otherwise, it belongs to the second group.","//#Source https://bit.ly/2neWfJ2 
const bifurcate = (arr, filter) =>
  arr.reduce((acc, val, i) => (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);
console.log(bifurcate([1, 2, 3, 4], [true, true, false, true]));
console.log(bifurcate([1, 2, 3, 4], [true, true, true, true]));
console.log(bifurcate([1, 2, 3, 4], [false, false, false, false]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Split values of two given arrays into two groups</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
302,JavaScript: Remove specified?elements from the left of a given array of elements,Write a JavaScript program to?remove specified?elements from the left of a given array of elements.,"//#Source https://bit.ly/2neWfJ2 
function remove_from_left(arr, n = 1){
  return arr.slice(n); 
}
console.log(remove_from_left([1, 2, 3]));
console.log(remove_from_left([1, 2, 3], 1));
console.log(remove_from_left([1, 2, 3], 2));
console.log(remove_from_left([1, 2, 3], 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove specified?elements from the left of a given array of elements</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
303,JavaScript: Remove specified?elements from the right of a given array of elements,Write a JavaScript program to?remove specified?elements from the right of a given array of elements.,"//#Source https://bit.ly/2neWfJ2 
function remove_from_right(arr, n = -1){
  return arr.slice(n); 
}

console.log(remove_from_right([1, 2, 3]));
console.log(remove_from_right([1, 2, 3], -1));
console.log(remove_from_right([1, 2, 3], -2));
console.log(remove_from_right([1, 2, 3], -4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove specified?elements from the right of a given array of elements</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
304,JavaScript: Extend a 3-digit color code to a 6-digit color code,Write a JavaScript program to extend a 3-digit color code to a 6-digit color code.,"//#Source https://bit.ly/2neWfJ2 
const extend_Hex = shortHex =>
  '#' +
  shortHex
    .slice(shortHex.startsWith('#') ? 1 : 0)
    .split('')
    .map(x => x + x)
    .join('');

console.log(extend_Hex('#03f'));
console.log(extend_Hex('05a'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Extend a 3-digit color code to a 6-digit color code</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
305,,"
Write a JavaScript program to get every n<sup>th</sup> element in a given array.","//#Source https://bit.ly/2neWfJ2 
const every_nth = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);
console.log(every_nth([1, 2, 3, 4, 5, 6], 1));
console.log(every_nth([1, 2, 3, 4, 5, 6], 2));
console.log(every_nth([1, 2, 3, 4, 5, 6], 3));
console.log(every_nth([1, 2, 3, 4, 5, 6], 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get every nth element in a given array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
306,JavaScript: Filter?out the non-unique values in an array,Write a JavaScript program to filter?out the non-unique values in an array.,"//#Source https://bit.ly/2neWfJ2 
const filter_Non_Unique = arr => arr.filter(i => arr.indexOf(i) === arr.lastIndexOf(i));

console.log(filter_Non_Unique([1, 2, 2, 3, 4, 4, 5]));  
console.log(filter_Non_Unique([1, 2, 3, 4]));  
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter?out the non-unique values in an array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
307,"JavaScript: Filter out the non-unique values in an array, based on a provided comparator function","Write a JavaScript program to filter out the non-unique values in an array, based on a provided comparator function.Note: The comparator function takes four arguments: the values of the two elements being compared and their indexes.","//#Source https://bit.ly/2neWfJ2 
const filter_Non_UniqueBy = (arr, fn) =>
  arr.filter((v, i) => arr.every((x, j) => (i === j) === fn(v, x, i, j)));

console.log(filter_Non_UniqueBy(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) => a.id == b.id
)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter out the non-unique values in an array, based on a provided comparator function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
308,JavaScript: Decapitalize the first letter of a string,Write a JavaScript program to decapitalize the first letter of a string.,"//#Source https://bit.ly/2neWfJ2 
const decapitalize = ([first, ...rest], upperRest = false) =>
  first.toLowerCase() + (upperRest ? rest.join('').toUpperCase() : rest.join(''));
console.log(decapitalize('W3resource'))
console.log(decapitalize('Red', true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Decapitalize the first letter of a string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
309,JavaScript: Create a new array out of the two supplied by creating each possible pair from the arrays,Write a JavaScript program to?create a new array out of the two supplied by creating each possible pair from the arrays.,"//#Source https://bit.ly/2neWfJ2 
const xProd = (a, b) => a.reduce((acc, x) => acc.concat(b.map(y => [x, y])), []);
console.log(xProd([1, 2], ['a', 'b']));
console.log(xProd([1, 2], [1, 2]));
console.log(xProd(['a', 'b'], ['a', 'b']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a new array out of the two supplied by creating each possible pair from the arrays</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
310,JavaScript: Return true if the string is y/yes other wise false,Write a JavaScript program that will return true if the string is y/yes or false if the string is n/no.,"//#Source https://bit.ly/2neWfJ2 
const yes_No = (val, def = false) =>
  /^(y|yes)$/i.test(val) ? true : /^(n|no)$/i.test(val) ? false : def;
console.log(yes_No('Y')); 
console.log(yes_No('yes'));  
console.log(yes_No('No')); 
console.log(yes_No('Foo', true));  
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the string is y/yes other wise false</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
311,JavaScript: Find every element that exists in any of the two given arrays once,"Write a JavaScript program to find every element that exists in any of the two given arrays once, using a provided comparator function.","//#Source https://bit.ly/2neWfJ2 
const union_With = (a, b, comp) =>
 Array.from(new Set([...a, ...b.filter(x => a.findIndex(y => comp(x, y)) === -1)]));

console.log(union_With([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) => Math.round(a) === Math.round(b)));
console.log(union_With([1, 2, 3, 4], [1, 2, 3, 4, 5], (a, b) => Math.round(a) === Math.round(b)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find every element that exists in any of the two given arrays once</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
312,JavaScript: Measure the time taken by a function to execute,Write a JavaScript program to measure the time taken by a function to execute.,"const time_taken = callback => {
  const result = callback();
  return result;
};
console.log(""Time taken: "" + time_taken(() => Math.pow(2, 10))+"" ms""); 
console.log(""Time taken: "" + time_taken(() => Math.sqrt(225))+"" ms"");
console.log(""Time taken: "" + time_taken(() => Math.sqrt((5 * 5) + (6 * 6)))+"" ms"");
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Measure the time taken by a function to execute</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
313,JavaScript: Convert a value to a safe integer,Write a JavaScript program to convert a value to a safe integer.,"//#Source https://bit.ly/2neWfJ2 
const to_Safe_Integer = num =>
 Math.round(Math.max(Math.min(num, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER));
console.log(to_Safe_Integer('5.2'));
console.log(to_Safe_Integer('5.52'));
console.log(to_Safe_Integer(Infinity)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a value to a safe integer</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
314,"JavaScript: Filter out the element(s) of a given array, that have one of the specified values","Write a JavaScript program to filter out the element(s) of a given array, that have one of the specified values.","//#Source https://bit.ly/2neWfJ2 
const without = (arr, ...args) => arr.filter(v => !args.includes(v));

console.log(without([2, 1, 2, 3], 1, 2));
console.log(without([2, 1, 2, 3], 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter out the element(s) of a given array, that have one of the specified values</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
315,JavaScript: Find all elements in a given array except for the first one,Write a JavaScript program to find all elements in a given array except for the first one. Return the whole array if the array's length is 1.,"//#Source https://bit.ly/2neWfJ2 
const tail = arr => (arr.length > 1 ? arr.slice(1) : arr);
console.log(tail([1, 2, 3])); 
console.log(tail([1]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find all elements in a given array except for the first one</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
316,JavaScript: Get the sum of a given array using the provided function,"Write a JavaScript program to get the sum of a given array, after mapping each element to a value using the provided function.","//#Source https://bit.ly/2neWfJ2 
const sumBy = (arr, fn) =>
arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0);

console.log(sumBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n));
console.log(sumBy([{ n: -4 }, { n: -2 }, { n: 8 }, { n: 6 }], 'n'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the sum of a given array using the provided function</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
481,JavaScript: Check whether a string is lower case or not,Write a JavaScript program to check whether a string is lower case or not.,,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether a string is lower case or not</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
317,JavaScript: Get a random number in the specified range,Write a JavaScript program to get a random number in the specified range.,"//#Source https://bit.ly/2neWfJ2 
const random_Number_In_Range = (min, max) => Math.random() * (max - min) + min;
console.log(random_Number_In_Range(2, 10)); 
console.log(random_Number_In_Range(1, 5)); 
console.log(random_Number_In_Range(-5, -2)); 
console.log(random_Number_In_Range(0, 1)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a random number in the specified range</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
318,JavaScript: Get a random integer in the specified range,Write a JavaScript program to get a random integer in the specified range.,"//#Source https://bit.ly/2neWfJ2 
const randomIntegerInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
console.log(randomIntegerInRange(0, 5));
console.log(randomIntegerInRange(2, 5));
console.log(randomIntegerInRange(5, -5));
console.log(randomIntegerInRange(-2, -7));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a random integer in the specified range</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
319,JavaScript: Get?an array of given n random integers in the specified range,Write a JavaScript program to get an array of given n random integers in the specified range.,"//#Source https://bit.ly/2neWfJ2 
const random_intArray_In_Range = (min, max, n = 1) =>
  Array.from({ length: n }, () => Math.floor(Math.random() * (max - min + 1)) + min);
console.log(random_intArray_In_Range(1, 20, 10));
console.log(random_intArray_In_Range(-10, 10, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get?an array of given n random integers in the specified range</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
320,JavaScript: Create a function that invokes each provided function with the arguments it receives and returns the results,Write a JavaScript program to create a function that invokes each provided function with the arguments it receives and returns the results.,"//#Source https://bit.ly/2neWfJ2 
const over = (...fns) => (...args) => fns.map(fn => fn.apply(null, args));
const minMax = over(Math.min, Math.max);
console.log(minMax(1, 2, 3, 4, 5)); 
console.log(minMax(1, 2, 5, 4, 3)); 
console.log(minMax(1, 2, 5, -4, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes each provided function with the arguments it receives and returns the results</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
321,JavaScript fundamental: Get a sorted array of objects ordered by properties and orders,Write a JavaScript program to get a sorted array of objects ordered by properties and orders.,"//#Source https://bit.ly/2neWfJ2 
const orderBy = (arr, props, orders) =>
  [...arr].sort((a, b) =>
    props.reduce((acc, prop, i) => {
      if (acc === 0) {
        const [p1, p2] = orders && orders[i] === 'desc' ? [b[prop], a[prop]] : [a[prop], b[prop]];
        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;
      }
      return acc;
    }, 0)
  );
const users = [{ name: 'fred', age: 48 }, { name: 'barney', age: 36 }, { name: 'fred', age: 40 }];

console.log(orderBy(users, ['name', 'age'], ['asc', 'desc'])); 
console.log(orderBy(users, ['name', 'age']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a sorted array of objects ordered by properties and orders</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
322,JavaScript: Pad a string on both sides with the specified character,"Write a JavaScript program to pad a string on both sides with the specified character, if it's shorter than the specified length.","//#Source https://bit.ly/2neWfJ2 

const pad = (str, length, char = ' ') =>
 str.padStart((str.length + length) / 2, char).padEnd(length, char);
console.log(pad('cat', 8));
console.log(pad(String(42), 6, '0'))
console.log(pad('foobar', 3))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Pad a string on both sides with the specified character</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
323,JavaScript: Remove?the key-value pairs corresponding to the given keys from an object,Write a JavaScript program to remove?the key-value pairs corresponding to the given keys from an object.,"//#Source https://bit.ly/2neWfJ2 
const omit = (obj, arr) =>
  Object.keys(obj)
    .filter(k => !arr.includes(k))
    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});

console.log(omit({ a: 1, b: '2', c: 3 }, ['b']));
console.log(omit({ a: 1, b: 2, c: 3 }, ['c']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove?the key-value pairs corresponding to the given keys from an object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
324,JavaScript: Create an array of key-value pair arrays from a given object,Write a JavaScript program to create an array of key-value pair arrays from a given object.,"//#Source https://bit.ly/2neWfJ2
const object_to_pairs = obj => Object.keys(obj).map(k => [k, obj[k]]);
console.log(object_to_pairs({ a: 1, b: 2 }));
console.log(object_to_pairs({ a: 1, b: 2, c: 3 }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an array of key-value pair arrays from a given object</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
325,JavaScript: Create an object from the given key-value pairs,Write a JavaScript program to create an object from the given key-value pairs.,"//#Source https://bit.ly/2neWfJ2 
const object_From_Pairs = arr => arr.reduce((a, v) => ((a[v[0]] = v[1]), a), {});
console.log(object_From_Pairs([['a', 1], ['b', 2]])); 
console.log(object_From_Pairs([[1, 10], [2, 20], [3, 30]]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an object from the given key-value pairs</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
326,JavaScript: Get?a customized coalesce function that returns the first argument that returns true from the provided argument validation function,Write a JavaScript program to get a customized coalesce function that returns the first argument that returns true from the provided argument validation function.,"//#Source https://bit.ly/2neWfJ2 
const coalesceFactory = valid => (...args) => args.find(valid);
const customCoalesce = coalesceFactory(_ => ![null, undefined, '', NaN].includes(_));
console.log(customCoalesce(undefined, null, NaN, '', 'Waldo'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get?a customized coalesce function that returns the first argument that returns true from the provided argument validation function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
327,JavaScript: Change function that accepts an array into a variadic function,"Write a JavaScript program to change function that accepts an array into a variadic function.Note: Given a function, return a closure that collects all inputs into an array-accepting function.","//#Source https://bit.ly/2neWfJ2 
const collectInto = fn => (...args) => fn(args);
const Pall = collectInto(Promise.all.bind(Promise));
let p1 = Promise.resolve(1);
let p2 = Promise.resolve(2);
let p3 = new Promise(resolve => setTimeout(resolve, 2000, 3));
Pall(p1, p2, p3).then(console.log); // [1, 2, 3] (after about 2 seconds)
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Change function that accepts an array into a variadic function</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
328,JavaScript: Remove falsey values from a given array,Write a JavaScript program to remove falsey values from a given array.,"//#Source https://bit.ly/2neWfJ2 
const compact = arr => arr.filter(Boolean);
console.log(compact([0, 1, false, 2, '', 3, 'a', 'e' * 23, NaN, 's', 34]));
console.log(compact([false, NaN, 'e' * 23]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove falsey values from a given array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
329,JavaScript: Split values into two groups with condition ,"Write a JavaScript program to split values into two groups, if an element in filter is truthy, the corresponding element in the collection belongs to the first group; otherwise, it belongs to the second group.","//#Source https://bit.ly/2neWfJ2 
const bifurcate = (arr, filter) =>
  arr.reduce((acc, val, i) => (acc[filter[i] ? 0 : 1].push(val), acc), [[], []]);
console.log(bifurcate(['beep', 'boop', 'foo', 'bar'], [true, true, false, true]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Split values into two groups with condition </title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
330,JavaScript: Curry (curries)?a function,"Write a JavaScript program to curry (curries)?a functionAccording to wiki.haskell.org?""Currying is the process of transforming a function that takes multiple arguments into a function that takes just a single argument and returns another function if any arguments are still needed. f x y = g (x,y), however the curried form is usually more convenient because it allows partial application.Note: Use recursion. If the number of provided arguments (args) is sufficient, call the passed function fn. Otherwise, return a curried function fn that expects the rest of the arguments. If you want to curry a function that accepts a variable number of arguments (a variadic function, e.g. Math.min()), you can optionally pass the number of arguments to the second parameter arity.","//#Source https://bit.ly/2neWfJ2 
const curry = (fn, arity = fn.length, ...args) =>
  arity <= args.length ? fn(...args) : curry.bind(null, fn, arity, ...args);
console.log(curry(Math.pow)(2)(8));
console.log(curry(Math.min, 3)(10)(50)(2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Curry (curries)?a function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
331,JavaScript: Perform a deep comparison between two values to determine if they are equivalent,"Write a JavaScript program to perform a deep comparison between two values to determine if they are equivalent.Note: Check if the two values are identical, if they are both Date objects with the same time, using Date.getTime() or if they are both non-object values with an equivalent value (strict comparison). Check if only one value is null or undefined or if their prototypes differ. If none of the above conditions are met, use Object.keys() to check if both values have the same number of keys, then use Array.every() to check if every key in the first value exists in the second one and if they are equivalent by calling this method recursively.","//#Source https://bit.ly/2neWfJ2 
const equals = (a, b) => {
  if (a === b) return true;
  if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime();
  if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b;
  if (a === null || a === undefined || b === null || b === undefined) return false;
  if (a.prototype !== b.prototype) return false;
  let keys = Object.keys(a);
  if (keys.length !== Object.keys(b).length) return false;
  return keys.every(k => equals(a[k], b[k]));
};

console.log(equals({ a: [2, { e: 3 }], b: [4], c: 'foo' }, { a: [2, { e: 3 }], b: [4], c: 'foo' }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform a deep comparison between two values to determine if they are equivalent</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
333,JavaScript: Retrieve a set of properties indicated by the given selectors from an object,Write a JavaScript program to retrieve a set of properties indicated by the given selectors from an object.,"//#Source https://bit.ly/2neWfJ2 
const get = (from, ...selectors) =>
  [...selectors].map(s =>
    s
      .replace(/\[([^\[\]]*)\]/g, '.$1.')
      .split('.')
      .filter(t => t !== '')
      .reduce((prev, cur) => prev && prev[cur], from)
  );
const obj = { selector: { to: { val: 'val to select' } }, target: [1, 2, { a: 'test' }] };

console.log(get(obj, 'selector.to.val', 'target[0]', 'target[2].a')); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Retrieve a set of properties indicated by the given selectors from an object</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
334,"JavaScript : Convert an integer to a suffixed string, adding am or pm based on its value","Write a JavaScript program to convert an integer to a suffixed string, adding am or pm based on its value.","//#Source https://bit.ly/2neWfJ2 
const get_Meridiem_Suffix_Of_Integer = num =>
  num === 0 || num === 24
    ? 12 + 'am'
    : num === 12
      ? 12 + 'pm'
      : num < 12
        ? (num % 12) + 'am'
        : (num % 12) + 'pm';

console.log(get_Meridiem_Suffix_Of_Integer(0));
console.log(get_Meridiem_Suffix_Of_Integer(11));
console.log(get_Meridiem_Suffix_Of_Integer(13));
console.log(get_Meridiem_Suffix_Of_Integer(25));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert an integer to a suffixed string, adding am or pm based on its value</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
335,JavaScript: Get an object containing the parameters of the current URL,Write a JavaScript program to get an object containing the parameters of the current URL.,"//#Source https://bit.ly/2neWfJ2 
  const get_URL_Parameters = url =>
  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(
    (a, v) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),
    {}
  );
console.log(get_URL_Parameters('http://url.com/page?name=Adam&surname=Smith')); 
console.log(get_URL_Parameters('google.com'));
console.log(get_URL_Parameters('https://www.w3resource.com'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get an object containing the parameters of the current URL</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
336,JavaScript: Group the elements of a given array based on the given function,Write a JavaScript program to group the elements of a given array based on the given function.,"//#Source https://bit.ly/2neWfJ2 
const group_By = (arr, fn) =>
  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val, i) => {
    acc[val] = (acc[val] || []).concat(arr[i]);
    return acc;
  }, {});
console.log(group_By([6.1, 4.2, 6.3], Math.sqrt)); 
console.log(group_By([6.1, 4.2, 6.3], Math.floor)); 
console.log(group_By(['one', 'two', 'three'], 'length'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Group the elements of a given array based on the given function</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
337,JavaScript: Initialize a two dimension array of given width and height and value,Write a JavaScript program to Initialize a two dimension array of given width and height and value.,"//#Source https://bit.ly/2neWfJ2 
const initialize_2D_Array = (w, h, val = null) =>
 Array.from({ length: h }).map(() => Array.from({ length: w }).fill(val));

console.log(initialize_2D_Array(2, 2, 0));
console.log(initialize_2D_Array(3, 3, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Initialize a two dimension array of given width and height and value</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
338,JavaScript: Initialize an array containing the numbers in the specified range where start and end are inclusive with their common difference step,Write a JavaScript program to initialize an array containing the numbers in the specified range where start and end are inclusive with their common difference step.,"//#Source https://bit.ly/2neWfJ2 
const initialize_Array_With_Range = (end, start = 0, step = 1) =>
  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map((v, i) => i * step + start);

console.log(initialize_Array_With_Range(5)); 
console.log(initialize_Array_With_Range(8, 3));  
console.log(initialize_Array_With_Range(6, 0, 2));  
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Initialize an array containing the numbers in the specified range where start and end are inclusive with their common difference step</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
339,"JavaScript: Join all given URL segments together, then normalizes the resulting URL","Write a JavaScript program to Join all given URL segments together, then normalizes the resulting URL.","//#Source https://bit.ly/2neWfJ2 
const URL_Join = (...args) =>
  args
    .join('/')
    .replace(/[\/]+/g, '/')
    .replace(/^(.+):\//, '$1://')
    .replace(/^file:/, 'file:/')
    .replace(/\/(\?|&|#[^!])/g, '$1')
    .replace(/\?/g, '&')
    .replace('&', '?');

console.log(URL_Join('http://www.google.com', 'a', '/b/cd', '?foo=123', '?bar=foo'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Join all given URL segments together, then normalizes the resulting URL</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
340,JavaScript: Check whether all elements in a given array?are equal or not,Write a JavaScript program to?check whether all elements in a given array?are equal or not.,"//#Source https://bit.ly/2neWfJ2 
const allEqual = arr => arr.every(val => val === arr[0]);
console.log(allEqual([1, 2, 3, 4, 5, 6]));
console.log(allEqual([12, 12, 12, 12]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether all elements in a given array?are equal or not</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
341,"JavaScript: Compute the average of an array, after mapping each element to a value using the provided function","Write a JavaScript program to compute the average of an array, after mapping each element to a value using the provided function.","//#Source https://bit.ly/2neWfJ2 
const averageBy = (arr, fn) =>
  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0) /
  arr.length;

console.log(averageBy([{ a: 40 }, { a: 20 }, { a: 80 }, { a: 60 }], o => o.a));
console.log(averageBy([{ a: 4 }, { a: 2 }, { a: 8 }, { a: 6 }], 'a'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Compute the average of an array, after mapping each element to a value using the provided function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
342,JavaScript: Split values into two groups according to a predicate function,"Write a JavaScript program to split values into two groups according to a predicate function, which specifies which group an element in the input collection belongs to.If the predicate function returns a truthy value, the collection element belongs to the first group; otherwise, it belongs to the second group.","//#Source https://bit.ly/2neWfJ2 
const bifurcateBy = (arr, fn) =>
  arr.reduce((acc, val, i) => (acc[fn(val, i) ? 0 : 1].push(val), acc), [[], []]);
console.log(bifurcateBy(['beep', 'boop', 'foo', 'bar'], x => x[0] === 'b'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Split values into two groups according to a predicate function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
343,JavaScript: Create a function that invokes fn with a given context,"Write a JavaScript program to create a function that invokes fn with a given context, optionally adding any additional supplied parameters to the beginning of the arguments.","//#Source https://bit.ly/2neWfJ2 
const bind = (fn, context, ...args) =>
  function() {
    return fn.apply(context, args.concat(...arguments));
  };
function greet(greeting, punctuation) {
  return greeting + ' ' + this.user + punctuation;
}
const freddy = { user: 'Morning' };
const freddyBound = bind(greet, freddy);
console.log(freddyBound('Good', '!'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes fn with a given context</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
345,JavaScript: Cast the provided value as an array if it's not one,Write a JavaScript program to cast the provided value as an array if it's not one.,"//#Source https://bit.ly/2neWfJ2 
const castArray = val => (Array.isArray(val) ? val : [val]);
console.log(castArray('w3r')); 
console.log(castArray([100]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Cast the provided value as an array if it's not one</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
346,JavaScript: Chain asynchronous functions,"Write a JavaScript program to chain asynchronous functions.Note: Loop through an array of functions containing asynchronous events, calling next when each asynchronous event has completed.","//#Source https://bit.ly/2neWfJ2 
const chainAsync = fns => {
  let curr = 0;
  const next = () => fns[curr++](next);
  next();
};
chainAsync([
  next => {
    console.log('0 seconds');
    setTimeout(next, 1000);
  },
  next => {
    console.log('1 second');
  }
]);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Chain asynchronous functions</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
347,JavaScript: Clone a?given regular expression,Write a JavaScript program to?clone a given regular expression.,"//#Source https://bit.ly/2neWfJ2 
const cloneRegExp = regExp => new RegExp(regExp.source, regExp.flags);
const regExp = /lorem ipsum/gi;
console.log(regExp);
const regExp2 = cloneRegExp(regExp);
console.log(regExp2);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Clone a?given regular expression</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
348,JavaScript: Get?the first non-null / undefined argument,Write a JavaScript program to get?the first non-null / undefined argument.,"//#Source https://bit.ly/2neWfJ2 
const coalesce = (...args) => args.find(_ => ![undefined, null].includes(_));
console.log(coalesce(null, undefined, '', NaN, 'abcd'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get?the first non-null / undefined argument</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
349,JavaScript: Add special characters to text to print in color in the console,Write a JavaScript program to add special characters to text to print in color in the console (combined with console.log()).,"//#Source https://bit.ly/2neWfJ2 
const colorize = (...args) => ({
  black: `\x1b[30m${args.join(' ')}`,
  red: `\x1b[31m${args.join(' ')}`,
  green: `\x1b[32m${args.join(' ')}`,
  yellow: `\x1b[33m${args.join(' ')}`,
  blue: `\x1b[34m${args.join(' ')}`,
  magenta: `\x1b[35m${args.join(' ')}`,
  cyan: `\x1b[36m${args.join(' ')}`,
  white: `\x1b[37m${args.join(' ')}`,
  bgBlack: `\x1b[40m${args.join(' ')}\x1b[0m`,
  bgRed: `\x1b[41m${args.join(' ')}\x1b[0m`,
  bgGreen: `\x1b[42m${args.join(' ')}\x1b[0m`,
  bgYellow: `\x1b[43m${args.join(' ')}\x1b[0m`,
  bgBlue: `\x1b[44m${args.join(' ')}\x1b[0m`,
  bgMagenta: `\x1b[45m${args.join(' ')}\x1b[0m`,
  bgCyan: `\x1b[46m${args.join(' ')}\x1b[0m`,
  bgWhite: `\x1b[47m${args.join(' ')}\x1b[0m`
});
console.log(colorize('foo').red); // 'foo' (red letters)
console.log(colorize('foo', 'bar').bgBlue); // 'foo bar' (blue background)
console.log(colorize(colorize('foo').yellow, colorize('foo').green).bgWhite); // 'foo bar' (first word in yellow letters, second word in green letters, white background for both)
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Add special characters to text to print in color in the console</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
350,JavaScript: Perform right-to-left function composition,Write a JavaScript program to perform right-to-left function composition.,"//#Source https://bit.ly/2neWfJ2 
const compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));
const add5 = x => x + 5;
const multiply = (x, y) => x * y;
const multiplyAndAdd5 = compose(
  add5,
  multiply
);
console.log(multiplyAndAdd5(5, 2)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform right-to-left function composition</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
351,JavaScript: Perform left-to-right function composition,Write a JavaScript program to perform left-to-right function composition.,"//#Source https://bit.ly/2neWfJ2 
const composeRight = (...fns) => fns.reduce((f, g) => (...args) => g(f(...args)));
const add = (x, y) => x + y;
const square = x => x * x;
const addAndSquare = composeRight(add, square);

console.log(addAndSquare(1, 2));
console.log(addAndSquare(3, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform left-to-right function composition</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
352,JavaScript: Accepts a converging function and a list of branching functions,Write a JavaScript program that accepts a converging function and a list of branching functions and returns a function that applies each branching function to the arguments and the results of the branching functions are passed as arguments to the converging function.,"//#Source https://bit.ly/2neWfJ2 
const converge = (converger, fns) => (...args) => converger(...fns.map(fn => fn.apply(null, args)));
const average = converge((a, b) => a / b, [
  arr => arr.reduce((a, v) => a + v, 0),
  arr => arr.length
]);
console.log(average([ 6, 7]));
console.log(average([1, 2, 3, 4, 5, 6, 7]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Accepts a converging function and a list of branching functions and returns a function that applies each branching function to the arguments and the results of the branching functions are passed as arguments to the converging function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
354,JavaScript: Count the occurrences of a value in an array,Write a JavaScript program to count the occurrences of a value in an array.,"//#Source https://bit.ly/2neWfJ2 
const countOccurrences = (arr, val) => arr.reduce((a, v) => (v === val ? a + 1 : a), 0);
console.log(countOccurrences([1, 1, 2, 1, 2, 3], 1));
console.log(countOccurrences([1, 1, 2, 1, 2, 3], 2));
console.log(countOccurrences([1, 1, 2, 1, 2, 3], 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Count the occurrences of a value in an array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
355,JavaScript: Create a deep clone of an object,Write a JavaScript program to create a deep clone of an object.,"//#Source https://bit.ly/2neWfJ2 
const deepClone = obj => {
  let clone = Object.assign({}, obj);
  Object.keys(clone).forEach(
    key => (clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key])
  );
  return Array.isArray(obj) ? (clone.length = obj.length) && Array.from(clone) : clone;
};
const a = { foo: 'bar', obj: { a: 1, b: 2 } };
const b = deepClone(a); // a !== b, a.obj !== b.obj
console.log(b)
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a deep clone of an object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
356,JavaScript: Detect whether the website is being opened in a mobile device or a desktop/laptop,Write a JavaScript program to? detect whether the website is being opened in a mobile device or a desktop/laptop.,"//#Source https://bit.ly/2neWfJ2 
const detectDeviceType = () =>
  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    ? 'Mobile'
    : 'Desktop';
console.log(detectDeviceType()); // ""Mobile"" or ""Desktop""
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Detect wether the website is being opened in a mobile device or a desktop/laptop</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
357,JavaScript: Return the difference between two arrays,"Write a JavaScript program to return the difference between two arrays, after applying the provided function to each array element of both.","//#Source https://bit.ly/2neWfJ2 
const differenceBy = (a, b, fn) => {
  const s = new Set(b.map(v => fn(v)));
  return a.filter(x => !s.has(fn(x)));
};
console.log(differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor));
console.log(differenceBy([{ x: 2 }, { x: 1 }], [{ x: 1 }], v => v.x));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return the difference between two arrays, after applying the provided function to each array element of both</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
358,JavaScript: Filter out all values from an array for which the comparator function does not return true,Write a JavaScript program to filter out all values from an array for which the comparator function does not return true.,"//#Source https://bit.ly/2neWfJ2 
const differenceWith = (arr, val, comp) => arr.filter(a => val.findIndex(b => comp(a, b)) === -1);
console.log(differenceWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0], (a, b) => Math.round(a) === Math.round(b)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter out all values from an array for which the comparator function does not return true</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
359,JavaScript: Compute the new ratings between two or more opponents using the Elo rating system,"Write a JavaScript program to compute the new ratings between two or more opponents using the Elo rating system. It takes an array of pre-ratings and returns an array containing post-ratings. The array should be ordered from best performer to worst performer (winner -> loser).Note: Use the exponent ** operator and math operators to compute the expected score (chance of winning). of each opponent and compute the new rating for each. Loop through the ratings, using each permutation to compute the post-Elo rating for each player in a pairwise fashion. Omit the second argument to use the default kFactor of 32.","//#Source https://bit.ly/2neWfJ2 
const elo = ([...ratings], kFactor = 32, selfRating) => {
  const [a, b] = ratings;
  const expectedScore = (self, opponent) => 1 / (1 + 10 ** ((opponent - self) / 400));
  const newRating = (rating, i) =>
    (selfRating || rating) + kFactor * (i - expectedScore(i ? a : b, i ? b : a));
  if (ratings.length === 2) {
    return [newRating(a, 1), newRating(b, 0)];
  }
  for (let i = 0, len = ratings.length; i < len; i++) {
    let j = i;
    while (j < len - 1) {
      j++;
      [ratings[i], ratings[j]] = elo([ratings[i], ratings[j]], kFactor);
    }
  }
  return ratings;
};

console.log(elo([1200, 1200])); // [1216, 1184]
console.log(elo([1200, 1200], 64)); // [1232, 1168]
// 4 player FFA, all same rank
console.log(elo([1200, 1200, 1200, 1200]).map(Math.round)); // [1246, 1215, 1185, 1154]
/*
For teams, each rating can adjusted based on own team's average rating vs.
average rating of opposing team, with the score being added to their
own individual rating by supplying it as the third argument.
*/
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Compute the new ratings between two or more opponents using the Elo rating system</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
360,"JavaScript: Execute a provided function once for each array element, starting from the array's last element","Write a JavaScript program to execute a provided function once for each array element, starting from the array's last element.","//#Source https://bit.ly/2neWfJ2 
const forEachRight = (arr, callback) =>
  arr
    .slice(0)
    .reverse()
    .forEach(callback);
forEachRight([1, 2, 3, 4], val => console.log(val));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Execute a provided function once for each array element, starting from the array's last element</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
361,"JavaScript: Iterate over all own properties of an object, running a callback for each one","Write a JavaScript program to iterate over all own properties of an object, running a callback for each one.","//#Source https://bit.ly/2neWfJ2 
const forOwn = (obj, fn) => Object.keys(obj).forEach(key => fn(obj[key], key, obj));
forOwn({ foo: 'bar', a: 1 }, v => console.log(v)); // 'bar', 1
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Iterate over all own properties of an object, running a callback for each one</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
362,"JavaScript: Invert the key-value pairs of an object, without mutating it","Write a JavaScript program to invert the key-value pairs of an object, without mutating it. The corresponding inverted value of each inverted key is an array of keys responsible for generating the inverted value. If a function is supplied, it is applied to each inverted key.","//#Source https://bit.ly/2neWfJ2 
const invertKeyValues = (obj, fn) =>
  Object.keys(obj).reduce((acc, key) => {
    const val = fn ? fn(obj[key]) : obj[key];
    acc[val] = acc[val] || [];
    acc[val].push(key);
    return acc;
  }, {});
console.log(invertKeyValues({ a: 1, b: 2, c: 1 }));
console.log(invertKeyValues({ a: 1, b: 2, c: 1 }, value => 'group' + value));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Invert the key-value pairs of an object, without mutating it</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
364,JavaScript: Implement the Luhn Algorithm used to validate a variety of identification numbers,"Write a JavaScript program to implement the Luhn Algorithm used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers, National Provider Identifier numbers etc.","//#Source https://bit.ly/2neWfJ2 
const luhnCheck = num => {
  let arr = (num + '')
    .split('')
    .reverse()
    .map(x => parseInt(x));
  let lastDigit = arr.splice(0, 1)[0];
  let sum = arr.reduce((acc, val, i) => (i % 2 !== 0 ? acc + val : acc + ((val * 2) % 9) || 9), 0);
  sum += lastDigit;
  return sum % 10 === 0;
};
console.log(luhnCheck('4485275742308327'));
console.log(luhnCheck(6011329933655299));
console.log(luhnCheck(123456789));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Implement the Luhn Algorithm used to validate a variety of identification numbers, such as credit card numbers, IMEI numbers, National Provider Identifier numbers etc</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
365,JavaScript: Create an object with keys generated by running the provided function for each key and the same values as the provided object,Write a JavaScript program to create an object with keys generated by running the provided function for each key and the same values as the provided object.,"//#Source https://bit.ly/2neWfJ2 
const mapKeys = (obj, fn) =>
  Object.keys(obj).reduce((acc, k) => {
    acc[fn(obj[k], k, obj)] = obj[k];
    return acc;
  }, {});
console.log(mapKeys({ a: 1, b: 2 }, (val, key) => key + val));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an object with keys generated by running the provided function for each key and the same values as the provided object</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
366,JavaScript: Map the values of an array to an object using a function,"Write a JavaScript program to map the values of an array to an object using a function, where the key-value pairs consist of the original value as the key and the mapped value.Note: Use an anonymous inner function scope to declare an undefined memory space, using closures to store a return value. Use a new Array to store the array with a map of the function over its data set and a comma operator to return a second step, without needing to move from one context to another (due to closures and order of operations).","//#Source https://bit.ly/2neWfJ2 
const mapObject = (arr, fn) =>
  (a => (
    (a = [arr, arr.map(fn)]), a[0].reduce((acc, val, ind) => ((acc[val] = a[1][ind]), acc), {})
  ))();
const squareIt = arr => mapObject(arr, a => a * a);
console.log(squareIt([1, 2, 3])); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Map the values of an array to an object using a function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
367,JavaScript: Create a new string with the results of calling a provided function on every character in the calling string,Write a JavaScript program to create a new string with the results of calling a provided function on every character in the calling string.,"//#Source https://bit.ly/2neWfJ2 
const mapString = (str, fn) =>
  str
    .split('')
    .map((c, i) => fn(c, i, str))
    .join('');

console.log(mapString('Javascript exercises', c => c.toUpperCase()));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a new string with the results of calling a provided function on every character in the calling string</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
369,JavaScript: Replace all but the last number of characters with the specified mask character,Write a JavaScript program to replace all but the last number of characters with the specified mask character.,"//#Source https://bit.ly/2neWfJ2 
const mask = (cc, num = 4, mask = '*') =>
  ('' + cc).slice(0, -num).replace(/./g, mask) + ('' + cc).slice(-num);

console.log(mask(1234567890)); 
console.log(mask(1234567890, 3));
console.log(mask(1234567890, -4, '$'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Replace all but the last number of characters with the specified mask character</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
370,"JavaScript: Get the maximum value of an array, after mapping each element to a value using the provided function","Write a JavaScript program to get the maximum value of an array, after mapping each element to a value using the provided function.","//#Source https://bit.ly/2neWfJ2 
const maxBy = (arr, fn) => Math.max(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));
console.log(maxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n));
console.log(maxBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the maximum value of an array, after mapping each element to a value using the provided function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
371,JavaScript: Get the n maximum elements from the provided array,"Write a JavaScript program to get the n maximum elements from the provided array. If n is greater than or equal to the provided array's length, then return the original array(sorted in descending order).","//#Source https://bit.ly/2neWfJ2 
const maxN = (arr, n = 1) => [...arr].sort((a, b) => b - a).slice(0, n);
console.log(maxN([1, 2, 3]));
console.log(maxN([1, 2, 3], 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the n maximum elements from the provided array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
372,JavaScript: Get the median of an array of numbers,"Write a JavaScript program to get the median of an array of numbers.Note: Find the middle of the array, use Array.sort() to sort the values. Return the number at the midpoint if length is odd, otherwise the average of the two middle numbers.","//#Source https://bit.ly/2neWfJ2 
const median = arr => {
  const mid = Math.floor(arr.length / 2),
    nums = [...arr].sort((a, b) => a - b);
  return arr.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;
};
console.log(median([5, 6, 50, 1, -5]));
console.log(median([1, 2, 3, 4, 5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the median of an array of numbers</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
373,JavaScript: Negates a predicate function,Write a JavaScript program to negates a predicate function.Note: Take a predicate function and apply the not operator (!) to it with its arguments.,"//#Source https://bit.ly/2neWfJ2 
const negate = func => (...args) => !func(...args);
console.log([1, 2, 3, 4, 5, 6].filter(negate(n => n % 2 === 0)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Negates a predicate function</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
374,JavaScript: Nest a given flat array of objects linked to one another recursively,"Write a JavaScript program to nest a given flat array of objects linked to one another recursively.Note: Useful for nesting comments, such as the ones on reddit.com.","//#Source https://bit.ly/2neWfJ2 
const nest = (items, id = null, link = 'parent_id') =>
  items
    .filter(item => item[link] === id)
    .map(item => ({ ...item, children: nest(items, item.id) }));
// One top level comment
const comments = [
  { id: 1, parent_id: null },
  { id: 2, parent_id: 1 },
  { id: 3, parent_id: 1 },
  { id: 4, parent_id: 2 },
  { id: 5, parent_id: 4 }
];
const nestedComments = nest(comments); 
console.log(nestedComments);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Nest a given flat array of objects linked to one another recursively</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
375,"JavaScript: Return?true if the provided predicate function returns false for all elements in a collection, false otherwise","Write a JavaScript program that will return? true if the provided predicate function returns false for all elements in a collection, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const none = (arr, fn = Boolean) => !arr.some(fn);
console.log(none([0, 1, 3, 0], x => x == 2));
console.log(none([0, 0, 0]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return?true if the provided predicate function returns false for all elements in a collection, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
376,"JavaScript: Create a function that gets the argument at index n. If n is negative, the nth argument from the end is returned","Write a JavaScript program to create a function that gets the argument at index n. If n is negative, the nth argument from the end is returned.","//#Source https://bit.ly/2neWfJ2 
const nthArg = n => (...args) => args.slice(n)[0];
const third = nthArg(2);
third(1, 2, 3); // 3
third(1, 2); // undefined
const last = nthArg(-1);
console.log(last(1, 2, 3, 4, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that gets the argument at index n</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
377,JavaScript: Remove an event listener from an element,Write a JavaScript program to remove an event listener from an element.,"//#Source https://bit.ly/2neWfJ2 
const off = (el, evt, fn, opts = false) => el.removeEventListener(evt, fn, opts);
const fn = () => console.log('!');
document.body.addEventListener('click', fn);
console.log(off(document.body, 'click', fn)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove an event listener from an element</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
378,JavaScript: Move the specified amount of elements to the end of the array,Write a JavaScript program to move the specified amount of elements to the end of the array.,"//#Source https://bit.ly/2neWfJ2 
const offset = (arr, offset) => [...arr.slice(offset), ...arr.slice(0, offset)];
console.log(offset([1, 2, 3, 4, 5], 2));
console.log(offset([1, 2, 3, 4, 5], -2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Move the specified amount of elements to the end of the array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
379,JavaScript: Add an event listener to an element with the ability to use event delegation,Write a JavaScript program to add an event listener to an element with the ability to use event delegation.,"//#Source https://bit.ly/2neWfJ2 
const on = (el, evt, fn, opts = {}) => {
  const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);
  el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);
  if (opts.target) return delegatorFn;
};

const fn = () => console.log('!');
console.log(on(document.body, 'click', fn));  
console.log(on(document.body, 'click', fn, { target: 'p' }));  
console.log(on(document.body, 'click', fn, { options: true }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Add an event listener to an element with the ability to use event delegation</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
380,JavaScript: Pick?the key-value pairs corresponding to the given keys from an object,Write a JavaScript program to pick? the key-value pairs corresponding to the given keys from an object.,"//#Source https://bit.ly/2neWfJ2 
const pick = (obj, arr) =>
  arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});
console.log(pick({ a: 1, b: '2', c: 3 }, ['a', 'c']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Pick?the key-value pairs corresponding to the given keys from an object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
381,JavaScript : Create an object composed of the properties the given function returns truthy for,"Write a JavaScript program to create an object composed of the properties the given function returns truthy for. The function is invoked with two arguments: (value, key).","//#Source https://bit.ly/2neWfJ2 
const pickBy = (obj, fn) =>
  Object.keys(obj)
    .filter(k => fn(obj[k], k))
    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});
console.log(pickBy({ a: 1, b: '2', c: 3 }, x => typeof x === 'number'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an object composed of the properties the given function returns truthy for</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
383,JavaScript : Hash an given?input string into a whole number,Write a JavaScript program to hash an given? input string into a whole number.,"//#Source https://bit.ly/2neWfJ2 
const sdbm = str => {
  let arr = str.split('');
  return arr.reduce(
    (hashCode, currentVal) =>
      (hashCode = currentVal.charCodeAt(0) + (hashCode << 6) + (hashCode << 16) - hashCode),
    0
  );
};
console.log(sdbm('w3r'));
console.log(sdbm('name'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Hash an given?input string into a whole number</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
384,"JavaScript : Create an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined","Write a JavaScript program to create an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined.Note: Check if the last argument provided is a function.","//#Source https://bit.ly/2neWfJ2 
const zipWith = (...array) => {
  const fn = typeof array[array.length - 1] === 'function' ? array.pop() : undefined;
  return Array.from(
    { length: Math.max(...array.map(a => a.length)) },
    (_, i) => (fn ? fn(...array.map(a => a[i])) : array.map(a => a[i]))
  );
};

zipWith([1, 2], [10, 20], [100, 200], (a, b, c) => a + b + c); // [111,222]

console.log(zipWith(
  [1, 2, 3],
  [10, 20],
  [100, 200],
  (a, b, c) => (a != null ? a : 'a') + (b != null ? b : 'b') + (c != null ? c : 'c')
)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an array of elements, grouped based on the position in the original arrays and using function as the last value to specify how grouped values should be combined</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
385,JavaScript: Return the object associating the properties to the values of a given?array of valid property identifiers and an array of values,"Write a JavaScript program to return the object associating the properties to the values of a given?array of valid property identifiers and an array of values.Note: Since an object can have undefined values but not undefined property pointers, the array of properties is used to decide the structure of the resulting object using Array.reduce().","//#Source https://bit.ly/2neWfJ2 
const zipObject = (props, values) =>
  props.reduce((obj, prop, index) => ((obj[prop] = values[index]), obj), {});
console.log(zipObject(['a', 'b', 'c'], [1, 2])); 
console.log(zipObject(['a', 'b'], [1, 2, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return the object associating the properties to the values of a given?array of valid property identifiers and an array of values.</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
386,"JavaScript: Create an array of elements, grouped based on the position in the original arrays","Write a JavaScript program to create an array of elements, grouped based on the position in the original arrays.","//#Source https://bit.ly/2neWfJ2 
const zip = (...arrays) => {
  const maxLength = Math.max(...arrays.map(x => x.length));
  return Array.from({ length: maxLength }).map((_, i) => {
    return Array.from({ length: arrays.length }, (_, k) => arrays[k][i]);
  });
};

console.log(zip(['a', 'b'], [1, 2], [true, false]));
console.log(zip(['a'], [1, 2], [true, false]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an array of elements, grouped based on the position in the original arrays</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
387,JavaScript: Convert a given string into an array of words,Write a JavaScript  program to convert a given string into an array of words.,"//#Source https://bit.ly/2neWfJ2 
const words = (str, pattern = /[^a-zA-Z-]+/) => str.split(pattern).filter(Boolean);
console.log(words('I love javaScript!!')); 
console.log(words('python, java, php'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a given string into an array of words</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
388,"JavaScript: Test a value, x, against a predicate function","Write a JavaScript program to test a value, x, against a predicate function. If true, return fn(x). Else, return x.Return a function expecting a single value, x, that returns the appropriate value based on pred.","//#Source https://bit.ly/2neWfJ2 
const when = (pred, whenTrue) => x => (pred(x) ? whenTrue(x) : x);
const doubleEvenNumbers = when(x => x % 2 === 0, x => x * 2);
console.log(doubleEvenNumbers(2));
console.log(doubleEvenNumbers(1));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Test a value, x, against a predicate function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
389,"JavaScript: Return true if the given value is a number, false otherwise","Write a JavaScript program that return true if the given value is a number, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const validateNumber = n => !isNaN(parseFloat(n)) && isFinite(n) && Number(n) == n;
console.log(validateNumber('200'));
console.log(validateNumber('10'));
console.log(validateNumber('abc'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the given value is a number, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
390,"JavaScript: Create an array of elements, ungrouping the elements in an array produced by zip and applying the provided function","Write a JavaScript program to create an array of elements, ungrouping the elements in an array produced by zip and applying the provided function.","//#Source https://bit.ly/2neWfJ2 
const unzipWith = (arr, fn) =>
  arr
    .reduce(
      (acc, val) => (val.forEach((v, i) => acc[i].push(v)), acc),
      Array.from({
        length: Math.max(...arr.map(x => x.length))
      }).map(x => [])
    )
    .map(val => fn(...val));

console.log(unzipWith([[1, 10, 100], [2, 20, 200]], (...args) => args.reduce((acc, v) => acc + v, 0)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an array of elements, ungrouping the elements in an array produced by zip and applying the provided function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
391,"JavaScript: Get all unique values (form the right side of the array) of an array, based on a provided comparator function","Write a JavaScript program to get all unique values (form the right side of the array) of an array, based on a provided comparator function.","//#Source https://bit.ly/2neWfJ2 
const uniqueElementsByRight = (arr, fn) =>
  arr.reduceRight((acc, v) => {
    if (!acc.some(x => fn(v, x))) acc.push(v);
    return acc;
  }, []);

console.log(uniqueElementsByRight(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) => a.id == b.id
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get all unique values (form the right side of the array) of an array, based on a provided comparator function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
392,"JavaScript: Get?all unique values of an array, based on a provided comparator function","Write a JavaScript program to get?all unique values of an array, based on a provided comparator function.","//#Source https://bit.ly/2neWfJ2 
const uniqueElementsBy = (arr, fn) =>
  arr.reduce((acc, v) => {
    if (!acc.some(x => fn(v, x))) acc.push(v);
    return acc;
  }, []);

console.log(uniqueElementsBy(
  [
    { id: 0, value: 'a' },
    { id: 1, value: 'b' },
    { id: 2, value: 'c' },
    { id: 1, value: 'd' },
    { id: 0, value: 'e' }
  ],
  (a, b) => a.id == b.id
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get?all unique values of an array, based on a provided comparator function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
393,JavaScript : Get the nth element of a given array,Write a JavaScript program to get the nth element of a given array. ,"//#Source https://bit.ly/2neWfJ2 
const nthElement = (arr, n = 0) => (n > 0 ? arr.slice(n, n + 1) : arr.slice(n))[0];
console.log(nthElement(['a', 'b', 'c'], 1));
console.log(nthElement(['a', 'b', 'b'], -3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the nth element of a given array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
394,JavaScript: Get every element that exists in any of the two arrays once,Write a JavaScript program to get every element that exists in any of the two arrays once.Note: Create a Set with all values of a and b and convert to an array.,"//#Source https://bit.ly/2neWfJ2 
const union = (a, b) => Array.from(new Set([...a, ...b]));
console.log(union([1, 2, 3], [4, 3, 2]));
console.log(union([1, 2, 3], [1, 2, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get every element that exists in any of the two arrays once</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
395,"JavaScript: Build?an array, using an iterator function and an initial seed value","Write a JavaScript program to build? an array, using an iterator function and an initial seed value.","//#Source https://bit.ly/2neWfJ2 
const unfold = (fn, seed) => {
  let result = [],
    val = [null, seed];
  while ((val = fn(val[1]))) result.push(val[0]);
  return result;
};
var f = n => (n > 50 ? false : [-n, n + 10]);
console.log(unfold(f, 10));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Build?an array, using an iterator function and an initial seed value</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
396,JavaScript: Unflatten an object with the paths for keys,Write a JavaScript program to unflatten an object with the paths for keys.,"//#Source https://bit.ly/2neWfJ2 
const unflattenObject = obj =>
  Object.keys(obj).reduce((acc, k) => {
    if (k.indexOf('.') !== -1) {
      const keys = k.split('.');
      Object.assign(
        acc,
        JSON.parse(
          '{' +
            keys.map((v, i) => (i !== keys.length - 1 ? `""${v}"":{` : `""${v}"":`)).join('') +
            obj[k] +
            '}'.repeat(keys.length)
        )
      );
    } else acc[k] = obj[k];
    return acc;
  }, {});
console.log(unflattenObject({ 'a.b.c': 1, d: 1 }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Unflatten an object with the paths for keys</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
397,JavaScript: Unescape escaped HTML characters,Write a JavaScript program to unescape escaped HTML characters.,"//#Source https://bit.ly/2neWfJ2 
const unescapeHTML = str =>
  str.replace(
    /&|<|>|'|""/g,
    tag =>
      ({
        '&': '&',
        '<': '<',
        '>': '>',
        ''': ""'"",
        '""': '""'
      }[tag] || tag)
  );
console.log(unescapeHTML('<a href=""#"">Me & you</a>'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Unescape escaped HTML characters</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
398,JavaScript: Uncurry a function up to depth n,Write a JavaScript program to uncurry a function up to depth n.,"//#Source https://bit.ly/2neWfJ2 
const uncurry = (fn, n = 1) => (...args) => {
  const next = acc => args => args.reduce((x, y) => x(y), acc);
  if (n > args.length) throw new RangeError('Arguments too few!');
  return next(fn)(args.slice(0, n));
};
const add = x => y => z => x + y + z;
const uncurriedAdd = uncurry(add, 3);
console.log(uncurriedAdd(1, 2, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>uncurry a function up to depth n</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
399,"JavaScript: Create a function that accepts up to one argument, ignoring any additional arguments","Write a JavaScript program to create a function that accepts up to one argument, ignoring any additional arguments.Note: Call the provided function, fn, with just the first argument given.","//#Source https://bit.ly/2neWfJ2 
const unary = fn => val => fn(val);
console.log(['6', '8', '10'].map(unary(parseInt)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that accepts up to one argument, ignoring any additional arguments</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
400,JavaScript: Check if the predicate is truthy on all elements of a collection,Write a JavaScript program to check if the predicate (second argument) is truthy on all elements of a collection (first argument).,"//#Source https://bit.ly/2neWfJ2 
const truthCheckCollection = (collection, pre) => collection.every(obj => obj[pre]);
console.log(truthCheckCollection([{ user: 'Tinky-Winky', sex: 'male' }, { user: 'Dipsy', sex: 'male' }], 'sex'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if the predicate is truthy on all elements of a collection</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
401,JavaScript: Truncate a string up to a specified length,"Write a JavaScript program to truncate a string up to a specified length.Note: Determine if the string's length is greater than num. Return the string truncated to the desired length, with '...' appended to the end or the original string.","//#Source https://bit.ly/2neWfJ2 
const truncateString = (str, num) =>
  str.length > num ? str.slice(0, num > 3 ? num - 3 : num) + '...' : str;

console.log(truncateString('boomerang', 7));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Truncate a string up to a specified length</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
402,JavaScript: Apply a function against an accumulator and each key in the object,Write a JavaScript program to apply a function against an accumulator and each key in the object (from left to right).,"//#Source https://bit.ly/2neWfJ2 
const transform = (obj, fn, acc) => Object.keys(obj).reduce((a, k) => fn(a, obj[k], k, obj), acc);
console.log(transform(
  { a: 1, b: 2, c: 1 },
  (r, v, k) => {
    (r[v] || (r[v] = [])).push(k);
    return r;
  },
  {}
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Apply a function against an accumulator and each key in the object </title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
403,JavaScript: Create tomorrow's date?in a string representation,Write a JavaScript program to create tomorrow's date?in a string representation.,"//#Source https://bit.ly/2neWfJ2 
const tomorrow = (long = false) => {
  let t = new Date();
  t.setDate(t.getDate() + 1);
  const ret = `${t.getFullYear()}-${String(t.getMonth() + 1).padStart(2, '0')}-${String(
    t.getDate()
  ).padStart(2, '0')}`;
  return !long ? ret : `${ret}T00:00:00`;
};

console.log(tomorrow());
console.log(tomorrow(true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create tomorrow's date?in a string representation</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
405,JavaScript: Convert a value to a safe integer,Write a JavaScript program to convert a value to a safe integer.,"//#Source https://bit.ly/2neWfJ2 
const toSafeInteger = num =>
  Math.round(Math.max(Math.min(num, Number.MAX_SAFE_INTEGER), Number.MIN_SAFE_INTEGER));

console.log(toSafeInteger('3.2'));
console.log(toSafeInteger(Infinity));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a value to a safe integer</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
406,JavaScript: Add?an ordinal suffix to a number,Write a JavaScript program to add?an ordinal suffix to a number.,"//#Source https://bit.ly/2neWfJ2 
const toOrdinalSuffix = num => {
  const int = parseInt(num),
    digits = [int % 10, int % 100],
    ordinals = ['st', 'nd', 'rd', 'th'],
    oPattern = [1, 2, 3, 4],
    tPattern = [11, 12, 13, 14, 15, 16, 17, 18, 19];
  return oPattern.includes(digits[0]) && !tPattern.includes(digits[1])
    ? int + ordinals[digits[0] - 1]
    : int + ordinals[3];
};

console.log(toOrdinalSuffix('1')); 
console.log(toOrdinalSuffix('4')); 
console.log(toOrdinalSuffix('50')); 
console.log(toOrdinalSuffix('123'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Add?an ordinal suffix to a number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
408,JavaScript: Reduce a given Array-like into a value hash ,"Write a JavaScript program to reduce a given Array-like into a value hash (keyed data store).Note: Given an Iterable or Array-like structure, call Array.prototype.reduce.call() on the provided object to step over it and return an Object, keyed by the reference value.","//#Source https://bit.ly/2neWfJ2 
const toHash = (object, key) =>
  Array.prototype.reduce.call(
    object,
    (acc, data, index) => ((acc[!key ? index : data[key]] = data), acc),
    {}
  );
toHash([4, 3, 2, 1]); // { 0: 4, 1: 3, 2: 2, 1: 1 }
toHash([{ a: 'label' }], 'a'); // { label: { a: 'label' } }
// A more in depth example:
let users = [{ id: 1, first: 'Jon' }, { id: 2, first: 'Joe' }, { id: 3, first: 'Moe' }];
let managers = [{ manager: 1, employees: [2, 3] }];
// We use function here because we want a bindable reference, but a closure referencing the hash would work, too.
managers.forEach(
  manager =>
    (manager.employees = manager.employees.map(function(id) {
      return this[id];
    }, toHash(users, 'id')))
);
managers; // [ { manager:1, employees: [ { id: 2, first: ""Joe"" }, { id: 3, first: ""Moe"" } ] } ]
console.log(managers);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Reduce a given Array-like into a value hash</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
409,JavaScript: Convert a float-point arithmetic to the Decimal mark form and?It will make a comma separated string from a number,Write a JavaScript program to?convert a float-point arithmetic to the Decimal mark form and?It will make a comma separated string from a number.,"//#Source https://bit.ly/2neWfJ2 
const toDecimalMark = num => num.toLocaleString('en-US');
console.log(toDecimalMark(12305030388.9087));
console.log(toDecimalMark(123.2264))
console.log(toDecimalMark(-100.10))
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a float-point arithmetic to the Decimal mark form and?It will make a comma separated string from a number</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
410,JavaScript: Create a specified currency formatting from a given number,Write a JavaScript program to create a specified currency formatting from a given number.,"//#Source https://bit.ly/2neWfJ2 
const toCurrency = (n, curr, LanguageFormat = undefined) =>
  Intl.NumberFormat(LanguageFormat, { style: 'currency', currency: curr }).format(n);

console.log(toCurrency(123456.789, 'EUR')); // currency: Euro | currencyLangFormat: Local
console.log(toCurrency(123456.789, 'USD', 'en-us')); // currency: US Dollar | currencyLangFormat: English (United States)
console.log(toCurrency(123456.789, 'USD', 'fa')); //currency: US Dollar | currencyLangFormat: Farsi
console.log(toCurrency(322342436423.2435, 'JPY')); //currency: Japanese Yen | currencyLangFormat: Local
console.log(toCurrency(322342436423.2435, 'JPY', 'fi')); //currency: Japanese Yen | currencyLangFormat: Finnish
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a specified currency formatting from a given number</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
411,JavaScript: Iterate over a callback n times,Write a JavaScript program to Iterate over a callback n times.,"//#Source https://bit.ly/2neWfJ2 
const times = (n, fn, context = undefined) => {
  let i = 0;
  while (fn.call(context, i) !== false && ++i < n) {}
};
var output = '';
times(5, i => (output += i));
console.log(output); // 01234
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Iterate over a callback n times</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
412,JavaScript: Get removed elements of?an given array until the passed function returns true,Write a JavaScript program to get removed elements of?an given array until the passed function returns true.,"//#Source https://bit.ly/2neWfJ2 
const takeWhile = (arr, func) => {
  for (const [i, val] of arr.entries()) if (func(val)) return arr.slice(0, i);
  return arr;
};

console.log(takeWhile([1, 2, 3, 4], n => n >= 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get removed elements of?an given array until the passed function returns true</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
413,JavaScript: Get removed elements from the end of a given array until the passed function returns true,Write a JavaScript program to get removed elements from the end of a given array until the passed function returns true. ,"//#Source https://bit.ly/2neWfJ2 
const takeRightWhile = (arr, func) => {
  for (let i of arr.reverse().keys())
    if (func(arr[i])) return arr.reverse().slice(arr.length - i, arr.length);
  return arr;
};

console.log(takeRightWhile([1, 2, 3, 4], n => n < 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get removed elements from the end of a given array until the passed function returns true</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
414,JavaScript: Remove n elements from the end of a given array,Write a JavaScript program to remove n elements from the end of a given array.,"//#Source https://bit.ly/2neWfJ2 
const takeRight = (arr, n = 1) => arr.slice(arr.length - n, arr.length);

console.log(takeRight([1, 2, 3], 2));
console.log(takeRight([1, 2, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove n elements from the end of a given array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
415,JavaScript: Get an array with n elements removed from the beginning from a given array,Write a JavaScript program to get an array with n elements removed from the beginning from a given array.,"//#Source https://bit.ly/2neWfJ2 
const take = (arr, n = 1) => arr.slice(0, n);
console.log(take([1, 2, 3], 5));
console.log(take([1, 2, 3], 0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get an array with n elements removed from the beginning from a given array</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
416,"JavaScript: Get the symmetric difference between two given arrays, using a provided function as a comparator","Write a JavaScript program to get the symmetric difference between two given arrays, using a provided function as a comparator.","//#Source https://bit.ly/2neWfJ2 
const symmetricDifferenceWith = (arr, val, comp) => [
  ...arr.filter(a => val.findIndex(b => comp(a, b)) === -1),
  ...val.filter(a => arr.findIndex(b => comp(a, b)) === -1)
];

console.log(symmetricDifferenceWith(
  [1, 1.2, 1.5, 3, 0],
  [1.9, 3, 0, 3.9],
  (a, b) => Math.round(a) === Math.round(b)
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the symmetric difference between two given arrays, using a provided function as a comparator</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
418,JavaScript: Get the symmetric difference between two given arrays,Write a JavaScript program to get the symmetric difference between two given arrays.,"//#Source https://bit.ly/2neWfJ2 
const symmetricDifference = (a, b) => {
  const sA = new Set(a),
    sB = new Set(b);
  return [...a.filter(x => !sB.has(x)), ...b.filter(x => !sA.has(x))];
};

console.log(symmetricDifference([1, 2, 3], [1, 2, 4]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the symmetric difference between two given arrays</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
419,JavaScript: Get the sum of the powers of all the numbers from start to end,Write a JavaScript program to get the sum of the powers of all the numbers from start to end (both inclusive).,"//#Source https://bit.ly/2neWfJ2 
const sumPower = (end, power = 2, start = 1) =>
  Array(end + 1 - start)
    .fill(0)
    .map((x, i) => (i + start) ** power)
    .reduce((a, b) => a + b, 0);

console.log(sumPower(10));
console.log(sumPower(10, 3));
console.log(sumPower(10, 3, 5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the sum of the powers of all the numbers from start to end</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
420,JavaScript: Generate all permutations of a string,Write a JavaScript program to generate all permutations of a string (contains duplicates).,"//#Source https://bit.ly/2neWfJ2 
const stringPermutations = str => {
  if (str.length <= 2) return str.length === 2 ? [str, str[1] + str[0]] : [str];
  return str
    .split('')
    .reduce(
      (acc, letter, i) =>
        acc.concat(stringPermutations(str.slice(0, i) + str.slice(i + 1)).map(val => letter + val)),
      []
    );
};

console.log(stringPermutations('abc'));
console.log(stringPermutations('*$*'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Generate all permutations of a string </title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
422,JavaScript: Takes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function,Write a JavaScript program that takes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function.Note: Use closures and the spread operator (...) to map the array of arguments to the inputs of the function.,"//#Source https://bit.ly/2neWfJ2 
const spreadOver = fn => argsArr => fn(...argsArr);
const arrayMax = spreadOver(Math.max);

console.log(arrayMax([1, 2, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Takes a variadic function and returns a closure that accepts an array of arguments to map to the inputs of the function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
423,JavaScript: Split a multiline string into an array of lines,Write a JavaScript program to split a multiline string into an array of lines.,"//#Source https://bit.ly/2neWfJ2 
const splitLines = str => str.split(/\r?\n/);
console.log('Original string:');
console.log('This\nis a\nmultiline\nstring.\n');
console.log(splitLines('This\nis a\nmultiline\nstring.\n'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Split a multiline string into an array of lines</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
468,JavaScript: Check if a given string is upper case or not,Write a JavaScript program to check if a given string is upper case or not.,,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if a given string is upper case or not</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
424,"JavaScript : Get the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function","Write a JavaScript program to get the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function.","//#Source https://bit.ly/2neWfJ2 
const sortedLastIndexBy = (arr, n, fn) => {
  const isDescending = fn(arr[0]) > fn(arr[arr.length - 1]);
  const val = fn(n);
  const index = arr
    .map(fn)
    .reverse()
    .findIndex(el => (isDescending ? val <= el : val >= el));
  return index === -1 ? 0 : arr.length - index;
};
console.log(sortedLastIndexBy([{ x: 4 }, { x: 5 }], { x: 4 }, o => o.x));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the highest index at which value should be inserted into array in order to maintain its sort order, based on a provided iterator function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
425,JavaScript: Get the highest index at which value should be inserted into array in order to maintain its sort order,Write a JavaScript program to get the highest index at which value should be inserted into array in order to maintain its sort order.,"//#Source https://bit.ly/2neWfJ2 
const sortedLastIndex = (arr, n) => {
  const isDescending = arr[0] > arr[arr.length - 1];
  const index = arr.reverse().findIndex(el => (isDescending ? n <= el : n >= el));
  return index === -1 ? 0 : arr.length - index;
};

console.log(sortedLastIndex([10, 20, 30, 30, 40], 30));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the highest index at which value should be inserted into array in order to maintain its sort order</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
427,JavaScript: Sort the characters of a string Alphabetically,Write a JavaScript program to sort the characters of a string Alphabetically.,"//#Source https://bit.ly/2neWfJ2 
const sortCharactersInString = str => [...str].sort((a, b) => a.localeCompare(b)).join('');

console.log(sortCharactersInString('cabbage'));

console.log(sortCharactersInString('a7fs23l1n4o6x'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Sort the characters of a string Alphabetically</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
428,JavaScript: Get an array of elements that appear in both arrays,Write a JavaScript program to get an array of elements that appear in both arrays.,"//#Source https://bit.ly/2neWfJ2 
const similarity = (arr, values) => arr.filter(v => values.includes(v));

console.log(similarity([1, 2, 3], [1, 2, 4]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get an array of elements that appear in both arrays</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
429,"JavaScript: Randomize the order of the values of an array, returning a new array","Write a JavaScript program to randomize the order of the values of an array, returning a new array.","//#Source https://bit.ly/2neWfJ2 
const shuffle = ([...arr]) => {
  let m = arr.length;
  while (m) {
    const i = Math.floor(Math.random() * m--);
    [arr[m], arr[i]] = [arr[i], arr[m]];
  }
  return arr;
};
const foo = [1, 2, 3];

console.log(shuffle(foo));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Randomize the order of the values of an array, returning a new array</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
430,JavaScript: Create a shallow clone of an object,Write a JavaScript program to create a shallow clone of an object.,"//#Source https://bit.ly/2neWfJ2 
const shallowClone = obj => Object.assign({}, obj);
const a = { x: true, y: 1 };
const b = shallowClone(a);  

console.log(b);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a shallow clone of an object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
431,JavaScript: Serialize a cookie name-value pair into a Set-Cookie header string,Write a JavaScript program to serialize a cookie name-value pair into a Set-Cookie header string.,"//#Source https://bit.ly/2neWfJ2 
const serializeCookie = (name, val) => `${encodeURIComponent(name)}=${encodeURIComponent(val)}`;
console.log(serializeCookie('foo', 'bar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Serialize a cookie name-value pair into a Set-Cookie header string</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
432,JavaScript: Hash the input string into a whole number,Write a JavaScript program to hash the input string into a whole number.,"//#Source https://bit.ly/2neWfJ2 
const sdbm = str => {
  let arr = str.split('');
  return arr.reduce(
    (hashCode, currentVal) =>
      (hashCode = currentVal.charCodeAt(0) + (hashCode << 6) + (hashCode << 16) - hashCode),
    0
  );
};

console.log(sdbm('name'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Hash the input string into a whole number</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
433,JavaScript: Get a random element from an array,Write a JavaScript program to get a random element from an array.,"//#Source https://bit.ly/2neWfJ2 
const sample = arr => arr[Math.floor(Math.random() * arr.length)];
console.log(sample([3, 7, 9, 11]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a random element from an array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
434,JavaScript: Run a given array of promises in series,Write a JavaScript program to run a given array of promises in series.,"//#Source https://bit.ly/2neWfJ2 
const runPromisesInSeries = ps => ps.reduce((p, next) => p.then(next), Promise.resolve());
const delay = d => new Promise(r => setTimeout(r, d));

// Executes each promise sequentially, taking a total of 3 seconds to complete

runPromisesInSeries([() => delay(1000), () => delay(2000)]);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Run a given array of promises in series</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
435,"JavaScript: Run a function in a separate thread by using a Web Worker, allowing long running functions to not block the UI","Write a JavaScript program to run a function in a separate thread by using a Web Worker, allowing long running functions to not block the UI.Note: Create a new Worker using a Blob object URL, the contents of which should be the stringified version of the supplied function. Immediately post the return value of calling the function back. Return a promise, listening for onmessage and onerror events and resolving the data posted back from the worker, or throwing an error.NOTE: Since the function is running in a different context, closures are not supported.
The function supplied to `runAsync` gets stringified, so everything becomes literal.
All variables and functions must be defined inside.","//#Source https://bit.ly/2neWfJ2 
const runAsync = fn => {
  const worker = new Worker(
    URL.createObjectURL(new Blob([`postMessage((${fn})());`]), {
      type: 'application/javascript; charset=utf-8'
    })
  );
  return new Promise((res, rej) => {
    worker.onmessage = ({ data }) => {
      res(data), worker.terminate();
    };
    worker.onerror = err => {
      rej(err), worker.terminate();
    };
  });
};
const longRunningFunction = () => {
  let result = 0;
  for (let i = 0; i < 1000; i++) {
    for (let j = 0; j < 700; j++) {
      for (let k = 0; k < 300; k++) {
        result = result + i + j + k;
      }
    }
  }
  return result;
};
/*
*/
runAsync(longRunningFunction).then(console.log); // 209685000000
runAsync(() => 10 ** 3).then(console.log); // 1000
let outsideVariable = 50;
runAsync(() => typeof outsideVariable).then(console.log); // 'undefined'
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Run a function in a separate thread by using a Web Worker, allowing long running functions to not block the UI</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
436,JavaScript: Round a number to a specified amount of digits,Write a JavaScript program to round a number to a specified amount of digits.,"//#Source https://bit.ly/2neWfJ2 
const round = (n, decimals = 0) => Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`);

console.log(round(1.005, 2));
console.log(round(1.05, 2));
console.log(round(1.0005, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Round a number to a specified amount of digits</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
437,JavaScript: Reverse the order of the characters in the string,Write a JavaScript program to reverse the order of the characters in the string.,"//#Source https://bit.ly/2neWfJ2 
const reverseString = str => [...str].reverse().join('');

console.log(reverseString('php')); 
console.log(reverseString('foobar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Reverse the order of the characters in the string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
438,JavaScript: Create an object composed of the properties the given function returns falsey for,"Write a JavaScript program to create an object composed of the properties the given function returns falsey for. The function is invoked with two arguments: (value, key).","//#Source https://bit.ly/2neWfJ2 
const omitBy = (obj, fn) =>
  Object.keys(obj)
    .filter(k => !fn(obj[k], k))
    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});

console.log(omitBy({ a: 1, b: '2', c: 3 }, x => typeof x === 'number'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an object composed of the properties the given function returns falsey for</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
439,"JavaScript: Takes a predicate and array, like Array.filter(), but only keeps x if pred(x) === false","Write a JavaScript program that takes a predicate and array, like Array.filter(), but only keeps x if pred(x) === false.","//#Source https://bit.ly/2neWfJ2 
const reject = (pred, array) => array.filter((...args) => !pred(...args));

console.log(reject(x => x % 2 === 0, [1, 2, 3, 4, 5]));

console.log(reject(word => word.length > 4, ['Apple', 'Pear', 'Kiwi', 'Banana']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Takes a predicate and array, like Array.filter(), but only keeps x if pred(x) === false</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
441,JavaScript: Redirect to a specified URL,Write a JavaScript program to redirect to a specified URL.,"//#Source https://bit.ly/2neWfJ2 
const redirect = (url, asLink = true) =>
  asLink ? (window.location.href = url) : window.location.replace(url);
redirect('https://google.com');
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Redirect to a specified URL</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
442,JavaScript: Create a function that invokes the provided function with its arguments arranged according to the specified indexes,Write a JavaScript program to create a function that invokes the provided function with its arguments arranged according to the specified indexes.,"//#Source https://bit.ly/2neWfJ2 
const rearg = (fn, indexes) => (...args) => fn(...indexes.map(i => args[i]));
var rearged = rearg(
  function(a, b, c) {
    return [a, b, c];
  },
  [2, 0, 1]
);
console.log(rearged('b', 'c', 'a'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes the provided function with its arguments arranged according to the specified indexes</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
443,JavaScript: Get an array of lines from the specified file,Write a JavaScript program to get an array of lines from the specified file.,"//#Source https://bit.ly/2neWfJ2 
const fs = require('fs');
const readFileLines = filename =>
  fs
    .readFileSync(filename)
    .toString('UTF8')
    .split('\n');
/*
contents of test.txt :
  line1
  line2
  line3
  ___________________________
*/
let arr = readFileLines('test.txt');

console.log(arr); // ['line1', 'line2', 'line3']
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get an array of lines from the specified file</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
444,"JavaScript: Mutate the original array to filter out the values specified, based on a given iterator function","Write a JavaScript program to mutate the original array to filter out the values specified, based on a given iterator function.","//#Source https://bit.ly/2neWfJ2 
const pullBy = (arr, ...args) => {
  const length = args.length;
  let fn = length > 1 ? args[length - 1] : undefined;
  fn = typeof fn == 'function' ? (args.pop(), fn) : undefined;
  let argState = (Array.isArray(args[0]) ? args[0] : args).map(val => fn(val));
  let pulled = arr.filter((v, i) => !argState.includes(fn(v)));
  arr.length = 0;
  pulled.forEach(v => arr.push(v));
};

var myArray = [{ x: 1 }, { x: 2 }, { x: 3 }, { x: 1 }];

pullBy(myArray, [{ x: 1 }, { x: 3 }], o => o.x);

console.log(myArray);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Mutate the original array to filter out the values specified, based on a given iterator function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
446,JavaScript: Convert an asynchronous function to return a promise,Write a JavaScript program to convert an asynchronous function to return a promise.,"//#Source https://bit.ly/2neWfJ2 
const promisify = func => (...args) =>
  new Promise((resolve, reject) =>
    func(...args, (err, result) => (err ? reject(err) : resolve(result)))
  );
const delay = promisify((d, cb) => setTimeout(cb, d));
delay(2000).then(() => console.log('Hi!')); // // Promise resolves after 2s
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert an asynchronous function to return a promise</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
447,JavaScript: Convert a number in bytes to a human-readable string,Write a JavaScript program to convert a number in bytes to a human-readable string.Note: Use an array dictionary of units to be accessed based on the exponent.,"//#Source https://bit.ly/2neWfJ2 
const prettyBytes = (num, precision = 3, addSpace = true) => {
  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
  if (Math.abs(num) < 1) return num + (addSpace ? ' ' : '') + UNITS[0];
  const exponent = Math.min(Math.floor(Math.log10(num < 0 ? -num : num) / 3), UNITS.length - 1);
  const n = Number(((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));
  return (num < 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];
};
console.log(prettyBytes(1000));
console.log(prettyBytes(-27145424323.5821, 5));
console.log(prettyBytes(123456789, 3, false));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a number in bytes to a human-readable string</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
448,JavaScript: Return the singular or plural form of the word based on the input number,"Write a JavaScript program that will return the singular or plural form of the word based on the input number.If the first argument is an object, it will use a closure by returning a function that can auto-pluralize words that don't simply end in s if the supplied dictionary contains the word.","//#Source https://bit.ly/2neWfJ2 
const pluralize = (val, word, plural = word + 's') => {
  const _pluralize = (num, word, plural = word + 's') =>
    [1, -1].includes(Number(num)) ? word : plural;
  if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);
  return _pluralize(val, word, plural);
};
pluralize(0, 'apple'); // 'apples'
pluralize(1, 'apple'); // 'apple'
pluralize(2, 'apple'); // 'apples'
pluralize(2, 'person', 'people'); // 'people'

const PLURALS = {
  person: 'people',
  radius: 'radii'
};
const autoPluralize = pluralize(PLURALS);
console.log(autoPluralize(2, 'person')); // 'people'
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return the singular or plural form of the word based on the input number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
449,JavaScript: Perform left-to-right function composition,Write a JavaScript program to perform left-to-right function composition.,"//#Source https://bit.ly/2neWfJ2 
const pipeFunctions = (...fns) => fns.reduce((f, g) => (...args) => g(f(...args)));
const add5 = x => x + 5;
const multiply = (x, y) => x * y;
const multiplyAndAdd5 = pipeFunctions(multiply, add5);

console.log(multiplyAndAdd5(5, 2));
console.log(multiplyAndAdd5(16, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform left-to-right function composition</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
450,JavaScript: Perform left-to-right function composition for asynchronous functions,Write a JavaScript program to perform left-to-right function composition for asynchronous functions.,"//#Source https://bit.ly/2neWfJ2 
const pipeAsyncFunctions = (...fns) => arg => fns.reduce((p, f) => p.then(f), Promise.resolve(arg));
const sum = pipeAsyncFunctions(
  x => x + 1,
  x => new Promise(resolve => setTimeout(() => resolve(x + 2), 1000)),
  x => x + 3,
  async x => (await x) + 4
);
(async () => {
  console.log(await sum(5)); // 15 (after one second)
})();
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform left-to-right function composition for asynchronous functions</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
451,JavaScript: Calculate how many numbers in the given array are less or equal to the given value using the percentile formula,Write a JavaScript program to calculate how many numbers in the given array are less or equal to the given value using the percentile formula.,"//#Source https://bit.ly/2neWfJ2 
const percentile = (arr, val) =>
  (100 * arr.reduce((acc, v) => acc + (v < val ? 1 : 0) + (v === val ? 0.5 : 0), 0)) / arr.length;

console.log(percentile([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Calculate how many numbers in the given array are less or equal to the given value using the percentile formula</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
452,"JavaScript: Group the elements into two arrays, depending on the provided function's truthiness for each element","Write a JavaScript program to group the elements into two arrays, depending on the provided function's truthiness for each element.","//#Source https://bit.ly/2neWfJ2 
const partition = (arr, fn) =>
  arr.reduce(
    (acc, val, i, arr) => {
      acc[fn(val, i, arr) ? 0 : 1].push(val);
      return acc;
    },
    [[], []]
  );
const users = [{ user: 'barney', age: 36, active: false }, { user: 'fred', age: 40, active: true }];
partition(users, o => o.active);
console.log(users);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Group the elements into two arrays, depending on the provided function's truthiness for each element</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
453,JavaScript: Create a function that invokes?fn?with?partials?appended to the arguments it receives,Write a JavaScript program to create a function that invokes fn with partials appended to the arguments it receives.,"//#Source https://bit.ly/2neWfJ2 
const partialRight = (fn, ...partials) => (...args) => fn(...args, ...partials);
const greet = (greeting, name) => greeting + ' ' + name + '!';
const greetJohn = partialRight(greet, 'John');
console.log(greetJohn('Hello'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes?fn?with?partials?appended to the arguments it receives</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
454,JavaScript: Create a function that invokes?fn?with?partials?prepended to the arguments it receives,Write a JavaScript program to create a function that invokes fn with partials prepended to the arguments it receives.,"//#Source https://bit.ly/2neWfJ2 
const partial = (fn, ...partials) => (...args) => fn(...partials, ...args);
const greet = (greeting, name) => greeting + ' ' + name + '!';
const greetHello = partial(greet, 'Hello');
console.log(greetHello('John'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes?fn?with?partials?prepended to the arguments it receives</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
455,JavaScript: Parse a HTTP Cookie header string and return an object of all cookie name-value pairs,Write a JavaScript program to parse a HTTP Cookie header string and return an object of all cookie name-value pairs.,"//#Source https://bit.ly/2neWfJ2 
const parseCookie = str =>
  str
    .split(';')
    .map(v => v.split('='))
    .reduce((acc, v) => {
      acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());
      return acc;
    }, {});
console.log(parseCookie('foo=bar; equation=E%3Dmc%5E2'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Parse a HTTP Cookie header string and return an object of all cookie name-value pairs</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
456,JavaScript : Create a function that invokes the provided function with its arguments transformed,Write a JavaScript program to create a function that invokes the provided function with its arguments transformed.,"//#Source https://bit.ly/2neWfJ2 
const overArgs = (fn, transforms) => (...args) => fn(...args.map((val, i) => transforms[i](val)));
const square = n => n * n;
const double = n => n * 2;
const fn = overArgs((x, y) => [x, y], [square, double]);
console.log(fn(9,3));
console.log(fn(5,2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes the provided function with its arguments transformed</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
457,,Write a JavaScript program to get the nth element of a given array. ,"//#Source https://bit.ly/2neWfJ2 
const nthElement = (arr, n = 0) => (n > 0 ? arr.slice(n, n + 1) : arr.slice(n))[0];
console.log(nthElement(['a', 'b', 'c'], 1));
console.log(nthElement(['a', 'b', 'b'], -3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the nth element of a given array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
458,JavaScript: Convert a NodeList to an array,Write a JavaScript program to convert a NodeList to an array.,"//#Source https://bit.ly/2neWfJ2 
const nodeListToArray = nodeList => Array.prototype.slice.call(nodeList);
console.log(nodeListToArray(document.childNodes));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a NodeList to an array</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
459,JavaScript: Get the index of the function in an array of functions which executed the fastest,Write a JavaScript program to get the index of the function in an array of functions which executed the fastest.,"//#Source https://bit.ly/2neWfJ2 
const mostPerformant = (fns, iterations = 10000) => {
  const times = fns.map(fn => {
    const before = performance.now();
    for (let i = 0; i < iterations; i++) fn();
    return performance.now() - before;
  });
  return times.indexOf(Math.min(...times));
};

console.log(mostPerformant([
  () => {
    // Loops through the entire array before returning `false`
    [1, 2, 3, 4, 5, 6, 7, 8, 9, '10'].every(el => typeof el === 'number');
  },
  () => {
    // Only needs to reach index `1` before returning false
    [1, '2', 3, 4, 5, 6, 7, 8, 9, 10].every(el => typeof el === 'number');
  }
])); // 1
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the index of the function in an array of functions which executed the fastest</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
460,JavaScript: Get the?n?minimum elements from the provided array,"Write a JavaScript program to get the n minimum elements from the provided array.If?n?is greater than or equal to the provided array's length, then return the original array(sorted in ascending order).","//#Source https://bit.ly/2neWfJ2 
const minN = (arr, n = 1) => [...arr].sort((a, b) => a - b).slice(0, n);
console.log(minN([1, 2, 3]));
console.log(minN([1, 2, 3], 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the?n?minimum elements from the provided array</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
461,"JavaScript: Get the minimum value of an array, after mapping each element to a value using the provided function","Write a JavaScript program to get the minimum value of an array, after mapping each element to a value using the provided function.","//#Source https://bit.ly/2neWfJ2 
const minBy = (arr, fn) => Math.min(...arr.map(typeof fn === 'function' ? fn : val => val[fn]));
console.log(minBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], o => o.n));
console.log(minBy([{ n: 4 }, { n: 2 }, { n: 8 }, { n: 6 }], 'n'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the minimum value of an array, after mapping each element to a value using the provided function</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
462,JavaScript: Create a new object from the combination of two or more objects,Write a JavaScript program to create a new object from the combination of two or more objects.,"//#Source https://bit.ly/2neWfJ2 
const merge = (...objs) =>
  [...objs].reduce(
    (acc, obj) =>
      Object.keys(obj).reduce((a, k) => {
        acc[k] = acc.hasOwnProperty(k) ? [].concat(acc[k]).concat(obj[k]) : obj[k];
        return acc;
      }, {}),
    {}
  );
const object = {
  a: [{ x: 2 }, { y: 4 }],
  b: 1
};
const other = {
  a: { z: 3 },
  b: [2, 3],
  c: 'foo'
};
console.log(merge(object, other));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a new object from the combination of two or more objects</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
463,"JavaScript: Compare two objects to determine if the first one contains equivalent property values to the second one, based on a provided function","Write a JavaScript program to compare two objects to determine if the first one contains equivalent property values to the second one, based on a provided function.","//#Source https://bit.ly/2neWfJ2 
const matchesWith = (obj, source, fn) =>
  Object.keys(source).every(
    key =>
      obj.hasOwnProperty(key) && fn
        ? fn(obj[key], source[key], key, obj, source)
        : obj[key] == source[key]
  );
const isGreeting = val => /^h(?:i|ello)$/.test(val);

console.log(matchesWith(
  { greeting: 'hello' },
  { greeting: 'hi' },
  (oV, sV) => isGreeting(oV) && isGreeting(sV)
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Compare two objects to determine if the first one contains equivalent property values to the second one, based on a provided function</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
464,"JavaScript: Create a new object from the specified object, where all the keys are in lowercase","Write a JavaScript program to create a new object from the specified object, where all the keys are in lowercase.","//#Source https://bit.ly/2neWfJ2 
const lowercaseKeys = obj =>
  Object.keys(obj).reduce((acc, key) => {
    acc[key.toLowerCase()] = obj[key];
    return acc;
  }, {});
const myObj = { Name: 'Adam', sUrnAME: 'Smith' };
const myObjLower = lowercaseKeys(myObj);
console.log(myObjLower);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a new object from the specified object, where all the keys are in lowercase</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
465,JavaScript: Get the last element from a given array,Write a JavaScript program to get the last element from a given array.,"//#Source https://bit.ly/2neWfJ2 
const last = arr => arr[arr.length - 1];
console.log(last([1, 2, 3]));
console.log(last([1, 2, 3, 4, 5, 7]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the last element from a given array</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
467,JavaScript: Check whether the provided argument is a valid JSON,Write a JavaScript program to check whether the provided argument is a valid JSON.,"//#Source https://bit.ly/2neWfJ2 
const isValidJSON = obj => {
  try {
    JSON.parse(obj);
    return true;
  } catch (e) {
    return false;
  }
};
console.log(isValidJSON('{""name"":""Adam"",""age"":20}'));
console.log(isValidJSON('{""name"":""Adam"",age:""20""}'));
console.log(isValidJSON(null));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the provided argument is a valid JSON</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
469,"JavaScript: Return true if the specified value is undefined, false otherwise","Write a JavaScript program that will return true if the specified value is undefined, false otherwise.Note: Use the strict equality operator to check if the value and of val are equal to undefined.","//#Source https://bit.ly/2neWfJ2 
const isUndefined = val => val === undefined;
console.log(isUndefined(undefined));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the specified value is undefined, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
470,JavaScript: Check whether the given argument is a symbol,Write a JavaScript program to check whether the given argument is a symbol.,"//#Source https://bit.ly/2neWfJ2 
const isSymbol = val => typeof val === 'symbol';
console.log(isSymbol(Symbol('x')));
console.log(isSymbol(Symbol(1)));
console.log(isSymbol(Symbol(')')));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the given argument is a symbol</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
471,JavaScript: Check whether the given argument is a string,Write a JavaScript program to check whether the given argument is a string.,"//#Source https://bit.ly/2neWfJ2 
const isString = val => typeof val === 'string';
console.log(isString('10'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the given argument is a string</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
472,"JavaScript: Return 1 if the array is sorted in ascending order, -1 if it is sorted in descending order or 0 if it is not sorted","Write a JavaScript program that will return 1 if the array is sorted in ascending order, -1 if it is sorted in descending order or 0 if it is not sorted.","//#Source https://bit.ly/2neWfJ2 
const isSorted = arr => {
  let direction = -(arr[0] - arr[1]);
  for (let [i, val] of arr.entries()) {
    direction = !direction ? -(arr[i - 1] - arr[i]) : direction;
    if (i === arr.length - 1) return !direction ? 0 : direction;
    else if ((val - arr[i + 1]) * direction > 0) return 0;
  }
};
console.log(isSorted([0, 1, 2, 2]));
console.log(isSorted([4, 3, 2]));
console.log(isSorted([4, 3, 5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return 1 if the array is sorted in ascending order, -1 if it is sorted in descending order or 0 if it is not sorted</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
473,"JavaScript: Return true if an object looks like a Promise, false otherwise","Write a JavaScript program that will return true if an object looks like a Promise, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const isPromiseLike = obj =>
  obj !== null &&
  (typeof obj === 'object' || typeof obj === 'function') &&
  typeof obj.then === 'function';

console.log(isPromiseLike({
  then: function() {
    return '';
  }
})); 
console.log(isPromiseLike(null));
console.log(isPromiseLike({}));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if an object looks like a Promise, false otherwise</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
474,JavaScript: Get a boolean determining if the passed value is primitive or not,Write a JavaScript program to get a boolean determining if the passed value is primitive or not.,"//#Source https://bit.ly/2neWfJ2 
const isPrimitive = val => !['object', 'function'].includes(typeof val) || val === null;

console.log(isPrimitive(null));
console.log(isPrimitive(50));
console.log(isPrimitive('Hello!'));
console.log(isPrimitive(false));
console.log(isPrimitive(Symbol()));
console.log(isPrimitive([]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a boolean determining if the passed value is primitive or not</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
475,JavaScript: Check whether the provided integer is a prime number or not,Write a JavaScript program to check whether the provided integer is a prime number or not.,"//#Source https://bit.ly/2neWfJ2 
const isPrime = num => {
  const boundary = Math.floor(Math.sqrt(num));
  for (var i = 2; i <= boundary; i++) if (num % i === 0) return false;
  return num >= 2;
};

console.log(isPrime(11));
console.log(isPrime(17));
console.log(isPrime(8));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the provided integer is a prime number or not</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
476,JavaScript: Check whether the provided value is an object created by the Object constructor,Write a JavaScript program to check whether the provided value is an object created by the Object constructor.,"//#Source https://bit.ly/2neWfJ2 
const isPlainObject = val => !!val && typeof val === 'object' && val.constructor === Object;

console.log(isPlainObject({ a: 1 }));
console.log(isPlainObject(new Map()));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the provided value is an object created by the Object constructor</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
477,JavaScript: Check whether a value is object-like also check whether the provided value is not null and its typeof is equal to 'object',Write a JavaScript program to check whether a value is object-like. Check whether the provided value is not null and its typeof is equal to 'object'.,"//#Source https://bit.ly/2neWfJ2 
const isObjectLike = val => val !== null && typeof val === 'object';

console.log(isObjectLike({}));
console.log(isObjectLike([1, 2, 3]));
console.log(isObjectLike(x => x));
console.log(isObjectLike(null));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether a value is object-like also check whether the provided value is not null and its typeof is equal to 'object'</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
478,JavaScript: Get a boolean determining if the passed value is an object or not,Write a JavaScript program to get a boolean determining if the passed value is an object or not.,"//#Source https://bit.ly/2neWfJ2 
const isObject = obj => obj === Object(obj);

console.log(isObject([1, 2, 3, 4]));
console.log(isObject([]));
console.log(isObject(['Hello!']));
console.log(isObject({ a: 1 }));
console.log(isObject({}));
console.log(isObject(true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a boolean determining if the passed value is an object or not</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
479,JavaScript: Check if a given argument is a number,Write a JavaScript program to check if a given argument is a number.,"//#Source https://bit.ly/2neWfJ2 
const isNumber = val => typeof val === 'number';

console.log(isNumber('1'));
console.log(isNumber(1));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if a given argument is a number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
480,"JavaScript: Return true if the specified value is null, false otherwise","Write a JavaScript program that will return true if the specified value is null, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const isNull = val => val === null;
console.log(isNull(null)); 
console.log(isNull(123));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the specified value is null, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
482,JavaScript: Check whether the given argument is a function,Write a JavaScript program to check whether the given argument is a function.,"//#Source https://bit.ly/2neWfJ2 
const isFunction = val => typeof val === 'function';

console.log(isFunction('x'));
console.log(isFunction(x => x));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the given argument is a function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
483,"JavaScript: Return true if the given number is even, false otherwise","Write a JavaScript program that will return true if the given number is even, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const isEven = num => num % 2 === 0;

console.log(isEven(3));
console.log(isEven(32));
console.log(isEven(1));
console.log(isEven(0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the given number is even, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
484,"JavaScript: Return true if a value is an empty object, collection, map or set, has no enumerable properties or is any type that is not considered a collection","Write a JavaScript program that will return true if a value is an empty object, collection, map or set, has no enumerable properties or is any type that is not considered a collection.","//#Source https://bit.ly/2neWfJ2 
const isEmpty = val => val == null || !(Object.keys(val) || val).length;

console.log(isEmpty(new Map()));
console.log(isEmpty(new Set()));
console.log(isEmpty([]));
console.log(isEmpty({}));
console.log(isEmpty(''));
console.log(isEmpty([1, 2]));
console.log(isEmpty({ a: 1, b: 2 }));
console.log(isEmpty('text'));
console.log(isEmpty(123));
console.log(isEmpty(true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if a value is an empty object, collection, map or set, has no enumerable properties or is any type that is not considered a collection</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
485,JavaScript: Check whether the first numeric argument is divisible by the second one,Write a JavaScript program to check whether the first numeric argument is divisible by the second one.,"//#Source https://bit.ly/2neWfJ2 
const isDivisible = (dividend, divisor) => dividend % divisor === 0;

console.log(isDivisible(6, 3));
console.log(isDivisible(5, 3));
console.log(isDivisible(100, 10));
console.log(isDivisible(0, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the first numeric argument is divisible by the second one</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
486,"JavaScript: Return true if the browser tab of the page is focused, false otherwise","Write a JavaScript program that will return true if the browser tab of the page is focused, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const isBrowserTabFocused = () => !document.hidden;
console.log(isBrowserTabFocused());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the browser tab of the page is focused, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
487,JavaScript: Determine whether the current runtime environment is a browser,Write a JavaScript program to determine whether the current runtime environment is a browser so that front-end modules can run on the server (Node) without throwing errors.,"//#Source https://bit.ly/2neWfJ2 
const isBrowser = () => ![typeof window, typeof document].includes('undefined');

console.log(isBrowser()); // true (browser)
console.log(isBrowser()); // false (Node)
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Determine whether the current runtime environment is a browser</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
488,JavaScript: Check whether the given argument is a native boolean element,Write a JavaScript program that will check whether the given argument is a native boolean element.,"//#Source https://bit.ly/2neWfJ2 
const isBoolean = val => typeof val === 'boolean';

console.log(isBoolean(null));
console.log(isBoolean(false));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the given argument is a native boolean element</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
489,JavaScript: Check whether the provided argument is array-like ,Write a JavaScript program to check whether the provided argument is array-like (i.e. is iterable).,"//#Source https://bit.ly/2neWfJ2 
const isArrayLike = val => {
  try {
    return [...val], true;
  } catch (e) {
    return false;
  }
};
console.log(isArrayLike(document.querySelectorAll('.className'))); // true
console.log(isArrayLike('abc')); // true
console.log(isArrayLike(null)); // false
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the provided argument is array-like</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
491,"JavaScript: Return true if the given string is an absolute URL, false otherwise","Write a JavaScript program that will return true if the given string is an absolute URL, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const isAbsoluteURL = str => /^[a-z][a-z0-9+.-]*:/.test(str);

console.log(isAbsoluteURL('https://google.com')); // true
console.log(isAbsoluteURL('ftp://www.myserver.net')); // true
console.log(isAbsoluteURL('/foo/bar')); // false
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the given string is an absolute URL, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
492,JavaScript: Check whether the provided value is of the specified type,Write a JavaScript program to check whether the provided value is of the specified type.,"//#Source https://bit.ly/2neWfJ2 
const is = (type, val) => ![, null].includes(val) && val.constructor === type;
console.log(is(Array, [1])); // true
console.log(is(ArrayBuffer, new ArrayBuffer()));
console.log(is(Map, new Map()));
console.log(is(RegExp, /./g));
console.log(is(Set, new Set()));
console.log(is(WeakMap, new WeakMap()));
console.log(is(WeakSet, new WeakSet()));
console.log(is(String, ''));
console.log(is(String, new String('')));
console.log(is(Number, 1));
console.log(is(Number, new Number(1)));
console.log(is(Boolean, true));
console.log(is(Boolean, new Boolean(true)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether the provided value is of the specified type</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
493,"JavaScript: Get a list of elements that exist in both arrays, using a provided comparator function","Write a JavaScript program to get a list of elements that exist in both arrays, using a provided comparator function.","//#Source https://bit.ly/2neWfJ2 
const intersectionWith = (a, b, comp) => a.filter(x => b.findIndex(y => comp(x, y)) !== -1);
console.log(intersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0, 3.9], (a, b) => Math.round(a) === Math.round(b)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a list of elements that exist in both arrays, using a provided comparator function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
494,"JavaScript: Get?a list of elements that exist in both arrays, after applying the provided function to each array element of both","Write a JavaScript program to get? a list of elements that exist in both arrays, after applying the provided function to each array element of both.","//#Source https://bit.ly/2neWfJ2 
const intersectionBy = (a, b, fn) => {
  const s = new Set(b.map(x => fn(x)));
  return a.filter(x => s.has(fn(x)));
};

console.log(intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get?a list of elements that exist in both arrays, after applying the provided function to each array element of both</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
495,JavaScript: Get a list of elements that exist in both arrays,Write a JavaScript program to get a list of elements that exist in both arrays.,"//#Source https://bit.ly/2neWfJ2 
const intersection = (a, b) => {
  const s = new Set(b);
  return a.filter(x => s.has(x));
};
console.log(intersection([1, 2, 3], [4, 3, 2]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a list of elements that exist in both arrays</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
496,JavaScript: Create a n-dimensional array with given value,Write a JavaScript program to create a n-dimensional array with given value.,"//#Source https://bit.ly/2neWfJ2 
const initializeNDArray = (val, ...args) =>
  args.length === 0
    ? val
    : Array.from({ length: args[0] }).map(() => initializeNDArray(val, ...args.slice(1)));

console.log(initializeNDArray(1, 3));
console.log(initializeNDArray(5, 2, 2, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a n-dimensional array with given value</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
497,JavaScript: Initialize and fill an array with the specified values,Write a JavaScript program to initialize and fill an array with the specified values.,"//#Source https://bit.ly/2neWfJ2 
const initializeArrayWithValues = (n, val = 0) => Array(n).fill(val);
console.log(initializeArrayWithValues(5, 2));
console.log(initializeArrayWithValues(4, 0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Initialize and fill an array with the specified values</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
498,JavaScript: Initializes an array containing the numbers in the specified range (in reverse) where start and end are inclusive with their common difference step,Write a JavaScript program to Initializes an array containing the numbers in the specified range (in reverse) where start and end are inclusive with their common difference step.,"//#Source https://bit.ly/2neWfJ2 
const initializeArrayWithRangeRight = (end, start = 0, step = 1) =>
  Array.from({ length: Math.ceil((end + 1 - start) / step) }).map(
    (v, i, arr) => (arr.length - i - 1) * step + start
  );

console.log(initializeArrayWithRangeRight(5));
console.log(initializeArrayWithRangeRight(7, 3));
console.log(initializeArrayWithRangeRight(9, 0, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Initializes an array containing the numbers in the specified range (in reverse) where start and end are inclusive with their common difference step</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
499,JavaScript: Get all the elements of an array except the last one,Write a JavaScript program to get all the elements of an array except the last one.,"//#Source https://bit.ly/2neWfJ2 
const initial = arr => arr.slice(0, -1);
console.log(initial([1, 2, 3]));  
console.log(initial([0, -1, -2]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get all the elements of an array except the last one</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
500,JavaScript: Get all indices of values in an array,"Write a JavaScript program to get all indices of val in an array. If val never occurs, returns [].","//#Source https://bit.ly/2neWfJ2 
const indexOfAll = (arr, val) => arr.reduce((acc, el, i) => (el === val ? [...acc, i] : acc), []);

console.log(indexOfAll([1, 2, 3, 1, 2, 3], 1));
console.log(indexOfAll([1, 2, 3], 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get all indices of values in an array</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
501,JavaScript: Check if the given number falls within the given range,Write a JavaScript program to check if the given number falls within the given range.,"//#Source https://bit.ly/2neWfJ2 
const inRange = (n, start, end = null) => {
  if (end && start > end) end = [start, (start = end)][0];
  return end == null ? n >= 0 && n < start : n >= start && n < end;
};
console.log(inRange(3, 2, 5));
console.log(inRange(3, 4));
console.log(inRange(2, 3, 5));
console.log(inRange(3, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if the given number falls within the given range</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
502,JavaScript: Get the number of times a function executed per second,"Write a JavaScript program to get the number of times a function executed per second.hz is the unit for hertz, the unit of frequency defined as one cycle per second.","//#Source https://bit.ly/2neWfJ2 
const hz = (fn, iterations = 100) => {
  const before = performance.now();
  for (let i = 0; i < iterations; i++) fn();
  return (1000 * iterations) / (performance.now() - before);
};
// 10,000 element array
const numbers = Array(10000)
  .fill()
  .map((_, i) => i);

// Test functions with the same goal: sum up the elements in the array
const sumReduce = () => numbers.reduce((acc, n) => acc + n, 0);
const sumForLoop = () => {
  let sum = 0;
  for (let i = 0; i < numbers.length; i++) sum += numbers[i];
  return sum;
};

// sumForLoop` is nearly 10 times faster
console.log(Math.round(hz(sumReduce)));
console.log(Math.round(hz(sumForLoop)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the number of times a function executed per second</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
503,JavaScript: Check if the current process's arguments contain the specified flags,Write a JavaScript program to check if the current process's arguments contain the specified flags.,"//#Source https://bit.ly/2neWfJ2 
const hammingDistance = (num1, num2) => ((num1 ^ num2).toString(2).match(/1/g) || '').length;
console.log(hammingDistance(2, 3));
console.log(hammingDistance(5, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if the current process's arguments contain the specified flags</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
504,JavaScript: Get the native type of a value,"Write a JavaScript program to get the native type of a value. Returns lowercased constructor name of value, ""undefined"" or ""null"" if value is undefined or null.","//#Source https://bit.ly/2neWfJ2 
const getType = v =>
  v === undefined ? 'undefined' : v === null ? 'null' : v.constructor.name.toLowerCase();
console.log(getType(new Set([1, 2, 3])));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the native type of a value</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
505,JavaScript: Get a string of the form HH:MM:SS from a Date object,Write a JavaScript program to get a string of the form HH:MM:SS from a Date object.,"//#Source https://bit.ly/2neWfJ2 
const getColonTimeFromDate = date => date.toTimeString().slice(0, 8);
console.log(getColonTimeFromDate(new Date()));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get a string of the form HH:MM:SS from a Date object</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
506,JavaScript: Initializes an array containing the numbers in the specified range,Write a JavaScript program that initializes an array containing the numbers in the specified range where start and end are inclusive and the ratio between two terms is step. Returns an error if step equals 1. ,"//#Source https://bit.ly/2neWfJ2 
const geometricProgression = (end, start = 1, step = 2) =>
  Array.from({ length: Math.floor(Math.log(end / start) / Math.log(step)) + 1 }).map(
    (v, i) => start * step ** i
  );
console.log(geometricProgression(256));
console.log(geometricProgression(256, 3));
console.log(geometricProgression(256, 1, 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Initializes an array containing the numbers in the specified range</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
507,JavaScript: Calculate the greatest common divisor between two or more numbers/arrays,Write a JavaScript program to calculate the greatest common divisor between two or more numbers/arrays.,"//#Source https://bit.ly/2neWfJ2 
const gcd = (...arr) => {
  const _gcd = (x, y) => (!y ? x : gcd(y, x % y));
  return [...arr].reduce((a, b) => _gcd(a, b));
};
console.log(gcd(8, 36));
console.log(gcd(...[12, 8, 32]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Calculate the greatest common divisor between two or more numbers/arrays</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
508,JavaScript: Remove HTML/XML tags from string,Write a JavaScript program to remove HTML/XML tags from string.Note: Use a regular expression to remove HTML/XML tags from a string.,"//#Source https://bit.ly/2neWfJ2 
const stripHTMLTags = str => str.replace(/<[^>]*>/g, '');
console.log(stripHTMLTags('<p><em>lorem</em> <strong>ipsum</strong></p>'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove HTML/XML tags from string</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
509,JavaScript: Get the standard deviation of an array of numbers,Write a JavaScript program to get the standard deviation of an array of numbers.,"//#Source https://bit.ly/2neWfJ2 
const standardDeviation = (arr, usePopulation = false) => {
  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;
  return Math.sqrt(
    arr.reduce((acc, val) => acc.concat((val - mean) ** 2), []).reduce((acc, val) => acc + val, 0) /
      (arr.length - (usePopulation ? 0 : 1))
  );
};

console.log(standardDeviation([10, 2, 38, 23, 38, 23, 21]));
console.log(standardDeviation([10, 2, 38, 23, 38, 23, 21], true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the standard deviation of an array of numbers</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
510,JavaScript: Get n random elements at unique keys from array up to the size of array,Write a JavaScript program to get n random elements at unique keys from array up to the size of array.,"//#Source https://bit.ly/2neWfJ2 
const sampleSize = ([...arr], n = 1) => {
  let m = arr.length;
  while (m) {
    const i = Math.floor(Math.random() * m--);
    [arr[m], arr[i]] = [arr[i], arr[m]];
  }
  return arr.slice(0, n);
};

console.log(sampleSize([1, 2, 3], 2)); 
console.log(sampleSize([1, 2, 3], 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get n random elements at unique keys from array up to the size of array</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
511,JavaScript: Remove elements from an array for which the given function returns false,Write a JavaScript program to remove elements from an array for which the given function returns false.,"//#Source https://bit.ly/2neWfJ2 
const remove = (arr, func) =>
  Array.isArray(arr)
    ? arr.filter(func).reduce((acc, val) => {
        arr.splice(arr.indexOf(val), 1);
        return acc.concat(val);
      }, [])
    : [];

console.log(remove([1, 2, 3, 4], n => n % 2 === 0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove elements from an array for which the given function returns false</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
513,JavaScript: Convert a string from camelcase,Write a JavaScript program to convert a string from camelcase.,"//#Source https://bit.ly/2neWfJ2 
const fromCamelCase = (str, separator = '_') =>
  str
    .replace(/([a-z\d])([A-Z])/g, '$1' + separator + '$2')
    .replace(/([A-Z]+)([A-Z][a-z\d]+)/g, '$1' + separator + '$2')
    .toLowerCase();

console.log(fromCamelCase('someDatabaseFieldName', ' '));
console.log(fromCamelCase('someLabelThatNeedsToBeCamelized', '-'));
console.log(fromCamelCase('someJavascriptProperty', '_'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a string from camelcase</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
514,JavaScript: Get the human readable format of the given number of milliseconds,Write a JavaScript program to get the human readable format of the given number of milliseconds.,"//#Source https://bit.ly/2neWfJ2 
const formatDuration = ms => {
  if (ms < 0) ms = -ms;
  const time = {
    day: Math.floor(ms / 86400000),
    hour: Math.floor(ms / 3600000) % 24,
    minute: Math.floor(ms / 60000) % 60,
    second: Math.floor(ms / 1000) % 60,
    millisecond: Math.floor(ms) % 1000
  };
  return Object.entries(time)
    .filter(val => val[1] !== 0)
    .map(val => val[1] + ' ' + (val[1] !== 1 ? val[0] + 's' : val[0]))
    .join(', ');
};

console.log(formatDuration(1001));
console.log(formatDuration(34325055574));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the human readable format of the given number of milliseconds</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
515,"JavaScript: Iterate over all own properties of an object in reverse, running a callback for each one","Write a JavaScript program to iterate over all own properties of an object in reverse, running a callback for each one.","//#Source https://bit.ly/2neWfJ2 
const forOwnRight = (obj, fn) =>
  Object.keys(obj)
    .reverse()
    .forEach(key => fn(obj[key], key, obj));

console.log(forOwnRight({ foo: 'bar', a: 1 }, v => console.log(v)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Iterate over all own properties of an object in reverse, running a callback for each one</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
516,"JavaScript: Takes a function as an argument, then makes the first argument the last","Write a JavaScript program that takes a function as an argument, then makes the first argument the last.","//#Source https://bit.ly/2neWfJ2 
const flip = fn => (first, ...rest) => fn(...rest, first);
let a = { name: 'John Smith' };
let b = {};
const mergeFrom = flip(Object.assign);
let mergePerson = mergeFrom.bind(null, a);
mergePerson(b); // == b
b = {};
console.log(Object.assign(b, a)); // == b
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Takes a function as an argument, then makes the first argument the last</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
517,JavaScript: Flatten an object with the paths for keys,Write a JavaScript program to flatten an object with the paths for keys.,"//#Source https://bit.ly/2neWfJ2 
const flattenObject = (obj, prefix = '') =>
  Object.keys(obj).reduce((acc, k) => {
    const pre = prefix.length ? prefix + '.' : '';
    if (typeof obj[k] === 'object') Object.assign(acc, flattenObject(obj[k], pre + k));
    else acc[pre + k] = obj[k];
    return acc;
  }, {});
console.log(flattenObject({ a: { b: { c: 1 } }, d: 1 }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Flatten an object with the paths for keys</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
518,JavaScript: Flatten a given array up to the specified depth,Write a JavaScript program to flatten a given array up to the specified depth.,"//#Source https://bit.ly/2neWfJ2 
const flatten = (arr, depth = 1) =>
  arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), []);

console.log(flatten([1, [2], 3, 4])); 
console.log(flatten([1, [2, [3, [4, 5], 6], 7], 8], 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Flatten a given array up to the specified depth</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
519,"JavaScript: Get the last key that satisfies the provided testing function, otherwise undefined is returned","Write a JavaScript program to get the last key that satisfies the provided testing function, otherwise undefined is returned.","//#Source https://bit.ly/2neWfJ2 
const findLastKey = (obj, fn) =>
  Object.keys(obj)
    .reverse()
    .find(key => fn(obj[key], key, obj));

console.log(findLastKey(
  {
    barney: { age: 36, active: true },
    fred: { age: 40, active: false },
    pebbles: { age: 1, active: true }
  },
  o => o['active']
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the last key that satisfies the provided testing function, otherwise undefined is returned</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
520,JavaScript: Get the first key that satisfies the provided testing function,Write a JavaScript program to get the first key that satisfies the provided testing function. Otherwise? return undefined. ,"//#Source https://bit.ly/2neWfJ2 
const findKey = (obj, fn) => Object.keys(obj).find(key => fn(obj[key], key, obj));

console.log(findKey(
  {
    barney: { age: 36, active: true },
    fred: { age: 40, active: false },
    pebbles: { age: 1, active: true }
  },
  o => o['active']
));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the first key that satisfies the provided testing function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
521,"JavaScript: Generate an array, containing the Fibonacci sequence, up until the nth term","Write a JavaScript program to generate an array, containing the Fibonacci sequence, up until the nth term.","//#Source https://bit.ly/2neWfJ2 
const fibonacci = n =>
  Array.from({ length: n }).reduce(
    (acc, val, i) => acc.concat(i > 1 ? acc[i - 1] + acc[i - 2] : i),
    []
  );
console.log(fibonacci(2)); 
console.log(fibonacci(3)); 
console.log(fibonacci(6));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Generate an array, containing the Fibonacci sequence, up until the nth term</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
522,JavaScript: Calculate the factorial of a number,Write a JavaScript program to calculate the factorial of a number.,"//#Source https://bit.ly/2neWfJ2 
const factorial = n =>
  n < 0
    ? (() => {
        throw new TypeError('Negative numbers are not allowed!');
      })()
    : n <= 1
      ? 1
      : n * factorial(n - 1);

console.log(factorial(1));
console.log(factorial(5));
console.log(factorial(7));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Calculate the factorial of a number</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
523,JavaScript: Escape a string to use in a regular expression,Write a JavaScript program to escape a string to use in a regular expression.,"//#Source https://bit.ly/2neWfJ2 
const escapeRegExp = str => str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
console.log(escapeRegExp('(test)'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Escape a string to use in a regular expression</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
525,JavaScript: Remove elements in an array until the passed function returns true,Write a JavaScript program to remove elements in an array until the passed function returns true. Returns the remaining elements in the array.,"//#Source https://bit.ly/2neWfJ2 
const dropWhile = (arr, func) => {
  while (arr.length > 0 && !func(arr[0])) arr = arr.slice(1);
  return arr;
};

console.log(dropWhile([1, 2, 3, 4], n => n >= 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove elements in an array until the passed function returns true</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
526,JavaScript: Remove elements from the end of an array until the passed function returns true,Write a JavaScript program to remove elements from the end of an array until the passed function returns true. Returns the remaining elements in the array.,"//#Source https://bit.ly/2neWfJ2 
const dropRightWhile = (arr, func) => {
  while (arr.length > 0 && !func(arr[arr.length - 1])) arr = arr.slice(0, -1);
  return arr;
};

console.log(dropRightWhile([1, 2, 3, 4], n => n < 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Remove elements from the end of an array until the passed function returns true</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
527,JavaScript: Get the distance between two given points,Write a JavaScript program to get the distance between two given points.,"//#Source https://bit.ly/2neWfJ2 
const distance = (x0, y0, x1, y1) => Math.hypot(x1 - x0, y1 - y0);
console.log(distance(1, 1, 2, 3)); 
console.log(distance(-1, -1, 2, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the distance between two given points</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
528,JavaScript: Get the difference between two given arrays,Write a JavaScript program to get the difference between two given arrays.,"//#Source https://bit.ly/2neWfJ2 
const difference = (a, b) => {
  const s = new Set(b);
  return a.filter(x => !s.has(x));
};
console.log(difference([1, 2, 3], [1, 2, 4]));
console.log(difference([1, 2, 4],[1, 2, 3]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the difference between two given arrays</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
529,JavaScript: Invokes the provided function after wait milliseconds,Write a JavaScript program to Invokes the provided function after wait milliseconds.,"//#Source https://bit.ly/2neWfJ2 
const delay = (fn, wait, ...args) => setTimeout(fn, wait, ...args);

delay(
  function(text) {
    console.log(text);
  },
  1000,
  'later'
);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Invokes the provided function after wait milliseconds</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
530,JavaScript: Convert an given angle from degrees to radians,Write a JavaScript program to convert an given angle from degrees to radians.,"//#Source https://bit.ly/2neWfJ2 
const degreesToRads = deg => (deg * Math.PI) / 180.0;
console.log(degreesToRads(90.0));
console.log(degreesToRads(30.0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert an given angle from degrees to radians</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
531,JavaScript: Assigns default values for all properties in an object that are undefined,Write a JavaScript program that Assigns default values for all properties in an object that are undefined.,"//#Source https://bit.ly/2neWfJ2 
const defaults = (obj, ...defs) => Object.assign({}, obj, ...defs.reverse(), obj);
console.log(defaults({ a: 1 }, { b: 2 }, { b: 6 }, { a: 3 }));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Assigns default values for all properties in an object that are undefined</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
532,JavaScript: Deep flatten an array,Write a JavaScript program to deep flatten an array.,"//#Source https://bit.ly/2neWfJ2 
const deepFlatten = arr => [].concat(...arr.map(v => (Array.isArray(v) ? deepFlatten(v) : v)));
console.log(deepFlatten([1, [2], [[3], 4], 5]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Deep flatten an array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
534,JavaScript: Create an element from a string ,"Write a JavaScript program to create an element from a string (without appending it to the document). If the given string contains multiple elements, only the first one will be returned.","//#Source https://bit.ly/2neWfJ2 
const createElement = str => {
  const el = document.createElement('div');
  el.innerHTML = str;
  return el.firstElementChild;
};

const el = createElement(
  `<div class=""container"">
    <p>Hello!</p>
  </div>`
);
console.log(el.className); // 'container'
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an element from a string (without appending it to the document)</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
535,JavaScript: Write a JSON object to a file,Write a JavaScript program to write a JSON object to a file.,"//#Source https://bit.ly/2neWfJ2 
const fs = require('fs');
const JSONToFile = (obj, filename) =>
  fs.writeFile(`${filename}.json`, JSON.stringify(obj, null, 2));
JSONToFile({ test: 'is passed' }, 'testJsonFile'); // writes the object to 'testJsonFile.json'
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JSON object to a file</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
536,JavaScript: Convert the values of RGB components to a color code,Write a JavaScript program to convert the values of RGB components to a color code.,"//#Source https://bit.ly/2neWfJ2 
const RGBToHex = (r, g, b) => ((r << 16) + (g << 8) + b).toString(16).padStart(6, '0');
console.log(RGBToHex(255, 165, 1));
console.log(RGBToHex(255, 255, 1));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert the values of RGB components to a color code</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
537,JavaScript: Generate a UUID in a browser,Write a JavaScript program to generate a UUID in a browser.,"//#Source https://bit.ly/2neWfJ2 
const UUIDGeneratorBrowser = () =>
  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
    (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)
  );
console.log(UUIDGeneratorBrowser());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Generate a UUID in a browser</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
538,JavaScript: Generate a UUID in Node.JS.,"Write a JavaScript program to generate a UUID in Node.JS. Use crypto API to generate a UUID, compliant with RFC4122 version 4.","//#Source https://bit.ly/2neWfJ2 
const crypto = require('crypto');
const UUIDGeneratorNode = () =>
  ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
    (c ^ (crypto.randomBytes(1)[0] & (15 >> (c / 4)))).toString(16)
  );
console.log(UUIDGeneratorNode());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Generate a UUID in Node.JS.</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
539,"JavaScript: Return true if the provided predicate function returns true for at least one element in a collection, false otherwise","Write a JavaScript program that will return true if the provided predicate function returns true for at least one element in a collection, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const any = (arr, fn = Boolean) => arr.some(fn);
console.log(any([0, 1, 2, 0], x => x >= 2));
console.log(any([0, 0, 1, 0]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the provided predicate function returns true for at least one element in a collection, false otherwise</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
540,JavaScript: Check if two given numbers are approximately equal to each other,Write a JavaScript program to check if two given numbers are approximately equal to each other.,"//#Source https://bit.ly/2neWfJ2 
const approximatelyEqual = (v1, v2, epsilon = 0.001) => Math.abs(v1 - v2) < epsilon;
console.log(approximatelyEqual(Math.PI / 2.0, 1.5708));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check if two given numbers are approximately equal to each other</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
541,JavaScript: Convert a 2D array to a comma-separated values (CSV) string,Write a JavaScript program to convert a 2D array to a comma-separated values (CSV) string.,"//#Source https://bit.ly/2neWfJ2 
const arrayToCSV = (arr, delimiter = ',') =>
  arr.map(v => v.map(x => `""${x}""`).join(delimiter)).join('\n');
console.log(arrayToCSV([['a', 'b'], ['c', 'd']]));
console.log(arrayToCSV([['a', 'b'], ['c', 'd']], ';'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a 2D array to a comma-separated values (CSV) string</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
542,"JavaScript: Create a function that accepts up to n arguments, ignoring any additional arguments","Write a JavaScript program to create a function that accepts up to n arguments, ignoring any additional arguments.","//#Source https://bit.ly/2neWfJ2 
const ary = (fn, n) => (...args) => fn(...args.slice(0, n));
const firstTwoMax = ary(Math.max, 2);

console.log([[2, 6, 'a'], [8, 4, 6], [10]].map(x => firstTwoMax(...x)));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that accepts up to n arguments, ignoring any additional arguments</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
543,JavaScript: Decode a string of data which has been encoded using base-64 encoding,Write a JavaScript program to decode a string of data which has been encoded using base-64 encoding.Note: Create a Buffer for the given string with base-64 encoding and use Buffer.toString('binary') to return the decoded string.,"//#Source https://bit.ly/2neWfJ2 
const atob = str => new Buffer(str, 'base64').toString('binary');
console.log(atob('Zm9vYmFy'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Decode a string of data which has been encoded using base-64 encoding</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
544,JavaScript: Evaluate the binomial coefficient of two integers n and k,Write a JavaScript program to evaluate the binomial coefficient of two integers n and k.,"//#Source https://bit.ly/2neWfJ2 
const binomialCoefficient = (n, k) => {
  if (Number.isNaN(n) || Number.isNaN(k)) return NaN;
  if (k < 0 || k > n) return 0;
  if (k === 0 || k === n) return 1;
  if (k === 1 || k === n - 1) return n;
  if (n - k < k) k = n - k;
  let res = n;
  for (let j = 2; j <= k; j++) res *= (n - j + 1) / j;
  return Math.round(res);
};
console.log(binomialCoefficient(8, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Evaluate the binomial coefficient of two integers n and k</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
545,"JavaScript: Return true if the bottom of the page is visible, false otherwise","Write a JavaScript program that will return true if the bottom of the page is visible, false otherwise.","//#Source https://bit.ly/2neWfJ2 
const bottomVisible = () =>
  document.documentElement.clientHeight + window.scrollY >=
  (document.documentElement.scrollHeight || document.documentElement.clientHeight);

console.log(bottomVisible());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the bottom of the page is visible, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
546,JavaScript: Create a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data,Write a JavaScript program to create a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data.,"//#Source https://bit.ly/2neWfJ2 
const btoa = str => new Buffer(str, 'binary').toString('base64');
console.log(btoa('foobar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a base-64 encoded ASCII string from a String object in which each character in the string is treated as a byte of binary data</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
547,JavaScript: Capitalize the first letter of a string,Write a JavaScript program to capitalize the first letter of a string.,"//#Source https://bit.ly/2neWfJ2 
const capitalize = ([first, ...rest], lowerRest = false) =>
  first.toUpperCase() + (lowerRest ? rest.join('').toLowerCase() : rest.join(''));

console.log(capitalize('fooBar')); 
console.log(capitalize('fooBar', true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Capitalize the first letter of a string</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
548,JavaScript: Capitalize the first letter of every word in a string,Write a JavaScript program to capitalize the first letter of every word in a string.,"//#Source https://bit.ly/2neWfJ2 
const capitalizeEveryWord = str => str.replace(/\b[a-z]/g, char => char.toUpperCase());
console.log(capitalizeEveryWord('hello world!'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Capitalize the first letter of every word in a string</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
549,JavaScript: Chunk an array into smaller arrays of a specified size,Write a JavaScript program to chunk an array into smaller arrays of a specified size.,"//#Source https://bit.ly/2neWfJ2 
const chunk = (arr, size) =>
  Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>
    arr.slice(i * size, i * size + size)
  );
console.log(chunk([1, 2, 3, 4, 5], 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Chunk an array into smaller arrays of a specified size</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
550,JavaScript: Clamp number within the inclusive range specified by the given boundary values a and b,Write a JavaScript program to clamp number within the inclusive range specified by the given boundary values a and b.,"//#Source https://bit.ly/2neWfJ2 
const clampNumber = (num, a, b) => Math.max(Math.min(num, Math.max(a, b)), Math.min(a, b));
console.log(clampNumber(2, 3, 5));
console.log(clampNumber(1, -1, -5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Clamp number within the inclusive range specified by the given boundary values a and b</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
512,JavaScript: Log the name of a function,Write a JavaScript program to log the name of a function.,"//#Source https://bit.ly/2neWfJ2 
const functionName = fn => (console.debug(fn.name), fn);
console.log(functionName(Math.max));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Log the name of a function</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
299,"JavaScript: Return the minimum-maximum value of an array, after applying the provided function to set comparing rule","Write a JavaScript program to return the minimum-maximum value of an array, after applying the provided function to set comparing rule.","//#Source https://bit.ly/2neWfJ2 
const reduce_Which = (arr, comparator = (a, b) => a - b) =>
  arr.reduce((a, b) => (comparator(a, b) >= 0 ? b : a));
console.log(reduce_Which([1, 3, 2])); 
console.log(reduce_Which([10, 30, 20], (a, b) => b - a));  
console.log(reduce_Which(
  [{ name: 'Kevin', age: 16 }, { name: 'John', age: 20 }, { name: 'Ani', age: 19 }],
  (a, b) => a.age - b.age)); 
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return the minimum-maximum value of an array, after applying the provided function to set comparing rule</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
404,JavaScript: Convert a string to snake case,"Write a JavaScript program to convert a string to snake case.Note: Break the string into words and combine them adding _ as a separator, using a regexp.","//#Source https://bit.ly/2neWfJ2
const toSnakeCase = str =>
  str &&
  str
    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
    .map(x => x.toLowerCase())
    .join('_');

console.log(toSnakeCase('camelCase'));
console.log(toSnakeCase('some text'));
console.log(toSnakeCase('some-mixed_string With spaces_underscores-and-hyphens'));
console.log(toSnakeCase('AllThe-small Things'));
console.log(toSnakeCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a string to snake case</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
407,JavaScript: Convert a string to kebab case,"Write a JavaScript program to convert a string to kebab case.Note: Break the string into words and combine them adding - as a separator, using a regexp.","//#Source https://bit.ly/2neWfJ2 
const toKebabCase = str =>
  str &&
  str
    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
    .map(x => x.toLowerCase())
    .join('-');

console.log(toKebabCase('camelCase'));
console.log(toKebabCase('some text'));
console.log(toKebabCase('some-mixed_string With spaces_underscores-and-hyphens'));
console.log(toKebabCase('AllThe-small Things'));
console.log(toKebabCase('IAmListeningToFMWhileLoadingDifferentURLOnMyBrowserAndAlsoEditingSomeXMLAndHTML'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a string to kebab case</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
466,JavaScript: Join all elements of an array into a string and returns this string,Write a JavaScript program to join all elements of an array into a string and returns this string.Uses a separator and an end separator.,"//#Source https://bit.ly/2neWfJ2 
const join = (arr, separator = ',', end = separator) =>
  arr.reduce(
    (acc, val, i) =>
      i === arr.length - 2
        ? acc + val + end
        : i === arr.length - 1
          ? acc + val
          : acc + val + separator,
    ''
  );
console.log(join(['pen', 'pineapple', 'apple', 'pen'], ',', '&'));
console.log(join(['pen', 'pineapple', 'apple', 'pen'], ','));
console.log(join(['pen', 'pineapple', 'apple', 'pen']));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Join all elements of an array into a string and returns this string</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
286,JavaScript: Copy a string to the clipboard,Write a JavaScript program to copy a string to the clipboard.,"//#Source https://bit.ly/2neWfJ2
  const copy_to_Clipboard = str => {
  const el = document.createElement('textarea');
  el.value = str;
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  const selected =
    document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
  if (selected) {
    document.getSelection().removeAllRanges();
    document.getSelection().addRange(selected);
  }
};
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Copy a string to the clipboard</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
294,JavaScript: Extract out the values at the specified indexes from a specified array,Write a JavaScript program to?extract out the values at the specified indexes from a specified array.,"//#Source https://bit.ly/2neWfJ2 
const pull_at_Index = (arr, pullArr) => {
  let removed = [];
  let pulled = arr
    .map((v, i) => (pullArr.includes(i) ? removed.push(v) : v))
    .filter((v, i) => !pullArr.includes(i));
  arr.length = 0;
  pulled.forEach(v => arr.push(v));
  return removed;
};
let arra1 = ['a', 'b', 'c', 'd', 'e', 'f'];
console.log(pull_at_Index(arra1, [1, 3]));
let arra2 =  [1, 2, 3, 4, 5, 6, 7];
console.log(pull_at_Index(arra2, [4]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Extract out the values at the specified indexes from a specified array</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
298,JavaScript: Replace the names of multiple object keys with the values provided,Write a JavaScript program to replace the names of multiple object keys with the values provided.,"//#Source https://bit.ly/2neWfJ2 
const rename_keys = (keysMap, obj) =>
  Object.keys(obj).reduce(
    (acc, key) => ({
      ...acc,
      ...{ [keysMap[key] || key]: obj[key] }
    }),
    {}
  );
const obj = { name: 'Bobo', job: 'Programmer', shoeSize: 100 };
console.log(""Original Object"");
console.log(obj);
console.log(""-------------------------------------"");
result = rename_keys({ name: 'firstName', job: 'Actor' }, obj);
console.log(""New Object"");
console.log(result);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Replace the names of multiple object keys with the values provided</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
332,JavaScript: Get an array of function property names from own enumerable properties of an object,Write a JavaScript program to get an array of function property names from own (and optionally inherited) enumerable properties of an object.,"//#Source https://bit.ly/2neWfJ2 
const functions = (obj, inherited = false) =>
  (inherited
    ? [...Object.keys(obj), ...Object.keys(Object.getPrototypeOf(obj))]
    : Object.keys(obj)
  ).filter(key => typeof obj[key] === 'function');
function Foo() {
  this.a = () => 1;
  this.b = () => 2;
}
Foo.prototype.c = () => 3;
console.log(functions(new Foo()));
console.log(functions(new Foo(), true));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get an array of function property names from own enumerable properties of an object</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
344,JavaScript: Create a function that invokes the method at a given key of an object,"Write a JavaScript program to create a function that invokes the method at a given key of an object, optionally adding any additional supplied parameters to the beginning of the arguments.","//#Source https://bit.ly/2neWfJ2 
const bindKey = (context, fn, ...args) =>
  function() {
    return context[fn].apply(context, args.concat(...arguments));
  };

const freddy = {
  user: 'fred',
  greet: function(greeting, punctuation) {
    return greeting + ' ' + this.user + punctuation;
  }
};
const freddyBound = bindKey(freddy, 'greet');
console.log(freddyBound('hi', '!'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create a function that invokes the method at a given key of an object</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
353,JavaScript: Group the elements of an array based on the given function and returns the count of elements in each group,Write a JavaScript program to group the elements of an array based on the given function and returns the count of elements in each group.,"//#Source https://bit.ly/2neWfJ2 
const countBy = (arr, fn) =>
  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val, i) => {
    acc[val] = (acc[val] || 0) + 1;
    return acc;
  }, {});
console.log(countBy([6, 10, 100, 10], Math.sqrt));
console.log(countBy([6.1, 4.2, 6.3], Math.floor));
console.log(countBy(['one', 'two', 'three'], 'length'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Group the elements of an array based on the given function and returns the count of elements in each group</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
363,JavaScript: Take any number of iterable objects or objects with a length property and returns the longest one,Write a JavaScript program to take any number of iterable objects or objects with a length property and returns the longest one.,"//#Source https://bit.ly/2neWfJ2 
const longestItem = (...vals) => [...vals].sort((a, b) => b.length - a.length)[0];
console.log(longestItem('this', 'is', 'a', 'testcase'));
console.log(longestItem(...['a', 'ab', 'abc']));
console.log(longestItem(...['a', 'ab', 'abc'], 'abcd'));
console.log(longestItem([1, 2, 3], [1, 2], [1, 2, 3, 4, 5]));
console.log(longestItem([1, 2, 3], 'foobar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Take any number of iterable objects or objects with a length property and returns the longest one</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
368,JavaScript: Create an object with the same keys as the provided object and values generated by running the provided function for each value,Write a JavaScript program to create an object with the same keys as the provided object and values generated by running the provided function for each value.,"//#Source https://bit.ly/2neWfJ2 
const mapValues = (obj, fn) =>
  Object.keys(obj).reduce((acc, k) => {
    acc[k] = fn(obj[k], k, obj);
    return acc;
  }, {});
const users = {
  fred: { user: 'fred', age: 40 },
  pebbles: { user: 'pebbles', age: 1 }
};
console.log(mapValues(users, u => u.age));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Create an object with the same keys as the provided object and values generated by running the provided function for each value</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
382,JavaScript : Filter an array of objects based on a condition while also filtering out unspecified keys,Write a JavaScript program to filter an array of objects based on a condition while also filtering out unspecified keys.,"//#Source https://bit.ly/2neWfJ2 
const reducedFilter = (data, keys, fn) =>
  data.filter(fn).map(el =>
    keys.reduce((acc, key) => {
      acc[key] = el[key];
      return acc;
    }, {})
  );
const data = [
  {
    id: 1,
    name: 'john',
    age: 24
  },
  {
    id: 2,
    name: 'mike',
    age: 50
  }
];

console.log(reducedFilter(data, ['id', 'name'], item => item.age > 24));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Filter an array of objects based on a condition while also filtering out unspecified keys</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Fundamental
417,"JavaScript: Get the symmetric difference between two given arrays, after applying the provided function to each array element of both","Write a JavaScript program to get the symmetric difference between two given arrays, after applying the provided function to each array element of both.","//#Source https://bit.ly/2neWfJ2 
const symmetricDifferenceBy = (a, b, fn) => {
  const sA = new Set(a.map(v => fn(v))),
    sB = new Set(b.map(v => fn(v)));
  return [...a.filter(x => !sB.has(fn(x))), ...b.filter(x => !sA.has(fn(x)))];
};
console.log(symmetricDifferenceBy([2.1, 1.2], [2.3, 3.4], Math.floor));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the symmetric difference between two given arrays, after applying the provided function to each array element of both</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
421,"JavaScript: Perform stable sorting of an array, preserving the initial indexes of items when their values are the same","Write a JavaScript program to perform stable sorting of an array, preserving the initial indexes of items when their values are the same. Do not mutate the original array, but returns a new array instead.","//#Source https://bit.ly/2neWfJ2 
const stableSort = (arr, compare) =>
  arr
    .map((item, index) => ({ item, index }))
    .sort((a, b) => compare(a.item, b.item) || a.index - b.index)
    .map(({ item }) => item);

const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
console.log(stableSort(arr, () => 0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Perform stable sorting of an array, preserving the initial indexes of items when their values are the same</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
426,JavaScript: Get the lowest index at which value should be inserted into array in order to maintain its sort order,Write a JavaScript program to get the lowest index at which value should be inserted into array in order to maintain its sort order.Note: Check if the array is sorted in descending order (loosely).,"//#Source https://bit.ly/2neWfJ2 
const sortedIndex = (arr, n) => {
  const isDescending = arr[0] > arr[arr.length - 1];
  const index = arr.findIndex(el => (isDescending ? n >= el : n <= el));
  return index === -1 ? arr.length : index;
};

console.log(sortedIndex([5, 3, 2, 1], 4));
console.log(sortedIndex([30, 50], 40));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the lowest index at which value should be inserted into array in order to maintain its sort order</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
440,"JavaScript: Apply a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values","Write a JavaScript program to apply a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values.","//#Source https://bit.ly/2neWfJ2 
const reduceSuccessive = (arr, fn, acc) =>
  arr.reduce((res, val, i, arr) => (res.push(fn(res.slice(-1)[0], val, i, arr)), res), [acc]);

console.log(reduceSuccessive([1, 2, 3, 4, 5, 6], (acc, val) => acc + val, 0));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Apply a function against an accumulator and each element in the array (from left to right), returning an array of successively reduced values</title>
</head>
<body>

</body>
</html>
","Hard
",高级,JavaScript Fundamental
445,JavaScript: Mutate the original array to filter out the values specified,Write a JavaScript program to mutate the original array to filter out the values specified. Returns the removed elements.,"//#Source https://bit.ly/2neWfJ2 
const pullAtValue = (arr, pullArr) => {
  let removed = [],
    pushToRemove = arr.forEach((v, i) => (pullArr.includes(v) ? removed.push(v) : v)),
    mutateTo = arr.filter((v, i) => !pullArr.includes(v));
  arr.length = 0;
  mutateTo.forEach(v => arr.push(v));
  return removed;
};
let myArray = ['a', 'b', 'c', 'd'];
let pulled = pullAtValue(myArray, ['b', 'd']); 
console.log('Original data',myArray);
console.log('Pulled data',pulled);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Mutate the original array to  filter out the values specified</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
490,"JavaScript: Check whether a given string is an anagram of another string (case-insensitive, ignores spaces, punctuation and special characters)","Write a JavaScript program to Check whether a given string is an anagram of another string (case-insensitive, ignores spaces, punctuation and special characters).","//#Source https://bit.ly/2neWfJ2 
const isAnagram = (str1, str2) => {
  const normalize = str =>
    str
      .toLowerCase()
      .replace(/[^a-z0-9]/gi, '')
      .split('')
      .sort()
      .join('');
  return normalize(str1) === normalize(str2);
};
console.log(isAnagram('iceman', 'cinema')); 
console.log(isAnagram('madam', 'madam'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Check whether a given string is an anagram of another string</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Fundamental
524,"JavaScript: Return true if the parent element contains the child element, false otherwise","Write a JavaScript program that will return true if the parent element contains the child element, false otherwise.Note: Check that parent is not the same element as child, use parent.contains(child) to check if the parent element contains the child element.","//#Source https://bit.ly/2neWfJ2 
const elementContains = (parent, child) => parent !== child && parent.contains(child);

console.log(elementContains(document.querySelector('head'), document.querySelector('title')));
console.log(elementContains(document.querySelector('body'), document.querySelector('body')));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Return true if the parent element contains the child element, false otherwise</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
533,JavaScript: Get the current URL,Write a JavaScript program to get the current URL.,"//#Source https://bit.ly/2neWfJ2 
const currentURL = () => window.location.href;
console.log(currentURL());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Get the current URL</title>
</head>
<body>

</body>
</html>
",未知,高级,JavaScript Fundamental
552,JavaScript: Find the sign of product of three numbers,"
<i>Sample numbers</i> : 3, -7, 2

  Output : The sign is -","var x=3;
var y=-7;
var z=2;
if (x>0 && y>0 && z>0)
{
       alert(""The sign is +"");
}
else if (x<0 && y<0 && z<0)
        {
          console.log(""The sign is +"");
        }
        else if (x>0 && y<0 && z<0)
        {
          console.log(""The sign is +"");
        }
        else if (x<0 && y>0 && z<0)
        {
          console.log(""The sign is +"");
        }
        else
        {
          console.log(""The sign is -"");
        }
		","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript conditional statement to find the sign of product of three numbers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
553,JavaScript: How to sort three numbers,"Write a JavaScript conditional statement to sort three numbers. Display an alert box to show the result.
<i>Sample numbers</i>: 3, -7, 2


 Output : The sign is -","var x= 0;
var y=-1;
var z= 4;
if (x>y && x>z)
{
        if (y>z)
        {
            console.log(x + "", "" + y + "", "" +z);
        }
        else
        {
            console.log(x + "", "" + z + "", "" +y);
        }
}
else if (y>x && y >z)
{
        if (x>z)
        {
             console.log(y + "", "" + x + "", "" +z);
        }
        else
        {
             console.log(y + "", "" + z + "", "" +x);
        }
}
else if (z>x && z>y)
{
        if (x>y)
        {
            console.log(z + "", "" + x + "", "" +y);
        }
        else
        {
            console.log(z + "", "" + y + "", "" +x);
        }
}        
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript conditional statement to sort three numbers</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
554,JavaScript: Find the largest of five numbers,"Write a JavaScript conditional statement to find the largest of five numbers. Display an alert box to show the result.
<i>Sample numbers</i> : -5, -2, -6, 0, -1

  Output : 0","a=-5;
b=-2;
c=-6;
d= 0;
f=-1;
if (a>b && a>c && a>d && a>f)
{
    console.log(a);
}
else if (b>a && b>c && b>d && b>f)
{
    console.log(b);
}
else if (c>a && c>b && c>d && c>f)
{
    console.log(c);
}
else if (d>a && d>c && d>b && d>f)
{
    console.log(d);
}
else
{
    console.log(f);
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript conditional statement to find the largest of five numbers</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
555,JavaScript: For loop that will iterate from 0 to 15 to find even and odd numbers,"Write a JavaScript for loop that will iterate from 0 to 15. For each iteration, it will check if the current number is odd or even, and display a message to the screen.
Sample Output:


""0 is even""

""1 is odd""

""2 is even""

----------

----------","
for (var x=0; x<=15; x++) {
        if (x === 0) {
                console.log(x +  "" is even"");
        }
        else if (x % 2 === 0) {
                console.log(x + "" is even"");   
        }
        else {
                console.log(x + "" is odd"");
        }
}
","
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>For loop that will iterate from 0 to 15</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
557,JavaScript: Iterates the integers from 1 to 100,Write a JavaScript program which iterates the integers from 1 to 100. But for multiples of three print "Fizz" instead of the number and for the multiples of five print "Buzz". For numbers which are multiples of both three and five print "FizzBuzz".,"for ( var i = 1; i <= 100; i++ )
{
  if ( i%3 === 0 && i%5 === 0 )
  {
    console.log( i + "" FizzBuzz"" );
  }
  else if ( i%3 === 0 ) 
  {
    console.log(i+ "" Fizz"" );
  }
  else if ( i%5 === 0 ) 
  {
    console.log(i+ "" Buzz"" );
  }
  else
  {
    console.log(i);
  }
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript FizzBuzz program</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
556,JavaScript: Compute the average and grade of the students,"Write a JavaScript program which compute, the average marks of the following students Then, this average is used to determine the corresponding grade.","var students = [['David', 80], ['Vinoth', 77], ['Divya', 88], ['Ishitha', 95], ['Thomas', 68]];

var Avgmarks = 0;

for (var i=0; i < students.length; i++) {
        Avgmarks += students[i][1];
        var avg = (Avgmarks/students.length);
}

console.log(""Average grade: "" + (Avgmarks)/students.length);

        if (avg < 60){
          console.log(""Grade : F"");      
          } 
        else if (avg < 70) {
                console.log(""Grade : D""); 
                  } 
        else if (avg < 80) 
             {
                console.log(""Grade : C""); 
        } else if (avg < 90) {
                console.log(""Grade : B""); 
        } else if (avg < 100) {
                console.log(""Grade : A""); 
}
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the average marks and grade</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
558,JavaScript: Find and print the first 5 happy numbers,"Happy Numbers:According to Wikipedia a happy number is defined by the following process : ""Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers, while those that do not end in 1 are unhappy numbers (or sad numbers)"". Write a JavaScript program to find and print the first 5 happy numbers.","function happy_number(num) 
{
    var m, n ;
    var c = [] ;
 
    while(num != 1 && c[num] !== true) 
    {
        c[num] = true ;
        m = 0 ;
        while (num > 0) {
            n = num % 10 ;
            m += n * n ;
            num = (num  - n) / 10 ;
        }
        num = m ;
    }
    return (num == 1) ;
}
 
var cnt = 5;
var num = 1;
var f5 = ''; 
while(cnt-- > 0) 
{
    while(!happy_number(num))
        num++ ;
f5 = f5+(num + "", "") ;

    num++ ;
}
console.log('First 5 happy numbers are : '+f5);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Happy Number</title>
</head>
<body>
  
</body>
</html>
","Medium
",初级,JavaScript Conditional Statements and loops
559,JavaScript: Find the armstrong numbers of 3 digits,"Write a JavaScript program to find the armstrong numbers of 3 digits.Note : An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself. For example, 371 is an Armstrong number since 3**3 + 7**3 + 1**3 = 371. ","function three_digit_armstrong_number() 
{
 for (var i = 1; i < 10; ++i) 
 {
   for (var j = 0; j < 10; ++j) 
     {
        for (var k = 0; k < 10; ++k)
        {
          var pow = (Math.pow(i,3) + Math.pow(j,3) + Math.pow(k,3));
          var plus = (i * 100 + j * 10 +  k);
          if (pow == plus) 
           {     
             console.log(pow);
            }
         }
       }
    }
  }
three_digit_armstrong_number();
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Three digit armstrong numbers</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
560,"JavaScript: Construct a pattern, using a nested for loop","Write a JavaScript program to construct the following pattern, using a nested for loop.","
var x,y,chr;
for(x=1; x <=6; x++)
{
   for (y=1; y < x; y++)
     {
    chr=chr+(""*"");        
      }
 console.log(chr);
 chr='';    
}
","
<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JS nested for loop example</title>
</head>
<body>
  
</body>
</html>
","Medium
",初级,JavaScript Conditional Statements and loops
561,JavaScript: Compute the greatest common divisor (GCD) of two positive integers,Write a JavaScript program to compute the greatest common divisor (GCD) of two positive integers.,"var a = 2154; //First number
var b = 458;  //Second number 
var gcd;
while (a!=b)
{
	if (a>b)
	{
		a = a -b;
	}
	else
	{
		b = b - a;
	}
}
gcd = a;
console.log(gcd);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>compute the greatest common divisor (GCD) of two positive integers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
562,JavaScript: Sum the multiples of 3 and 5 under 1000,Write a JavaScript program to sum the multiples of 3 and 5 under 1000.,"var sum = 0;
for (var x = 0; x < 1000; x++)
{
    if (x % 3 === 0 || x % 5 === 0)
    {
       sum += x;
    }
}
console.log(sum);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Sum the multiples of 3 and 5 under 1000</title>
</head>
<body>
</body>
</html>
","Medium
",初级,JavaScript Conditional Statements and loops
551,JavaScript: Accept two integers and display the larger,Write a JavaScript program that accept two integers and display the larger.,"var num1, num2;
num1 = window.prompt(""Input the First integer"", ""0"");
num2 = window.prompt(""Input the second integer"", ""0"");
                                                 
if(parseInt(num1, 10) > parseInt(num2, 10)) 
  { 
  console.log(""The larger of ""+ num1+ "" and ""+ num2+ "" is ""+ num1+ ""."");
  }   
else
  if(parseInt(num2, 10) > parseInt(num1, 10)) 
  {
  console.log(""The larger of ""+ num1+"" and ""+ num2+ "" is ""+ num2+ ""."");
  }                  
else
  {
   console.log(""The values ""+ num1+ "" and ""+num2+ "" are equal."");
  }
  ","<!DOCTYPE html> 
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript program that accept two integers and display the larger</title>
</head>
<body>
  
</body>
</html>
","Easy
",初级,JavaScript Conditional Statements and loops
563,JavaScript: Convert a number from one base to another,Write a JavaScript function to convert a number from one base to another.,"var base_convert = function(number, initial_base, change_base) {
   if ((initial_base && change_base) <2 || (initial_base && change_base)>36)
    return 'Base between 2 and 36';
   
    return parseInt(number + '', initial_base)
    .toString(change_base);
}

console.log(base_convert('E164',16,8));
console.log(base_convert(1000,2,8));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Base convert</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
564,JavaScript: Convert a binary number to a decimal number,"Write a JavaScript function to convert a binary number to a decimal number.Test Data:
console.log(bin_to_dec('110011'));
console.log(bin_to_dec('100'));
51
4","function bin_to_dec(bstr) { 
    return parseInt((bstr + '')
    .replace(/[^01]/gi, ''), 2);
}
console.log(bin_to_dec('110011'));
console.log(bin_to_dec('100'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Binary number to a decimal number</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
565,"JavaScript: Convert a decimal number to binary, hexadecimal or octal number","Write a JavaScript function to convert a decimal number to binary, hexadecimal or octal number.
 Test Data:

console.log(dec_to_bho(120,'B')); 

console.log(dec_to_bho(120,'H')); 

console.log(dec_to_bho(120,'O'));

""1111000"" 

""78"" 

""170""","dec_to_bho  = function(n, base) {
 
    if (n < 0) {
      n = 0xFFFFFFFF + n + 1;
     } 
switch (base)  
{  
case 'B':  
return parseInt(n, 10).toString(2);
break;  
case 'H':  
return parseInt(n, 10).toString(16);
break;  
case 'O':  
return parseInt(n, 10).toString(8);
break;  
default:  
return(""Wrong input........."");  
}  
}

console.log(dec_to_bho(120,'B'));
console.log(dec_to_bho(120,'H'));
console.log(dec_to_bho(120,'O'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Convert a decimal number to binary, hexadecimal or octal number</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
566,JavaScript: Generate a random integer,"Write a JavaScript function to generate a random integer.
Test Data :

console.log(rand(20,1)); 

console.log(rand(1,10)); 

console.log(rand(6)); 

console.log(rand()); 

15 

5 

1 

0","rand = function(min, max) {
  if (min==null && max==null)
    return 0;    
  
  if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };
 console.log(rand(20,1));
 console.log(rand(1,10));
 console.log(rand(6));
 console.log(rand());
 ","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Javascript random function</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
567,JavaScript: Format a number up to specified decimal places,"Write a JavaScript function to format a number up to specified decimal places.
Test Data :

console.log(decimals(2.100212, 2));

console.log(decimals(2.100212, 3));

console.log(decimals(2100, 2));

""2.10"" 

""2.100"" 

""2100.00""","function decimals(n, d) {
 if ((typeof n !== 'number') || (typeof d !== 'number'))
   return false;
    	n = parseFloat(n) || 0;
	return n.toFixed(d);
	}
console.log(decimals(2.100212, 2));
console.log(decimals(2.100212, 3));
console.log(decimals(2100, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
 <title>JS Bin</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
568,JavaScript: Find the highest value in an array,"Write a JavaScript function to find the highest value in an array.
Test Data :

console.log(max([12,34,56,1]));

console.log(max([-12,-34,0,-56,-1]));

56 

0","function max(input) {
     if (toString.call(input) !== ""[object Array]"")  
       return false;
  return Math.max.apply(null, input);
	}

console.log(max([12,34,56,1]));
console.log(max([-12,-34,0,-56,-1]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find the highest value in an array</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
569,JavaScript: Find the lowest value in an array,"Write a JavaScript function to find the lowest value in an array.
Test Data :

console.log(min([12,34,56,1])); 

console.log(min([-12,-34,0,-56,-1]));

1 

-56","function min(input) {
     if (toString.call(input) !== ""[object Array]"")  
       return false;
  return Math.min.apply(null, input);
	}

console.log(min([12,34,56,1]));
console.log(min([-12,-34,0,-56,-1]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
<title>Javascript random function</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
570,JavaScript: Greatest common divisor (gcd) of two integers,"
Write a JavaScript function to get the greatest common divisor (gcd) of two integers.

<strong>Note:</strong> 

According to Wikipedia - In mathematics, the greatest common divisor (gcd) of two or more integers, when at least one of them is not zero, is the largest positive integer that divides the numbers without a remainder. For example, the GCD of 8 and 12 is 4.
Test Data :

console.log(gcd_two_numbers(12, 13)); 

console.log(gcd_two_numbers(9, 3)); 

Output :

1 

3","function gcd_two_numbers(x, y) {
  if ((typeof x !== 'number') || (typeof y !== 'number')) 
    return false;
  x = Math.abs(x);
  y = Math.abs(y);
  while(y) {
    var t = y;
    y = x % y;
    x = t;
  }
  return x;
}

console.log(gcd_two_numbers(12, 13));
console.log(gcd_two_numbers(9, 3));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>GCD of two numbers</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
571,JavaScript: Find the Greatest Common Divisor or GCD of more than 2 integers,"Write a JavaScript function to find the GCD (greatest common divisor) of more than 2 integers.

Test Data:

console.log(gcd_more_than_two_numbers([3,15,27])); 

console.log(gcd_more_than_two_numbers([5,10,15,25]));

Output :

3


5","function gcd_more_than_two_numbers(input) {
  if (toString.call(input) !== ""[object Array]"")  
        return  false;  
  var len, a, b;
	len = input.length;
	if ( !len ) {
		return null;
	}
	a = input[ 0 ];
	for ( var i = 1; i < len; i++ ) {
		b = input[ i ];
		a = gcd_two_numbers( a, b );
	}
	return a;
}

function gcd_two_numbers(x, y) {
  if ((typeof x !== 'number') || (typeof y !== 'number')) 
    return false;
  x = Math.abs(x);
  y = Math.abs(y);
  while(y) {
    var t = y;
    y = x % y;
    x = t;
  }
  return x;
}
console.log(gcd_more_than_two_numbers([3,15,27]));
console.log(gcd_more_than_two_numbers([5,10,15,25]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>GCD (greatest common divisor) of more than 2 integers</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Math
572,JavaScript: Least common multiple (LCM) of two numbers,"
Write a JavaScript function to get the least common multiple (LCM) of two numbers.

<strong>Note :</strong>

According to Wikipedia - A common multiple is a number that is a multiple of two or more integers. The common multiples of 3 and 4 are 0, 12, 24, .... The least common multiple (LCM) of two numbers is the smallest number (not zero) that is a multiple of both.

Test Data:

console.log(lcm_two_numbers(3,15)); 

console.log(lcm_two_numbers(10,15));

Output  :

15 

30","function lcm_two_numbers(x, y) {
   if ((typeof x !== 'number') || (typeof y !== 'number')) 
    return false;
  return (!x || !y) ? 0 : Math.abs((x * y) / gcd_two_numbers(x, y));
}

function gcd_two_numbers(x, y) {
  x = Math.abs(x);
  y = Math.abs(y);
  while(y) {
    var t = y;
    y = x % y;
    x = t;
  }
  return x;
}
console.log(lcm_two_numbers(3,15));
console.log(lcm_two_numbers(10,15));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>LCM of two numbers</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
573,JavaScript: Least common multiple (LCM) of more than 2 integers,"Write a JavaScript function to get the least common multiple (LCM) of more than 2 integers.

Test Data :

console.log(lcm_more_than_two_numbers([100,90,80,7]));

console.log(lcm_more_than_two_numbers([5,10,15,25]));

Output  :

25200 

150","function lcm_more_than_two_numbers(input_array) {
    if (toString.call(input_array) !== ""[object Array]"")  
        return  false;  
 var r1 = 0, r2 = 0;
    var l = input_array.length;
    for(i=0;i<l;i++) {
        r1 = input_array[i] % input_array[i + 1];
        if(r1 === 0) {
            input_array[i + 1] = (input_array[i] * input_array[i+1]) / input_array[i + 1];
        }
        else {
            r2 = input_array[i + 1] % r1;
            if(r2 === 0) {
                input_array[i + 1] = (input_array[i] * input_array[i + 1]) / r1;
            }
            else {
                input_array[i+1] = (input_array[i] * input_array[i + 1]) / r2;
            }
        }
    }
    return input_array[l - 1];
}

console.log(lcm_more_than_two_numbers([100,90,80,7])); 
console.log(lcm_more_than_two_numbers([5,10,15,25]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>LCM more than two numbers</title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",初级,JavaScript Math
574,JavaScript: Find out if a number is a natural number or not,"Write a JavaScript function to find out if a number is a natural number or not.
Note: 

Natural numbers are whole numbers from 1 upwards : 1, 2, 3, and so on ...
or from 0 upwards in some area of mathematics: 0, 1, 2, 3 and so on ... 

No negative numbers and no fractions.

Test Data:

console.log(is_Natural(-15)); 

console.log(is_Natural(1)); 

console.log(is_Natural(10.22)); 

console.log(is_Natural(10/0));

Output:

false 

true 

false 

false",,"<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Checking for Natural Number</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
575,JavaScript: Test if a number is a power of 2,"
Write a <span style=""clear: both"">JavaScript</span> function to test if a number is a power of 2.
Test Data:

console.log(power_of_2(16)); 

console.log(power_of_2(18)); 

console.log(power_of_2(256));

Output:

true 

false 

true","function power_of_2(n) {
 if (typeof n !== 'number') 
      return 'Not a number'; 

    return n && (n & (n - 1)) === 0;
}

console.log(power_of_2(16));
console.log(power_of_2(18));
console.log(power_of_2(256));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Test if a number is a power of 2</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
577,JavaScript: Check whether a value is an integer or not,"Write a JavaScript function to check whether a value is an integer or not.

Test Data:

console.log(is_Int(23)); 

console.log(is_Int(4e2)); 

console.log(is_Int(NaN)); 

console.log(is_Int(23.75)); 

console.log(is_Int(-23));

Output  :

true 

true 

false 

false 

true","function is_Int(num) {
  
   if (typeof num !== 'number')
       return false; 
  
  return !isNaN(num) && 
         parseInt(Number(num)) == num && 
         !isNaN(parseInt(num, 10));
}
console.log(is_Int(23));
console.log(is_Int(4e2));
console.log(is_Int(NaN));
console.log(is_Int(23.75));
console.log(is_Int(-23));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Check whether a value is an integer or not</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
578,JavaScript: Check whether a variable is numeric or not ,"Write a JavaScript function to check whether a variable is numeric or not.

Test Data:

console.log(is_Numeric(12)); 

console.log(is_Numeric('abcd')); 

console.log(is_Numeric('12')); 

console.log(is_Numeric(' ')); 

console.log(is_Numeric(1.20)); 

console.log(is_Numeric(-200));

Output:

true 

false 

true 

false 

true 

true","function is_Numeric(num) {
  return !isNaN(parseFloat(num)) && isFinite(num);
}

console.log(is_Numeric(12));
console.log(is_Numeric('abcd'));
console.log(is_Numeric('12'));
console.log(is_Numeric(' '));
console.log(is_Numeric(1.20));
console.log(is_Numeric(-200));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Check whether a variable is numeric or not</title>
  </head>
  <body>
</body>
  </html>
  ","Hard
",初级,JavaScript Math
579,JavaScript: Calculate the sum of values in an array ,"Write a JavaScript function to calculate the sum of values in an array.

Test Data :

console.log(sum([1,2,3])); 

console.log(sum([100,-200,3])); 

console.log(sum([1,2,'a',3]));

Output  :

6 

-97

6","function sum(input){
             
 if (toString.call(input) !== ""[object Array]"")
    return false;
      
            var total =  0;
            for(var i=0;i<input.length;i++)
              {                  
                if(isNaN(input[i])){
                continue;
                 }
                  total += Number(input[i]);
               }
             return total;
            }
console.log(sum([1,2,3]));
console.log(sum([100,-200,3]));
console.log(sum([1,2,'a',3]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Sum of values in an array</title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",初级,JavaScript Math
581,JavaScript : Pythagorean function in JavaScript ,"Create a Pythagorean function in JavaScript.
Note : The Pythagorean Theorem tells us that the relationship in every right triangle is : c<sup>2</sup> = a<sup>2</sup> + b<sup>2</sup>, where c is the hypotenuse and a, b are two legs of the triangle. 

Test Data:

console.log(pythagorean_theorem(2, 4)); 

console.log(pythagorean_theorem(3, 4));

Output  :

4.47213595499958 

5","function pythagorean_theorem(x, y) {
  if ((typeof x !== 'number') || (typeof y !== 'number')) 
return false; 
		return Math.sqrt(x * x + y * y);
	}

console.log(pythagorean_theorem(2, 4));
console.log(pythagorean_theorem(3, 4));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Pythagorean Theorem</title>
</head>
<body></body>
</html>
","Easy
",初级,JavaScript Math
582,JavaScript: Evaluate binomial coefficients ,"Write a JavaScript program to evaluate binomial coefficients.
 Note: 

Binomial coefficient : According to Wikipedia - In mathematics, binomial coefficients are a family of positive integers that occur as coefficients in the binomial theorem. They are indexed by two nonnegative integers; the binomial coefficient indexed by n and k is usually written \tbinom nk. It is the coefficient of the x k term in the polynomial expansion of the binomial power (1 + x) n. Under suitable circumstances the value of the coefficient is given by the expression :Arranging binomial coefficients into rows for successive values of n, and in which k ranges from 0 to n, gives a triangular array called Pascal's triangle.
Test Data:

console.log(binomial(8,3)); 

console.log(binomial(10,2));

Output  :

56 

45","function binomial(n, k) {
     if ((typeof n !== 'number') || (typeof k !== 'number')) 
  return false; 
    var coeff = 1;
    for (var x = n-k+1; x <= n; x++) coeff *= x;
    for (x = 1; x <= k; x++) coeff /= x;
    return coeff;
}

console.log(binomial(8,3));
console.log(binomial(10,2));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Binomial coefficient</title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",初级,JavaScript Math
583,JavaScript: Convert an integer into a Roman Numeral ,Write a JavaScript function that Convert an integer into a Roman numeral.,"function integer_to_roman(num) {
if (typeof num !== 'number') 
return false; 

var digits = String(+num).split(""""),
key = ["""",""C"",""CC"",""CCC"",""CD"",""D"",""DC"",""DCC"",""DCCC"",""CM"",
"""",""X"",""XX"",""XXX"",""XL"",""L"",""LX"",""LXX"",""LXXX"",""XC"",
"""",""I"",""II"",""III"",""IV"",""V"",""VI"",""VII"",""VIII"",""IX""],
roman_num = """",
i = 3;
while (i--)
roman_num = (key[+digits.pop() + (i * 10)] || """") + roman_num;
return Array(+digits.join("""") + 1).join(""M"") + roman_num;
}

console.log(integer_to_roman(27));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function that Convert an integer into a Roman Numeral</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
584,JavaScript: Convert Roman Numeral to Integer ,Write a JavaScript function that Convert Roman Numeral to Integer.,"function roman_to_Int(str1) {
if(str1 == null) return -1;
var num = char_to_int(str1.charAt(0));
var pre, curr;

for(var i = 1; i < str1.length; i++){
curr = char_to_int(str1.charAt(i));
pre = char_to_int(str1.charAt(i-1));
if(curr <= pre){
num += curr;
} else {
num = num - pre*2 + curr;
}
}

return num;
}

function char_to_int(c){
switch (c){
case 'I': return 1;
case 'V': return 5;
case 'X': return 10;
case 'L': return 50;
case 'C': return 100;
case 'D': return 500;
case 'M': return 1000;
default: return -1;
}
}
console.log(roman_to_Int('XXVI'));
console.log(roman_to_Int('CI'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function that Convert Roman Numeral to Integer</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
585,JavaScript: Function to create a UUID identifier ,"Write a JavaScript function to create a UUID identifier.
Note : 

According to Wikipedia - A universally unique identifier (UUID) is an identifier standard used in software construction. A UUID is simply a 128-bit value. The meaning of each bit is defined by any of several variants. For human-readable display, many systems use a canonical format using hexadecimal text with inserted hyphen characters. For example : de305d54-75b4-431b-adb2-eb6b9e546014","function create_UUID(){
    var dt = new Date().getTime();
    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = (dt + Math.random()*16)%16 | 0;
        dt = Math.floor(dt/16);
        return (c=='x' ? r :(r&0x3|0x8)).toString(16);
    });
    return uuid;
}

console.log(create_UUID());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to create a UUID</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
586,JavaScript: Round a number to a specified number of digits and strip extra zeros ,"Write a JavaScript function to round a number to a specified number of digits and strip extra zeros (if any).
Test Data : 

var a = -4.55555;

console.log(result);

-4.5556 

var a = 5.0001000;

console.log(result);

5.0001","//var a = -1.1230000;
//var a = 0.0000009999999;
//var a = 1.000000000;
//var a = -4.55555;
//var a = 5.0001000;
var a = 1.1234000;

var result = parseFloat(a.toFixed(4));
console.log(result);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to round a number to a specified number of digitsand strip extra zeros (if any).</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
588,JavaScript: Calculate the nth root of a number ,"Write a JavaScript function to calculate the nth root of a number.
Test Data : 

console.log(nthroot(64, 2)); 

8

console.log(nthroot(64, -2)); 

0.125","function nthroot(x, n)
   {
    ng = n % 2;
    if((ng == 1) || x<0)
       x = -x;
    var r = Math.pow(x, 1 / n);
    n = Math.pow(r, n);
  
    if(Math.abs(x - n) < 1 && (x > 0 === n > 0))
      return ng ? -r : r; 
   }
console.log(nthroot(64, 2));
console.log(nthroot(64, -2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate the nth root of a number</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
589,JavaScript: Calculate degrees between 2 points with inverse Y axis ,"Write a JavaScript function to calculate degrees between 2 points with inverse Y axis.
Test Data : 

console.log(pointDirection(1, 0, 12, 0));

0

console.log(pointDirection(1, 0, 1, 10));

90","function pointDirection(x1, y1, x2, y2) {
    return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;
}

console.log(pointDirection(1, 0, 12, 0));
console.log(pointDirection(1, 0, 1, 10));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to calculate degrees between 2 points with inverse Y axis</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
590,JavaScript: Round up an integer value to the next multiple of 5 ,"Write a JavaScript function to round up an integer value to the next multiple of 5.
Test Data: 

console.log(int_round5(32)); 

35

console.log(int_round5(137));

140","function int_round5(num)
{
    return Math.ceil(num/5)*5;
}

console.log(int_round5(32));
console.log(int_round5(137));
console.log(int_round5(142));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to round up an integer value to the next multiple of 5</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
591,JavaScript: Convert a positive number to negative number ,"Write a JavaScript function to convert a positive number to negative number.
Test Data : 

console.log(pos_to_neg(15));

-15","function pos_to_neg(num)
{
return -Math.abs(num);
}

console.log(pos_to_neg(15));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert a positive number to negative number.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
592,JavaScript: Cast a square root of a number to an integer ,"Write a JavaScript function to cast a square root of a number to an integer.
Test Data: 

console.log(sqrt_to_int(17));

4","function sqrt_to_int(num)
{
return parseInt(Math.sqrt(num)+"""");
}

console.log(sqrt_to_int(17));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to cast a square root of a number to an integer.</title>
</head>
<body>

</body>
</html>
","Hard
",初级,JavaScript Math
593,JavaScript: Get the highest number from three different numbers ,"Write a JavaScript function to get the highest number from three different numbers.
Test Data: 

console.log(highest_of_three(-5, 4, 2));

4 ","function highest_of_three(num1, num2, num3)
{
    return Math.max(num1, num2, num3);  
}

console.log(highest_of_three(-5, 4, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the highest number from three different numbers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
594,JavaScript: Calculate the percentage of a number ,"Write a JavaScript function to calculate the percentage (%) of a number.
Test Data: 

console.log(percentage(1000, 47.12));

471.2 ","function percentage(num, per)
{
  return (num/100)*per;
}
          
console.log(percentage(1000, 47.12));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to to calculate the percentage (%) of a number</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
595,JavaScript: Convert degrees to radians ,"Write a JavaScript function to convert degrees to radians.
Test Data : 

console.log(degrees_to_radians(45));

0.7853981633974483","function degrees_to_radians(degrees)
{
  var pi = Math.PI;
  return degrees * (pi/180);
}

console.log(degrees_to_radians(45));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert degrees to radians</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
596,JavaScript: Convert radians to degrees ,"Write a JavaScript function to convert radians to degrees.
Test Data :
console.log(radians_to_degrees(0.7853981633974483));

45","function radians_to_degrees(radians)
{
  var pi = Math.PI;
  return radians * (180/pi);
}
          
console.log(radians_to_degrees(0.7853981633974483));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert radians to degrees</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
597,JavaScript: The Pythagorean theorem ,"Write a JavaScript function for the Pythagorean theorem.
According to Wikipedia : In mathematics, the Pythagorean theorem, also known as Pythagoras' theorem, is a relation in Euclidean geometry among the three sides of a right triangle. It states that the square of the hypotenuse (the side opposite the right angle) is equal to the sum of the squares of the other two sides. The theorem can be written as an equation relating the lengths of the sides a, b and c, often called the ""Pythagorean equation"". 



Test Data : 

console.log(pythagorean(4, 3));

5 ","function pythagorean(sideA, sideB){
  return Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));
}

console.log(pythagorean(4, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function for the Pythagorean theorem</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
598,JavaScript: Return values that are powers of two ,"Write a JavaScript function which will return values that are powers of two.
Test Data : 

console.log(isPower_of_two(64));

true

console.log(isPower_of_two(94));

false ","function isPower_of_two(num)
  {
     return num && (num & (num - 1)) === 0;
}

console.log(isPower_of_two(64));  
console.log(isPower_of_two(94));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function which will return values that are powers of two</title>
</head>
<body>

</body>
</html>
","Hard
",初级,JavaScript Math
599,JavaScript: Limit a value inside a certain range ,"Write a JavaScript function to limit a value inside a certain range.
Note : If the value is higher than max it will return max. and if the value is smaller than min it will return the min.

Test Data : 

console.log(value_limit(7, 1, 12)); 

7

console.log(value_limit(-7, 0, 12)); 

0

console.log(value_limit(15, 0, 12));

12","function value_limit(val, min, max) {
  return val < min ? min : (val > max ? max : val);
}

console.log(value_limit(7, 1, 12));
console.log(value_limit(-7, 0, 12));
console.log(value_limit(15, 0, 12));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to limit a value inside a certain range.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
602,JavaScript: Create random background color ,Write a JavaScript function to create random background color.,"function random_bg_color() {
    var x = Math.floor(Math.random() * 256);
    var y = Math.floor(Math.random() * 256);
    var z = Math.floor(Math.random() * 256);
    var bgColor = ""rgb("" + x + "","" + y + "","" + z + "")"";
 console.log(bgColor);
  
    document.body.style.background = bgColor;
    }

random_bg_color();
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to create random background color</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
603,JavaScript: Count the digits of an integer ,Write a JavaScript function to count the digits of an integer.,"function digits_count(n) {
  var count = 0;
  if (n >= 1) ++count;

  while (n / 10 >= 1) {
    n /= 10;
    ++count;
  }

  return count;
}

console.log(digits_count(12112));

console.log(digits_count(457));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to count the digits of an integer.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
604,JavaScript: Calculate the combination of n and r ,"
Write a JavaScript function to calculate the combination of n and r. 

The formula is : n!/(r!*(n - r)!).
Test Data : 

console.log(combinations(6, 2)); 

15

console.log(combinations(5, 3));

10","function product_Range(a,b) {
  var prd = a,i = a;
 
  while (i++< b) {
    prd*=i;
  }
  return prd;
}


function combinations(n, r) 
{
  if (n==r) 
  {
    return 1;
  } 
  else 
  {
    r=(r < n-r) ? n-r : r;
    return product_Range(r+1, n)/product_Range(1,n-r);
  }
}


console.log(combinations(6, 2));
console.log(combinations(5, 3));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate the combination of n and r. The formula is : n!/(r!*(n - r)!)</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
606,JavaScript: Show the Hamming numbers ,"Write a JavaScript function to show the first twenty Hamming numbers.Hamming Numbers are numbers whose only prime factors are 2, 3 and 5.","function Hamming(n) {
        var succession = [1];
        var length = succession.length;
        var candidate = 2;
        while (length < n) {
            if (isHammingNumber(candidate)) {
                succession[length] = candidate;
                length++;
            }
            candidate++;
        }
        return succession;
  }
 function isHammingNumber(num) {
        while (num % 5 === 0) num /= 5;
        while (num % 3 === 0) num /= 3;
        while (num % 2 === 0) num /= 2;

        return num == 1;
    }

console.log(Hamming(20));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to show the Hamming numbers</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
607,JavaScript: Subtract elements from one another in an array ,Write a JavaScript function to subtract elements from one another in an array.,"function subtraction(arr) 
 {
  if (Object.prototype.toString.call(arr) === '[object Array]') {
    var total = arr[0];
    if (typeof (total) !== 'number') {
      return false;
    }
    for (var i = 1, length = arr.length; i < length; i++)
    {
      if (typeof (arr[i]) === 'number')
      {
        total -= arr[i];
      } 
      else 
      return false;
    }
    return total;
   } 
    else
     return false;
  }
console.log(subtraction([7,3, 2,-1]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to subtract elements from one another in array</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
608,JavaScript: Calculate the divisor and modulus of two integers ,Write a JavaScript function to calculate the divisor and modulus of two integers.,"function div_mod(a, b)
 {
  if (b <= 0) 
    throw new Error(""b cannot be zero. Undefined."");
  if (isInt(a) && !isInt(b))
    throw new Error(""A or B are not integers."");
  return [Math.floor(a / b), a % b];
}
function isInt(n) {
  return n % 1 === 0;
}
console.log(div_mod(17, 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate the divisor and modulus of two integers</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
609,JavaScript: Calculate the extended Euclid Algorithm or extended GCD ,"Write a JavaScript function to calculate the extended Euclid Algorithm or extended GCD.In mathematics, the Euclidean algorithm[a], or Euclid's algorithm, is an efficient method for computing the greatest common divisor (GCD) of two numbers, the largest number that divides both of them without leaving a remainder. It is named after the ancient Greek mathematician Euclid, who first described it in Euclid's Elements. It is an example of an algorithm, a step-by-step procedure for performing a calculation according to well-defined rules, and is one of the oldest algorithms in common use. It can be used to reduce fractions to their simplest form, and is a part of many other number-theoretic and cryptographic calculations.","function Euclid_gcd(a, b) {
  a = +a;
  b = +b;
  if (a !== a || b !== b) {
    return [NaN, NaN, NaN];
  }
  
  if (a === Infinity || a === -Infinity || b === Infinity || b === -Infinity) {
    return [Infinity, Infinity, Infinity];
  }
  // Checks if a or b are decimals
  if ((a % 1 !== 0) || (b % 1 !== 0)) {
    return false;
  }
  var signX = (a < 0) ? -1 : 1,
    signY = (b < 0) ? -1 : 1,
    x = 0,
    y = 1,
    u = 1,
    v = 0,
    q, r, m, n;
  a = Math.abs(a);
  b = Math.abs(b);

  while (a !== 0) {
    q = Math.floor(b / a);
    r = b % a;
    m = x - u * q;
    n = y - v * q;
    b = a;
    a = r;
    x = u;
    y = v;
    u = m;
    v = n;
  }
  return [b, signX * x, signY * y];
}

console.log(Euclid_gcd(17, 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate the extended Euclid Algorithm or extended GCD</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
610,JavaScript: Calculate the falling factorial of a number ,"Write a JavaScript function to calculate the falling factorial of a number.
Let x be a real number (but usually an integer).

Let k be a positive integer.

Then x to the (power of) k falling is:

<img alt=""kth falling factorial power of x"" src=""https://www.w3resource.com/w3r_images/falling-factorial.png"" style=""max-width:100%;display:block;height=auto""/>

This is called the kth falling factorial power of x.","function fallingFactorial(n, k) 
{
  var i = (n - k + 1),
    r = 1;
  if (n < 0) 
  {
    throw new Error(""n must be positive."");
  }
  if (k > n)
  {
    throw new Error(""k cannot be greater than n."");
  }
  while (i <= n) 
  {
    r *= i++;
  }
  return r;
}
console.log(fallingFactorial(10, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate the falling factorial of a number</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
611,JavaScript: Calculate Lanczos approximation gamma ,"Write a JavaScript function to calculate Lanczos approximation gamma.In mathematics, the Lanczos approximation is a method for computing the Gamma function numerically, published by Cornelius Lanczos in 1964. It is a practical alternative to the more popular Stirling's approximation for calculating the Gamma function with fixed precision.","function Lanczos_Gamma(num) 
{
  var p = [
    0.99999999999980993, 676.5203681218851, -1259.1392167224028,
    771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7
  ];
  var i;
  var g = 7;
  if (num < 0.5) return Math.PI / (Math.sin(Math.PI * num) * calculus.LanczosGamma(1 - num));
  num -= 1;
  var a = p[0];
  var t = num + g + 0.5;
  for (i = 1; i < p.length; i++) {
    a += p[i] / (num + i);
  }
  return Math.sqrt(2 * Math.PI) * Math.pow(t, num + 0.5) * Math.exp(-t) * a;
}
console.log(Lanczos_Gamma(5));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to calculate Lanczos approximation gamma</title>
</head>
<body>

</body>
</html>
",未知,初级,JavaScript Math
612,JavaScript: Add two complex numbers ,"
Write a JavaScript program to add two complex numbers.

A complex number is a number that can be expressed in the form a + bi, where a and b are real numbers and i is the imaginary unit, that satisfies the equation i<sup>2</sup> = ?1. In this expression, a is the real part and b is the imaginary part of the complex number.","function Complex(real, imaginary) {
  this.real = 0;
  this.imaginary = 0;
  this.real = (typeof real === 'undefined') ? this.real : parseFloat(real);
  this.imaginary = (typeof imaginary === 'undefined') ? this.imaginary : parseFloat(imaginary);
}
Complex.transform = function(num) {
  var complex;
  complex = (num instanceof Complex) ? num : complex;
  complex = (typeof num === 'number') ? new Complex(num, 0) : num;
  return complex;
};
function display_complex(re, im) {
  if(im === '0') return '' + re;
  if(re === 0) return '' + im + 'i';
  if(im < 0) return '' + re + im + 'i';
  return '' + re + '+' + im + 'i';
}
function complex_num_add(first, second) {
  var num1, num2;
  num1 = Complex.transform(first);
  num2 = Complex.transform(second);
  var real = num1.real + num2.real;
  var imaginary = num1.imaginary + num2.imaginary;
  return display_complex(real, imaginary);
}
 var a = new Complex(2, -7);
 var b = new Complex(4,  3);
console.log(complex_num_add(a,b));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to add two complex numbers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
613,JavaScript: Subtract two complex numbers ,"
Write a JavaScript program to subtract two complex numbers.

A complex number is a number that can be expressed in the form a + bi, where a and b are real numbers and i is the imaginary unit, that satisfies the equation i2 = ?1. In this expression, a is the real part and b is the imaginary part of the complex number.","function Complex(real, imaginary) {
  this.real = 0;
  this.imaginary = 0;
  this.real = (typeof real === 'undefined') ? this.real : parseFloat(real);
  this.imaginary = (typeof imaginary === 'undefined') ? this.imaginary : parseFloat(imaginary);
}
Complex.transform = function(num) {
  var complex;
  complex = (num instanceof Complex) ? num : complex;
  complex = (typeof num === 'number') ? new Complex(num, 0) : num;
  return complex;
};
function display_complex(re, im) {
  if(im === '0') return '' + re;
  if(re === 0) return '' + im + 'i';
  if(im < 0) return '' + re + im + 'i';
  return '' + re + '+' + im + 'i';
}
function complex_num_subtract(first, second) {
  var num1, num2;
  num1 = Complex.transform(first);
  num2 = Complex.transform(second);
  var real = num1.real - num2.real;
  var imaginary = num1.imaginary - num2.imaginary;
  return display_complex(real, imaginary);   
}
 var a = new Complex(2, -7);
 var b = new Complex(4,  3);
console.log(complex_num_subtract(a,b));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to subtract two complex numbers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
614,JavaScript: Multiply two complex numbers ,"
Write a JavaScript program to multiply two complex numbers.

A complex number is a number that can be expressed in the form a + bi, where a and b are real numbers and i is the imaginary unit, that satisfies the equation i2 = ?1. In this expression, a is the real part and b is the imaginary part of the complex number.","function Complex(real, imaginary) {
  this.real = 0;
  this.imaginary = 0;
  this.real = (typeof real === 'undefined') ? this.real : parseFloat(real);
  this.imaginary = (typeof imaginary === 'undefined') ? this.imaginary : parseFloat(imaginary);
}
Complex.transform = function(num) {
  var complex;
  complex = (num instanceof Complex) ? num : complex;
  complex = (typeof num === 'number') ? new Complex(num, 0) : num;
  return complex;
};
function display_complex(re, im) {
  if(im === '0') return '' + re;
  if(re === 0) return '' + im + 'i';
  if(im < 0) return '' + re + im + 'i';
  return '' + re + '+' + im + 'i';
}
function complex_num_multiply(first, second) {
  var num1, num2;
  num1 = Complex.transform(first);
  num2 = Complex.transform(second);
   var real = (num1.real * num2.real)-(num1.imaginary * num2.imaginary);
  var imaginary = (num1.real * num2.imaginary)+(num1.imaginary * num2.real); 
   return display_complex(real, imaginary);   
}
 var a = new Complex(2, -7);
 var b = new Complex(4,  3);
console.log(complex_num_multiply(a,b));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to multiply two complex numbers</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
615,JavaScript: Divide two complex numbers ,"
Write a JavaScript program to divide two complex numbers.

A complex number is a number that can be expressed in the form a + bi, where a and b are real numbers and i is the imaginary unit, that satisfies the equation i2 = ?1. In this expression, a is the real part and b is the imaginary part of the complex number.","function Complex(real, imaginary) {
  this.real = 0;
  this.imaginary = 0;
  this.real = (typeof real === 'undefined') ? this.real : parseFloat(real);
  this.imaginary = (typeof imaginary === 'undefined') ? this.imaginary : parseFloat(imaginary);
}
Complex.transform = function(num) {
  var complex;
  complex = (num instanceof Complex) ? num : complex;
  complex = (typeof num === 'number') ? new Complex(num, 0) : num;
  return complex;
};
function display_complex(re, im) {
  if(im === '0') return '' + re;
  if(re === 0) return '' + im + 'i';
  if(im < 0) return '' + re + im + 'i';
  return '' + re + '+' + im + 'i';
}
function complex_num_divide(first, second) {
  var num1, num2;
  num1 = Complex.transform(first);
  num2 = Complex.transform(second);
  var denom = num2.imaginary * num2.imaginary + num2.real * num2.real;
var real = (num1.real * num2.real + num1.imaginary * num2.imaginary) /denom;
var imaginary = (num2.real * num1.imaginary - num1.real * num2.imaginary) /denom; 
return display_complex(real, imaginary);   
}
 var a = new Complex(2, -7);
 var b = new Complex(4,  3);
console.log(complex_num_divide(a,b));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to divide two complex numbers</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
576,JavaScript: Round a number to a given specific decimal places,"Write a JavaScript function to round a number to a given decimal places.

Test Data:

console.log(precise_round(12.375,2)); 

console.log(precise_round(12.37499,2)); 

console.log(precise_round(-10.3079499, 3));

Output :

""12.38"" 

""12.37""

""-10.308""","function precise_round(num, dec){
 
  if ((typeof num !== 'number') || (typeof dec !== 'number')) 
return false; 

  var num_sign = num >= 0 ? 1 : -1;
    
  return (Math.round((num*Math.pow(10,dec))+(num_sign*0.0001))/Math.pow(10,dec)).toFixed(dec);
}


console.log(precise_round(12.375,2));
console.log(precise_round(12.37499,2));
console.log(precise_round(-10.3079499, 3));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Round a number to a given decimal places</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Math
580,JavaScript: Calculate the product of values in an array ,"Write a JavaScript function to calculate the product of values in an array.

Test Data:

console.log(product([1,2,3])); 

console.log(product([100,-200,3])); 

console.log(product([1,2,'a',3]));

Output:

6 

-60000 

6","function product(input){
 if (toString.call(input) !== ""[object Array]"")
    return false;
  
         var total   =   1;
  
       for(var i=0;i<input.length;i++){
               if(isNaN(input[i])){
                 continue;
               }
                total   *=  Number(input[i]);
            }
          return total;
        }
console.log(product([1,2,3]));
console.log(product([100,-200,3]));
console.log(product([1,2,'a',3]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Product of values in an array</title>
</head>
<body></body>
</html>
","Easy
",初级,JavaScript Math
587,"JavaScript: Currency math (add, subtract, multiply, division etc.) ","Write a JavaScript function to make currency math (add, subtract, multiply, division etc.).
Test Data : 

n1 = '$40.24', n2 = '$21.57';","var n1 = '$40.24';
var n2 = '$21.57';
var regp = /[^0-9.-]+/g;

console.log(parseFloat(n1.replace(regp, '')) +       parseFloat(n2.replace(regp, '')));

console.log(parseFloat(n1.replace(regp, '')) -         parseFloat(n2.replace(regp, '')));

console.log(parseFloat(n1.replace(regp, '')) *         parseFloat(n2.replace(regp, '')));

console.log(parseFloat(n1.replace(regp, '')) /         parseFloat(n2.replace(regp, '')));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to make currency math (add, subtract, multiply, division etc.).</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
600,JavaScript: Check if a number is a whole number or has a decimal place ,"Write a JavaScript function to check if a number is a whole number or has a decimal place.
Note : Whole Numbers are simply the numbers 0, 1, 2, 3, 4, 5, ... (and so on). No Fractions!

Test Data : 

console.log(number_test(25.66)); 

""Number has a decimal place.""

console.log(number_test(10));

""It is a whole number.""","function number_test(n)
{
   var result = (n - Math.floor(n)) !== 0; 
   
  if (result)
    return 'Number has a decimal place.';
   else
     return 'It is a whole number.';
  }

console.log(number_test(25.66));

console.log(number_test(10));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check if a number is a whole number or has a decimal place</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Math
601,JavaScript: Print an integer with commas as thousands separators ,"Write a JavaScript function to print an integer with commas as thousands separators.
Test Data:

console.log(thousands_separators(1000)); 

""1,000""

console.log(thousands_separators(10000.23)); 

""10,000.23""

console.log(thousands_separators(100000));

""100,000""","function thousands_separators(num)
  {
    var num_parts = num.toString().split(""."");
    num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, "","");
    return num_parts.join(""."");
  }

console.log(thousands_separators(1000));
console.log(thousands_separators(10000.23));
console.log(thousands_separators(100000));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to print an integer with commas as thousands separators</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
605,JavaScript: Get all prime numbers from 0 to a specified number ,"Write a JavaScript function to get all prime numbers from 0 to a specified number 
Test Data: 

console.log(primeFactorsTo(5)); 

[2, 3, 5]

console.log(primeFactorsTo(15));

[2, 3, 5, 7, 11, 13]","function primeFactorsTo(max)
{
    var store  = [], i, j, primes = [];
    for (i = 2; i <= max; ++i) 
    {
        if (!store [i]) 
          {
            primes.push(i);
            for (j = i << 1; j <= max; j += i) 
            {
                store[j] = true;
            }
        }
    }
    return primes;
}

console.log(primeFactorsTo(5));

console.log(primeFactorsTo(15));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get all prime numbers from 0 to num</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Math
617,JavaScript: Delete a property from an object and print before or after deleting ,"
Write a JavaScript program to delete the rollno property from the following object. Also print the object before or after deleting the property.

<i>Sample object</i>: 

var student = { 

name : ""David Rayy"", 

sclass : ""VI"", 

rollno : 12 };","var student =  { 
  name : ""David Rayy"", 
  sclass : ""VI"", 
  rollno : 12  };
console.log(student);
delete student.rollno;
console.log(student);
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Delete a property from an object</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Object
618,JavaScript: Find the length of an object ,"Write a JavaScript program to get the length of a JavaScript object.
<i>Sample object</i>:

var student = { 

name : ""David Rayy"", 

sclass : ""VI"", 

rollno : 12 }; ","//Write a JavaScript program to get the length of a JavaScript object.

Object.objsize = function(Myobj) {
    var osize = 0, key;
    for (key in Myobj) {
        if (Myobj.hasOwnProperty(key)) osize++;
    }
    return osize;
};

var student = { 
name : ""David Rayy"", 
sclass : ""VI"", 
rollno : 12 };

var objsize = Object.objsize(student);
console.log('Size of the current object : '+objsize);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript program to get the length of a JavaScript object.</title>
  </head>
  <body>
 </body>
  </html>
  ","Easy
",初级,JavaScript Object
619,JavaScript: Gather and display infromation from an object ,"Write a JavaScript program to display the reading status (i.e. display book name, author name and reading status) of the following books.","var library = [ 
    {
        title: 'Bill Gates',
        author: 'The Road Ahead',
        readingStatus: true
    },
    {
        title: 'Steve Jobs',
        author: 'Walter Isaacson',
        readingStatus: true
    },
    {
        title: 'Mockingjay: The Final Book of The Hunger Games',
        author: 'Suzanne Collins',
        readingStatus: false
    }];

for (var i = 0; i < library.length; i++) 
   {
    var book = ""'"" + library[i].title + ""'"" + ' by ' + library[i].author + ""."";
    if (library[i].readingStatus) {
      console.log(""Already read "" + book);
    } else
    {
     console.log(""You still need to read "" + book);
    }
   }
   ","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Reading status of a book library</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Object
620,JavaScript: Calculate the volume of a Cylinder ,"
Write a JavaScript program to get the volume of a Cylinder with four decimal places using object classes.

<i>Volume of a cylinder </i>: V = πr<sup>2</sup>h

where r is the radius and h is the height of the cylinder.","function Cylinder(cyl_height, cyl_diameter) {
  this.cyl_height = cyl_height;
  this.cyl_diameter = cyl_diameter;
}

Cylinder.prototype.Volume = function () {
  var radius = this.cyl_diameter / 2;
  return this.cyl_height * Math.PI * radius * radius;
};

var cyl = new Cylinder(7, 4);
// Volume of the cylinder with four decimal places.
console.log('volume =', cyl.Volume().toFixed(4));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Volume of a Cylinder</title>
</head>
<body>
</body>
</html>
","Easy
",初级,JavaScript Object
633,JavaScript: Check whether a specified value is a DOM element ,Write a JavaScript function to check whether a given value is a DOM element.,"function is_dom_element(obj) {
    return !!(obj && obj.nodeType === 1);
  }
console.log(is_dom_element(jQuery('body')[0]));
",,"Easy
",初级,JavaScript Object
622,JavaScript: Returns a subset of a string ,"
Write a JavaScript program which returns a subset of a string.

<i>Sample Data: </i>dog

Expected Output: [""d"", ""do"", ""dog"", ""o"", ""og"", ""g""]","String.prototype.sub_String = function() 
{
  var subset = [];
  for (var m = 0; m < this.length; m++) 
  {
    for (var n = m+1; n<this.length+1; n++) 
    {
      subset.push(this.slice(m,n));
    }
  }
  return subset;
};

console.log(""dog"".sub_String());
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Subset of a string</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Object
623,JavaScript: Create a clock and display the time in each second ,"
Write a JavaScript program to create a Clock.

Note: The output will come every second.

Expected Console Output:

""14:37:42"" 

""14:37:43""

""14:37:44""

""14:37:45"" 

""14:37:46"" 

""14:37:47""","function my_Clock() 
  {
  this.cur_date = new Date();
  this.hours = this.cur_date.getHours();
  this.minutes = this.cur_date.getMinutes();
  this.seconds = this.cur_date.getSeconds();
  }
my_Clock.prototype.run = function ()
  {
  setInterval(this.update.bind(this), 1000);
  };
my_Clock.prototype.update = function () 
  {
  this.updateTime(1);
  console.log(this.hours + "":"" + this.minutes + "":"" + this.seconds);
  };
my_Clock.prototype.updateTime = function (secs) 
  {
  this.seconds+= secs;
 if (this.seconds >= 60)
  {
  this.minutes++;
  this.seconds= 0;
  }
 if (this.minutes >= 60)
  {
  this.hours++;
  this.minutes=0;
  }
if (this.hours >= 24)
  {
  this.hours = 0;
  }
};
var clock = new my_Clock();
  clock.run();
  ","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Create a clock and display the time in each second </title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",初级,JavaScript Object
624,JavaScript: Calculate the area and perimeter of a circle ,Write a JavaScript program to calculate the area and perimeter of a circle. Create two methods to calculate the area and perimeter. The radius of the circle will be supplied by the user.,"function circle(radius)
{
    this.radius = radius;
  // area method
    this.area = function () 
    {
        return Math.PI * this.radius * this.radius;
    };
  // perimeter method
    this.perimeter = function ()
    {
        return 2*Math.PI*this.radius;
    };
}
var c = new circle(3);
console.log('Area =', c.area().toFixed(2));
console.log('perimeter =', c.perimeter().toFixed(2));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Area and Perimeter of a circle</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Object
625,JavaScript: Sort an array of JavaScript objects ,"
Write a JavaScript program to sort an array of JavaScript objects.



Sample Object: Expected Output:","var library = [ 
   {
       title: 'Bill Gates',
       author: 'The Road Ahead',
       libraryID: 1254
   },
   {
       title: 'Steve Jobs',
       author: 'Walter Isaacson',
       libraryID: 4264
   },
   {
       title: 'Mockingjay: The Final Book of The Hunger Games',
       author: 'Suzanne Collins',
       libraryID: 3245
   }];

var sort_by = function(field_name, reverse, initial){

   var key = initial ?
       function(x)
             {
               return initial(x[field_name]);
             } :
       function(x) 
             {
               return x[field_name];
             };

   reverse = !reverse ? 1 : -1;

   return function (x, y) {
       return x = key(x), y = key(y), reverse * ((x > y) - (y > x));
     } ;
};


var newobj = library.sort(sort_by('libraryID', true, parseInt));

console.log(newobj);
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript program to sort an array of JS objects</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
626,JavaScript: Print all the methods in an JavaScript object ,"
Write a JavaScript function to print all the methods in an JavaScript object.

Test Data:

console.log(all_properties(Array));

[""length"", ""name"", ""arguments"", ""caller"", ""prototype"", ""isArray"", ""observe"", ""unobserve""]","function FindAllMethods(obj) {
    return Object.getOwnPropertyNames(obj).filter(function(property) {
        return typeof obj[property] == ""function"";
    });
}
//above code finds methods only
//Following code finds both properties and methods 
console.log(FindAllMethods(Math));
console.log(FindAllMethods(Array));
function all_properties(obj) 
{
 return Object.getOwnPropertyNames(obj);
}

console.log(all_properties(Math));

console.log(all_properties(Array));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to display all methods in a object.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
627,JavaScript: Parse an URL ,Write a JavaScript function to parse an URL.,"function parse_URL(url) {
    var a = document.createElement('a');
    a.href = url;
    return {
        source: url,
        protocol: a.protocol.replace(':', ''),
        host: a.hostname,
        port: a.port,
        query: a.search,
        params: (function () {
            var ret = {},
                seg = a.search.replace(/^\?/, '').split('&'),
                len = seg.length,
                i = 0,
                s;
            for (; i < len; i++) {
                if (!seg[i]) {
                    continue;
                }
                s = seg[i].split('=');
                ret[s[0]] = s[1];
            }
            return ret;
        })(),
        file: (a.pathname.match(/\/([^\/?#]+)$/i) || [, ''])[1],
        hash: a.hash.replace('#', ''),
        path: a.pathname.replace(/^([^\/])/, '/$1'),
        relative: (a.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ''])[1],
        segments: a.pathname.replace(/^\//, '').split('/')
    };
}

console.log(parse_URL('https://github.com/pubnub/python/search?utf8=%E2%9C%93&q=python'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to parse an URL.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
628,JavaScript: Retrieve all the names of object's own and inherited properties ,Write a JavaScript function to retrieve all the names of object's own and inherited properties.,"function allKeys(obj) {
    if (!isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    return keys;
}
function isObject(obj) 
{
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }
function Student(name) {
  this.name = name;
}
Student.prototype.rollno = true;
console.log(allKeys(new Student(""Sara"")));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to retrieve all the names of object's own and inherited properties.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
629,JavaScript: Retrieve all the values of an object's properties ,Write a JavaScript function to retrieve all the values of an object's properties.,"function all_values(obj) {
    var keys = _keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  }
function _keys(obj) 
 {
    if (!isObject(obj)) return [];
    if (Object.keys) return Object.keys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  }
function isObject(obj)   
{  
    var type = typeof obj;  
    return type === 'function' || type === 'object' && !!obj;  
  } 
console.log(all_values({red: ""#FF0000"", green: ""#00FF00"", white: ""#FFFFFF""}));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to retrieve all the values of an object's properties.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
630,JavaScript: Convert an object into a list of pairs ,"Write a JavaScript function to convert an object into a list of '[key, value]' pairs.","function key_value_pairs(obj) 
   {
    var keys = _keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) 
    {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  }

function _keys(obj) 
  {
    if (!isObject(obj)) return [];
    if (Object.keys) return Object.keys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  }
function isObject(obj) 
 {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }
console.log(key_value_pairs({red: ""#FF0000"", green: ""#00FF00"", white: ""#FFFFFF""}));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert an object into a list of pairs.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
631,JavaScript: Get a copy of the object where the keys have become the values and the values the keys ,Write a JavaScript function to get a copy of the object where the keys have become the values and the values the keys.,"function invert_key_value(obj) {
    var result = {};
    var keys = _keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  }
function _keys(obj) 
  {
    if (!isObject(obj)) return [];
    if (Object.keys) return Object.keys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  }
function isObject(obj) 
 {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }
console.log(invert_key_value({red: ""#FF0000"", green: ""#00FF00"", white: ""#FFFFFF""}));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a copy of the object where the keys have become the values and the values the keys.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
632,JavaScript: Check whether an object contains specified property ,Write a JavaScript function to check whether an object contains given property.,"function hasKey(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  }
console.log(hasKey({red: ""#FF0000"", green: ""#00FF00"", white: ""#FFFFFF""}, ""green""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether an object contains given property.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Object
616,JavaScript: List the properties of a JavaScript object ,"
Write a JavaScript program to list the properties of a JavaScript object.

<i>Sample object</i>: 

var student = { 

name : ""David Rayy"", 

sclass : ""VI"", 

rollno : 12 };

<i>Sample Output</i>: name,sclass,rollno","function _keys(obj) 
 {
    if (!isObject(obj)) return [];
    if (Object.keys) return Object.keys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  }
function isObject(obj) 
{
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  }
console.log(_keys({red: ""#FF0000"", green: ""#00FF00"", white: ""#FFFFFF""}));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program to list the properties of a JavaScript object. </title>
  </head>
  <body>
</body>
  </html>
  ","Medium
",初级,JavaScript Object
621,JavaScript: Sort an array using Bubble Sorting method ,"
Write a Bubble Sort algorithm in JavaScript.

Note: Bubble sort is a simple sorting algorithm that works by repeatedly stepping through the list to be sorted,

<i>Sample Data: </i>[6,4,0, 3,-2,1]

Expected Output : [-2, 0, 1, 3, 4, 6]","Array.prototype.bubbleSort_algo = function() 
{
var is_sorted = false;
 while (!is_sorted) 
 {
    is_sorted = true;
    for (var n = 0; n < this.length - 1; n++) 
    {
      if (this[n] > this[n+1]){
        var x = this[n+1];
        this[n+1] = this[n];
        this[n] = x;
        is_sorted = false;
      }
    }
  }
  return this;
};

console.log([6,4,0, 3,-2,1].bubbleSort_algo());
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>Bubble Sort</title>
  </head>
  <body>
</body>
  </html>
  ","Easy
",初级,JavaScript Object
633,JavaScript: Calculate the factorial of a number ,"Write a JavaScript program to calculate the factorial of a number.In mathematics, the factorial of a non-negative integer n, denoted by n!, is the product of all positive integers less than or equal to n. For example, 5! = 5 x 4 x 3 x 2 x 1 = 120","function factorial(x) 
{ 

  if (x === 0)
 {
    return 1;
 }
  return x * factorial(x-1);
         
}
console.log(factorial(5));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Calculate the factorial of a number.</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Recursion
634,JavaScript: Find the greatest common divisor of two positive numbers ,Write a JavaScript program to find the greatest common divisor (gcd) of two positive numbers.,"var gcd = function(a, b) {
    if ( ! b) {
        return a;
    }

    return gcd(b, a % b);
};
console.log(gcd(2154, 458));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Recursive function to find the GCD of two numbers</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Recursion
635,JavaScript: Get the integers in a range ,"Write a JavaScript program to get the integers in range (x, y).
Example : range(2, 9)

Expected Output : [3, 4, 5, 6, 7, 8]","var range = function(start_num, end_num) 
{
  if (end_num - start_num === 2) 
  {
    return [start_num + 1];
  } 
  else 
  {
    var list = range(start_num, end_num - 1);
    list.push(end_num - 1);
    return list;
  }
};

console.log(range(2,9));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Gets the integers from x to y</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Recursion
636,JavaScript: Compute the sum of an array of integers ,"Write a JavaScript program to compute the sum of an array of integers.
Example : var array = [1, 2, 3, 4, 5, 6]

Expected Output : 21 ","var array_sum = function(my_array) {
  if (my_array.length === 1) {
    return my_array[0];
  }
  else {
    return my_array.pop() + array_sum(my_array);
  }
};

console.log(array_sum([1,2,3,4,5,6]));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Compute the sum of an array of integers</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Recursion
637,JavaScript: Compute the exponent of a number ,"Write a JavaScript program to compute the exponent of a number.
Note: The exponent of a number says how many times the base number is used as a factor.

8<sup>2</sup> = 8 x 8 = 64. Here 8 is the base and 2 is the exponent.","var exponent = function(a, n) 
{
   if (n === 0) 
   {
    return 1;
    }
  else 
  {
    return a * exponent(a, n-1);
  }
};

console.log(exponent(4, 2));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Exponent of a number</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Recursion
638,JavaScript: Get the first n Fibonacci numbers ,"Write a JavaScript program to get the first n Fibonacci numbers.Note: The Fibonacci Sequence is the series of numbers: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, . . . Each subsequent number is the sum of the previous two.","var fibonacci_series = function (n) 
{
  if (n===1) 
  {
    return [0, 1];
  } 
  else 
  {
    var s = fibonacci_series(n - 1);
    s.push(s[s.length - 1] + s[s.length - 2]);
    return s;
  }
};

 console.log(fibonacci_series(8));
 ","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Fibonacci Series</title>
</head>
<body>

</body>
</html>
","Easy
",高级,JavaScript Recursion
639,JavaScript: Check whether a number is even or not ,Write a JavaScript program to check whether a number is even or not.,"function is_even_recursion(number)
{
  if (number < 0) 
  {
    number = Math.abs(number);
  }
  if (number===0) 
  {
    return true;
  }
  if (number===1) 
  {
    return false;
  }
  else 
  {
    number = number - 2;
    return is_even_recursion(number);
  }
}
console.log(is_even_recursion(234)); //true
console.log(is_even_recursion(-45)); // false
console.log(is_even_recursion(-45)); // false
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Use recursion to determine if a number is or not.</title>
</head>
<body>
</body>
</html>
","Easy
",高级,JavaScript Recursion
640,JavaScript: Binary search using recursion ,"Write a JavaScript program for binary search.
Sample array : [0,1,2,3,4,5,6]

console.log(l.br_search(5)) will return '5' ","Array.prototype.br_search = function (target) 
{
  var half = parseInt(this.length / 2);
  if (target === this[half]) 
  {
    return half;
  }
  if (target > this[half]) 
  {
    return half + this.slice(half,this.length).br_search(target);
  } 
  else
  {
    return this.slice(0, half).br_search(target);
  }
};

l= [0,1,2,3,4,5,6];

console.log(l.br_search(5));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Binary search using recursion</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Recursion
641,JavaScript: Marge sort - recursion ,"Write a merge sort program in JavaScript.
Sample array  : [34,7,23,32,5,62]

Sample output  : [5, 7, 23, 32, 34, 62] ","Array.prototype.merge_Sort = function () {
  if (this.length <= 1) 
  {
    return this;
  }

  var half = parseInt(this.length / 2);
  var left = this.slice(0, half).merge_Sort();
  var right = this.slice(half,     this.length).merge_Sort();
  var merge = function (left, right) 
  {
  var arry = [];
  while (left.length > 0 && right.length > 0)
  {
    arry.push((left[0] <= right[0]) ? left.shift() : right.shift());
  }
    return arry.concat(left).concat(right);
  };

  return merge(left, right);
};

var a = [34,7,23,32,5,62];
console.log(a.merge_Sort());
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Merge sort - recursion</title>
</head>
<body>

</body>
</html>
","Medium
",高级,JavaScript Recursion
642,JavaScript: Check whether the first character of a string is uppercase or not ,Write a JavaScript program to test the first character of a string is uppercase or not.,"function upper_case(str)
{
   regexp = /^[A-Z]/;
   if (regexp.test(str))
    {
      console.log(""String's first character is uppercase"");
    } 
    else
    {
      console.log(""String's first character is not uppercase"");
    }
}
upper_case('Abcd');
upper_case('abcd');
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript Regular expression to check string's first character is uppercase or not</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
645,JavaScript: Search a date within a string ,Write a JavaScript program to search a date within a string. Sample string: ,"function is_dateString(str)
{
 regexp = /^(1[0-2]|0?[1-9])\/(3[01]|[12][0-9]|0?[1-9])\/(?:[0-9]{2})?[0-9]{2}$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_dateString(""01/01/2015""));

console.log(is_dateString(""01/22/2015""));

console.log(is_dateString(""32/01/2015""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is date string or not.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
646,JavaScript: Alternet of trim function using regular expression ,Write a JavaScript program that works as a trim function (string) using regular expression.,"function Trim(str)
{
  var result;
  if (typeof str === 'string') 
  {
    result = str.replace(/^\s+|\s+$/g, '');
    return result;
  }
  else
  {
    return false;
  }
}
console.log(Trim(' w3resource '));
","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Trim function using regular expression</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
647,JavaScript: Count number of words in string ,Write a JavaScript program to count number of words in string.The script will be used to: ,"function count_words()
{
str1= document.getElementById(""InputText"").value;
//exclude  start and end white-space
str1 = str1.replace(/(^\s*)|(\s*$)/gi,"""");
//convert 2 or more spaces to 1  
str1 = str1.replace(/[ ]{2,}/gi,"" "");
// exclude newline with a start spacing  
str1 = str1.replace(/\n /,""\n"");
document.getElementById(""noofwords"").value = str1.split(' ').length;
}
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=utf-8 />
  <title>Count number of words in a string</title>
  <style type=""text/css"">
  body {margin-top: 40px;}
  </style> 
</head>
  <body>
  <textarea id=""InputText"" cols=""30"" rows=""4"">The quick brown fox jumps over the lazy dog.</textarea>
  <br>
  <input type=""button"" name=""Convert"" value=""No. of Words"" onClick=""count_words();"">
  <input id = ""noofwords"" type=""text"" value="""" size=""6""> 
  </body>
  </html>
  ","Medium
",中级,JavaScript Validation with Regular expression
649,JavaScript: Count the number of vowels in a given string ,"Write a JavaScript function to count the number of vowels in a given string.
Test Data: 

console.log(alphabetize_string('United States'));

Output : 

""SUadeeinsttt""","function vowel_count(str) {

  return str.match(/[aeiou]/gi).length;

}

console.log(vowel_count('The quick brown fox jumps over the lazy dog'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to count the number of vowels in a given string</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
650,JavaScript: Check whether a given value is an valid url or not ,Write a JavaScript function to check whether a given value is an valid url or not.,"function is_url(str)
{
  regexp =  /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/;
        if (regexp.test(str))
        {
          return true;
        }
        else
        {
          return false;
        }
}

console.log(is_url(""http://www.example.com""));
console.log(is_url(""https://www.example.com""));
console.log(is_url(""www.example.com""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is an url or not</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
651,JavaScript: Check whether a given value is alpha numeric or not ,Write a JavaScript function to check whether a given value is alpha numeric or not.,"function is_alphaNumeric(str)
{
 regexp = /^[A-Za-z0-9]+$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_alphaNumeric(""37828sad""));

console.log(is_alphaNumeric(""3243#$sew""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is alpha numeric or not.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
652,JavaScript: Check whether a given value is time string or not ,Write a JavaScript function to check whether a given value is time string or not.,"function is_timeString(str)
{
 regexp = /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_timeString(""11:35:30""));

console.log(is_timeString(""90:90:90""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is time string or not.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
653,JavaScript: Check whether a given value is US zip code or not ,Write a JavaScript function to check whether a given value is US zip code or not.,"function is_usZipCode(str)
{
 regexp = /^[0-9]{5}(?:-[0-9]{4})?$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_usZipCode(""03201-2150""));

console.log(is_usZipCode(""7892""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is US zip code or not</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
654,JavaScript: Check whether a given value is UK Post Code or not ,Write a JavaScript function to check whether a given value is UK Post Code or not.,"function is_ukPostCode(str)
{
 regexp = /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_ukPostCode(""B294HJ""));

console.log(is_ukPostCode(""7892""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is UK Post Code or not</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
655,JavaScript: Check whether a given value is Canada Post Code or not ,Write a JavaScript function to check whether a given value is Canada Post Code or not.,"function is_caPostalCode(str)
{
 regexp = /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\s?[0-9][A-Z][0-9]$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_caPostalCode(""K8V3Y1""));

console.log(is_caPostalCode(""K8V 3Y1""));

console.log(is_caPostalCode(""Z4V4X1""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is Canada Post Code or not</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
656,JavaScript: Check whether a given value is a social security number or not ,Write a JavaScript function to check whether a given value is a social security number or not.,"function is_socialSecurity_Number(str)
{
 regexp = /^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_socialSecurity_Number(""019-90-5680""));

console.log(is_socialSecurity_Number(""K8V-3Y1""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is A social security number or not</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
657,JavaScript: Check whether a given value is hexadecimal value or not ,Write a JavaScript function to check whether a given value is hexadecimal value or not.,"function is_hexadecimal(str)
{
 regexp = /^[0-9a-fA-F]+$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_hexadecimal(""ffffff""));

console.log(is_hexadecimal(""fz5500""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is hexadecimal value or not</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
658,JavaScript: Check whether a given value is hexcolor value or not ,Write a JavaScript function to check whether a given value is hexcolor value or not.,"function is_hexcolor(str)
{
 regexp = /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_hexcolor(""#444""));

console.log(is_hexcolor(""#3333""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is hexcolor value or not.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
660,JavaScript: Check whether a given value is html or not ,Write a JavaScript function to check whether a given value is html or not.,"function is_html(str)
{
 regexp = /<([a-z]+) *[^/]*?>/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_html(''));

console.log(is_html(''));

console.log(is_html('.selector'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to check whether a given value is html or not.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
661,"JavaScript: Check a given value contains alpha, dash and underscore ","Write a JavaScript function to check a given value contains alpha, dash and underscore.","function is_alphaDash(str)
{
 regexp = /^[a-z0-9_\-]+$/i;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_alphaDash('12-133'));

console.log(is_alphaDash('100_23'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check a given value contains alpha, dash and underscore</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
662,JavaScript: Print an integer with commas as thousands separators ,Write a JavaScript function to print an integer with commas as thousands separators.,"function thousands_separators(num)
  {
    var num_parts = num.toString().split(""."");
    num_parts[0] = num_parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, "","");
    return num_parts.join(""."");
  }

console.log(thousands_separators(1000));
console.log(thousands_separators(10000.23));
console.log(thousands_separators(100000));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to print an integer with commas as thousands separators</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
644,JavaScript: Check whether the pattern of an e-mail address matches a specific format ,Write a pattern that matches e-mail addresses. The personal information part contains the following ASCII characters.,,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>JavaScript Regular expression to valid an email address</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript Validation with Regular expression
643,JavaScript: Check a credit card number format,Write a JavaScript program to check a credit card number.Here are some format of some well-known credit cards.,"function is_creditCard(str)
{
 regexp = /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_creditCard(""378282246310006""));

console.log(is_creditCard(""37828224630006""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is a valid credit card or not</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
648,JavaScript: Check whether a given value is IP value or not ,Write a JavaScript function to check whether a given value is IP value or not.,"function is_IP(str)
{
 regexp =  /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_IP('198.156.23.5'));

console.log(is_IP(""172.16.0.1""));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether a given value is IP value or not.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
659,JavaScript: Check whether a given value represents a domain or not ,Write a JavaScript function to check whether a given value represents a domain or not.,"function is_domain(str)
{
 regexp = /^[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,6}$/i;
  
        if (regexp.test(str))
          {
            return true;
          }
        else
          {
            return false;
          }
}

console.log(is_domain('www.example.com'));

console.log(is_domain('www.npm.co.uk'));

console.log(is_domain('http://www.example.com'));

console.log(is_domain('https://www.example.com'));

console.log(is_domain('www.example.com'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to check whether a given value represents a domain or not</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript Validation with Regular expression
663,JavaScript Searching and Sorting Algorithm: Quick sort," Write a JavaScript program to sort a list of elements using Quick sort.Quick sort is a comparison sort, meaning that it can sort items of any type for which a ""less-than"" relation (formally, a total order) is defined.","function quick_Sort(origArray) {
	if (origArray.length <= 1) { 
		return origArray;
	} else {

		var left = [];
		var right = [];
		var newArray = [];
		var pivot = origArray.pop();
		var length = origArray.length;

		for (var i = 0; i < length; i++) {
			if (origArray[i] <= pivot) {
				left.push(origArray[i]);
			} else {
				right.push(origArray[i]);
			}
		}

		return newArray.concat(quick_Sort(left), pivot, quick_Sort(right));
	}
}

var myArray = [3, 0, 2, 5, -1, 4, 1 ];

console.log(""Original array: "" + myArray);
var sortedArray = quick_Sort(myArray);
console.log(""Sorted array: "" + sortedArray);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Quick sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
664, JavaScript Searching and Sorting Algorithm: Merge sort," Write a JavaScript program to sort a list of elements using Merge sort.According to Wikipedia ""Merge sort (also commonly spelled mergesort) is an O (n log n) comparison-based sorting algorithm. Most implementations produce a stable sort, which means that the implementation preserves the input order of equal elements in the sorted output.""","  function merge_sort(left_part,right_part) 
{
	var i = 0;
	var j = 0;
	var results = [];

	while (i < left_part.length || j < right_part.length) {
		if (i === left_part.length) {
			// j is the only index left_part
			results.push(right_part[j]);
			j++;
		} 
      else if (j === right_part.length || left_part[i] <= right_part[j]) {
			results.push(left_part[i]);
			i++;
		} else {
			results.push(right_part[j]);
			j++;
		}
	}
	return results;
}

console.log(merge_sort([1,3,4], [3,7,9]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Merge sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
666, JavaScript Searching and Sorting Algorithm: Insertion sort ,"Write a JavaScript program to sort a list of elements using Insertion sort.Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort.","const insertion_Sort = (nums) => {
  for (let i = 1; i < nums.length; i++) {
    let j = i - 1
    let temp = nums[i]
    while (j >= 0 && nums[j] > temp) {
      nums[j + 1] = nums[j]
      j--
    }
    nums[j+1] = temp
  }
  return nums
}
console.log(insertion_Sort([3, 0, 2, 5, -1, 4, 1]));
console.log(insertion_Sort([2,6,5,12,-1,3,8,7,1,-4,0,23,1,-55,20,37,54,210,-23,7,483,9339,29,-3,90,-2,81,54,7372,-92,93,93,18,-43,21]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Insertion sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
665,JavaScript Searching and Sorting Algorithm: Heap sort ,"Write a JavaScript program to sort a list of elements using Heap sort.In computer science, heapsort (invented by J. W. J. Williams in 1964) is a comparison-based sorting algorithm. Heapsort can be thought of as an improved selection sort: like that algorithm, it divides its input into a sorted and an unsorted region, and it interactively shrinks the unsorted region by extracting the largest element and moving that to the sorted region. The improvement consists of the use of a heap data structure rather than a linear-time search to find the maximum. Although somewhat slower in practice on most machines than a well-implemented quicksort, it has the advantage of a more favorable worst-case O(n log n) runtime. Heapsort is an in-place algorithm, but it is not a stable sort.A run of the heapsort algorithm sorting an array of randomly permuted values. In the first stage of the algorithm the array elements are reordered to satisfy the heap property. Before the actual sorting takes place, the heap tree structure is shown briefly for illustration.
Animation credits :?<a href=""https://commons.wikimedia.org/wiki/File:Sorting_heapsort_anim.gif"" target=""_blank"">RolandH</a>","
  var array_length;
/* to create MAX  array */  
function heap_root(input, i) {
    var left = 2 * i + 1;
    var right = 2 * i + 2;
    var max = i;

    if (left < array_length && input[left] > input[max]) {
        max = left;
    }

    if (right < array_length && input[right] > input[max])     {
        max = right;
    }

    if (max != i) {
        swap(input, i, max);
        heap_root(input, max);
    }
}

function swap(input, index_A, index_B) {
    var temp = input[index_A];

    input[index_A] = input[index_B];
    input[index_B] = temp;
}

function heapSort(input) {
    
    array_length = input.length;

    for (var i = Math.floor(array_length / 2); i >= 0; i -= 1)      {
        heap_root(input, i);
      }

    for (i = input.length - 1; i > 0; i--) {
        swap(input, 0, i);
        array_length--;
      
      
        heap_root(input, 0);
    }
}

var arr = [3, 0, 2, 5, -1, 4, 1];
heapSort(arr);
console.log(arr);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Heap sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
667, JavaScript Searching and Sorting Algorithm: Selection sort ,Write a JavaScript program to sort a list of elements using the Selection sort algorithm.The selection sort improves on the bubble sort by making only one exchange for every pass through the list.,"// Selection sort with O(n^2) time complexity

function Selection_Sort(arr, compare_Function) {

  function compare(a, b) {
   return a - b;
   } 
  var min = 0;
  var index = 0;
  var temp = 0;

 //{Function} compare_Function Compare function
  compare_Function = compare_Function || compare;

  for (var i = 0; i < arr.length; i += 1) {
    index = i;
    min = arr[i];

    for (var j = i + 1; j < arr.length; j += 1) {
      if (compare_Function(min, arr[j]) > 0) {
        min = arr[j];
        index = j;
      }
    }

    temp = arr[i];
    arr[i] = min;
    arr[index] = temp;
  }

  //return sorted arr
  return arr;
}

console.log(Selection_Sort([3, 0, 2, 5, -1, 4, 1], function(a, b) { return a - b; })); 
console.log(Selection_Sort([3, 0, 2, 5, -1, 4, 1], function(a, b) { return b - a; }));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Selection sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
668, JavaScript Searching and Sorting Algorithm: Shell sort ,"Write a JavaScript program to sort a list of elements using Shell sort.According to Wikipedia ""Shell sort or Shell's method, is an in-place comparison sort. It can be seen as either a generalization of sorting by exchange (bubble sort) or sorting by insertion (insertion sort). The method starts by sorting pairs of elements far apart from each other, then progressively reducing the gap between elements to be compared. Starting with far apart elements can move some out-of-place elements into position faster than a simple nearest neighbor exchange.""An example run of Shellsort with gaps 5, 3 and 1 is shown below.The first pass, 5-sorting, performs insertion sort on separate subarrays (a1, a6, a11), (a2, a7, a12), (a3, a8), (a4, a9), (a5, a10). For instance, it changes the subarray (a1, a6, a11) from (62, 17, 25) to (17, 25, 62). The next pass, 3-sorting, performs insertion sort on the subarrays (a1, a4, a7, a10), (a2, a5, a8, a11), (a3, a6, a9, a12). The last pass, 1-sorting, is an ordinary insertion sort of the entire array (a1,..., a12).
As the example illustrates, the subarrays that Shellsort operates on are initially short; later they are longer but almost ordered. In both cases insertion sort works efficiently.
Shellsort is unstable: it may change the relative order of elements with equal values. It is an adaptive sorting algorithm in that it executes faster when the input is partially sorted.Shell Sort
Shellsort with gaps 23, 10, 4, 1 in <a href=""https://en.wikipedia.org/wiki/Shellsort#/media/File:Sorting_shellsort_anim.gif"">action</a>.","function shellSort(arr) {
    var increment = arr.length / 2;
    while (increment > 0) {
        for (i = increment; i < arr.length; i++) {
            var j = i;
            var temp = arr[i];
    
            while (j >= increment && arr[j-increment] > temp) {
                arr[j] = arr[j-increment];
                j = j - increment;
            }
    
            arr[j] = temp;
        }
    
        if (increment == 2) {
            increment = 1;
        } else {
            increment = parseInt(increment*5 / 11);
        }
    }
  return arr;
}

console.log(shellSort([3, 0, 2, 5, -1, 4, 1]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Shell sort</title>
  </head>
  <body></body>
</html>
","Easy
",高级,JavaScript Searching and Sorting Algorithm
669,JavaScript Searching and Sorting Algorithm: Bubble sort ,"Write a JavaScript program to sort a list of elements using Bubble sort.According to Wikipedia ""Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that repeatedly steps through the list to be sorted, compares each pair of adjacent items and swaps them if they are in the wrong order. The pass through the list is repeated until no swaps are needed, which indicates that the list is sorted. The algorithm, which is a comparison sort, is named for the way smaller elements ""bubble"" to the top of the list. Although the algorithm is simple, it is too slow and impractical for most problems even when compared to insertion sort. It can be practical if the input is usually in sort order but may occasionally have some out-of-order elements nearly in position.""","function swap(arr, first_Index, second_Index){
    var temp = arr[first_Index];
    arr[first_Index] = arr[second_Index];
    arr[second_Index] = temp;
}

function bubble_Sort(arr){

    var len = arr.length,
        i, j, stop;

    for (i=0; i < len; i++){
        for (j=0, stop=len-i; j < stop; j++){
            if (arr[j] > arr[j+1]){
                swap(arr, j, j+1);
            }
        }
    }

    return arr;
}
console.log(bubble_Sort([3, 0, 2, 5, -1, 4, 1]));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Bubble sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
670,JavaScript Searching and Sorting Algorithm: Cocktail shaker sort ,"Write a JavaScript program to sort a list of elements using Cocktail shaker sort.Cocktail shaker sort (also known as bidirectional bubble sort, cocktail sort, shaker sort, ripple sort, shuffle sort, or shuttle sort ) is a variation of bubble sort that is both a stable sorting algorithm and a comparison sort. The algorithm differs from a bubble sort in that it sorts in both directions on each pass through the list. This sorting algorithm is only marginally more difficult to implement than a bubble sort, and solves the problem of turtles in bubble sorts. It provides only marginal performance improvements, and does not improve asymptotic performance; like the bubble sort, it is not of practical interest,, though it finds some use in education.","let nums = [4, 9, 0, 3, 1, 5];
console.log(""Original array:"");
console.log(nums);
let is_Sorted = true;
while (is_Sorted){
   for (let i = 0; i< nums.length - 1; i++){
           if (nums[i] > nums[i + 1])
            {
               let temp = nums[i];
               nums[i] = nums[i + 1];
               nums[i+1] = temp;
               is_Sorted = true;
            }
   }

   if (!is_Sorted)
       break;

   is_Sorted = false;

   for (let j = nums.length - 1; j > 0; j--){
           if (nums[j-1] > nums[j])
            {
               let temp = nums[j];
               nums[j] = nums[j - 1];
               nums[j - 1] = temp;
               is_Sorted = true;
            }
   }
}
console.log(""Sorted array:"")
console.log(nums);
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Cocktail sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
671, JavaScript Searching and Sorting Algorithm: Comb sort ,"Write a JavaScript program to sort a list of elements using Comb sort.
The Comb Sort is a variant of the Bubble Sort. Like the Shell sort, the Comb Sort increases the gap used in comparisons and exchanges. Some implementations use the insertion sort once the gap is less than a certain amount. The basic idea is to eliminate turtles, or small values near the end of the list, since in a bubble sort these slow the sorting down tremendously. Rabbits, large values around the beginning of the list, do not pose a problem in bubble sort. 

In bubble sort, when any two elements are compared, they always have a gap of 1. The basic idea of comb sort is that the gap can be much more than 1.","function combsort(arr)
{
 function is_array_sorted(arr) {
      var sorted = true;
      for (var i = 0; i < arr.length - 1; i++) {
          if (arr[i] > arr[i + 1]) {
              sorted = false;
              break;
          }
      }
      return sorted;
  }
 
  var iteration_count = 0;
  var gap = arr.length - 2;
  var decrease_factor = 1.25;
 
  // Repeat iterations Until array is not sorted
  
  while (!is_array_sorted(arr)) 
  {
      // If not first gap  Calculate gap
      if (iteration_count > 0)
         gap = (gap == 1) ? gap : Math.floor(gap / decrease_factor);
 
  // Set front and back elements and increment to a gap
      var front = 0;
      var back = gap;
      while (back <= arr.length - 1) 
      {
          // Swap the elements if they are not ordered
        
          if (arr[front] > arr[back])
          {
              var temp = arr[front];
              arr[front] = arr[back];
              arr[back] = temp;
          }
 
          // Increment and re-run swapping
        
          front += 1;
          back += 1;
      }
      iteration_count += 1;
  }
  return arr;
}
  
 var arra = [3, 0, 2, 5, -1, 4, 1]; 
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(combsort(arra));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Comb sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
672,JavaScript Searching and Sorting Algorithm: Gnome sort ,"Write a JavaScript program to sort a list of elements using Gnome sort.
Gnome sort is a sorting algorithm originally proposed by Dr. Hamid Sarbazi-Azad (Professor of Computer Engineering at Sharif University of Technology) in 2000 and called ""stupid sort"" (not to be confused with bogosort), and then later on described by Dick Grune and named ""gnome sort"".

The algorithm always finds the first place where two adjacent elements are in the wrong order, and swaps them. It takes advantage of the fact that performing a swap can introduce a new out-of-order adjacent pair only next to the two swapped elements.","function gnomeSort(arr) 
{
    function moveBack(i) 
  {
        for( ; i > 0 && arr[i-1] > arr[i]; i--)
        {
            var t = arr[i];
            arr[i] = arr[i-1];
            arr[i-1] = t;
        }
    }
    for (var i = 1; i < arr.length; i++) 
    {
        if (arr[i-1] > arr[i]) moveBack(i);
    }
    return arr;
}

var arra = [3, 0, 2, 5, -1, 4, 1]; 
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(gnomeSort(arra));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Gnome sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
673, JavaScript Searching and Sorting Algorithm: Counting sort ,"Write a JavaScript program to sort a list of elements using Counting sort.According to Wikipedia ""In computer science, counting sort is an algorithm for sorting a collection of objects according to keys that are small integers; that is, it is an integer sorting algorithm. It operates by counting the number of objects that have each distinct key value, and using arithmetic on those counts to determine the positions of each key value in the output sequence. Its running time is linear in the number of items and the difference between the maximum and minimum key values, so it is only suitable for direct use in situations where the variation in keys is not significantly greater than the number of items. However, it is often used as a subroutine in another sorting algorithm, radix sort, that can handle larger keys more efficiently"".The algorithm loops over the items, computing a histogram of the number of times each key occurs within the input collection. It then performs a prefix sum computation (a second loop, over the range of possible keys) to determine, for each key, the starting position in the output array of the items having that key. Finally, it loops over the items again, moving each item into its sorted position in the output array.","function countingSort(arr, min, max)
  {
    var i, z = 0, count = [];
 
    for (i = min; i <= max; i++) {
        count[i] = 0;
    }
 
    for (i=0; i < arr.length; i++) {
        count[arr[i]]++;
    }
 
    for (i = min; i <= max; i++) {
        while (count[i]-- > 0) {
            arr[z++] = i;
        }
    }
 return arr;
}
var arra = [3, 0, 2, 5, 4, 1]; 
console.log(arra.length);
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(countingSort(arra, 0, 5));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Counting sort</title>
  </head>
  <body></body>
</html>
","Easy
",高级,JavaScript Searching and Sorting Algorithm
674, JavaScript Searching and Sorting Algorithm: Flash sort ,"Write a JavaScript program to sort a list of elements using Flash sort.
Flashsort is a distribution sorting algorithm showing linear computational complexity O(n) for uniformly distributed data sets and relatively little additional memory requirement. The original work was published in 1998 by Karl-Dietrich Neubert. 

The basic idea behind flashsort is that in a data set with a known distribution, it is easy to immediately estimate where an element should be placed after sorting when the range of the set is known.","function flash_sort(arr) 
  {
    var max = 0, min = arr[0];
    var n = arr.length;
    var m = ~~(0.45 * n);
    var l = new Array(m);
 
    for (var i = 1; i < n; ++i) {
        if (arr[i] < min) {
            min = arr[i];
        }
        if (arr[i] > arr[max]) {
            max = i;
        }
    }
 
     if (min === arr[max]) {
        return arr;
    }
 
    var c1 = (m - 1) / (arr[max] - min);
 
 
    for (var k = 0; k < m; k++) {
        l[k] = 0;
    }
    for (var j = 0; j < n; ++j) {
        k = ~~(c1 * (arr[j] - min));
        ++l[k];
    }
 
    for (var p = 1; p < m; ++p) {
        l[p] = l[p] + l[p - 1];
    }
 
    var hold = arr[max];
    arr[max] = arr[0];
    arr[0] = hold;
 
    //permutation
    var move = 0, t, flash;
    j = 0; 
    k = m - 1;
  
    while (move < (n - 1)) {
        while (j > (l[k] - 1)) {
            ++j;
            k = ~~(c1 * (arr[j] - min));
        }
        if (k < 0) break;
        flash = arr[j];
        while (j !== l[k]) {
            k = ~~(c1 * (flash - min));
            hold = arr[t = --l[k]];
            arr[t] = flash;
            flash = hold;
            ++move;
        }
    }
 
    //insertion
    for (j = 1; j < n; j++) {
        hold = arr[j];
         i = j - 1;
        while (i >= 0 && arr[i] > hold) {
            arr[i + 1] = arr[i--];
        }
        arr[i + 1] = hold;
    }
    return arr;
}
var arra = [3, 0, 2, 5, -1, 4, 1]; 
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(flash_sort(arra, 0, 5));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Flash sort</title>
  </head>
  <body></body>
</html>
","Easy
",高级,JavaScript Searching and Sorting Algorithm
676,JavaScript Searching and Sorting Algorithm: Bogosort ,"Write a JavaScript program to sort a list of elements using Bogosort.In computer science, bogosort is a particularly ineffective sorting algorithm based on the generate and test paradigm. The algorithm successively generates permutations of its input until it finds one that is sorted. It is not useful for sorting, but may be used for educational purposes, to contrast it with other more realistic algorithms.","function Bogosort(arr){
    var isSorted = function(arr){
        for(var i = 1; i < arr.length; i++){
            if (arr[i-1] > arr[i]) {
                return false;
            }
        }
        return true;
    };

    function shuffle(arr){
        var count = arr.length, temp, index;

        while(count > 0){
            index = Math.floor(Math.random() * count);
            count--;

            temp = arr[count];
            arr[count] = arr[index];
            arr[index] = temp;
        }

        return arr;
    }

   function sort(arr){
        var sorted = false;
        while(!sorted){
            arr = shuffle(arr);
            sorted = isSorted(arr);
        }
        return arr;
    }

    return sort(arr);
}


var arra = [3, 0, 2, 5, -1, 4, 1]; 
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(Bogosort(arra));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Bogosort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
675, JavaScript Searching and Sorting Algorithm: Pancake sort ,Write a JavaScript program to sort a list of elements using Pancake sort.Pancake sorting is the colloquial term for the mathematical problem of sorting a disordered stack of pancakes in order of size when a spatula can be inserted at any point in the stack and used to flip all pancakes above it. A pancake number is the minimum number of flips required for a given number of pancakes. The problem was first discussed by American geometer Jacob E. Goodman. It is a variation of the sorting problem in which the only allowed operation is to reverse the elements of some prefix of the sequence.,"function pancake_sort(arr) {
    for (var i = arr.length - 1; i >= 1; i--) {
        // find the index of the largest element not yet sorted
        var max_idx = 0;
        var max = arr[0];
        for (var j = 1; j <= i; j++) {
            if (arr[j] > max) {
                max = arr[j];
                max_idx = j;
            }
        }
 
        if (max_idx == i) 
            continue; // element already in place
 
        var new_slice;
 
        // flip arr max element to index 0
        if (max_idx > 0) {
            new_slice = arr.slice(0, max_idx+1).reverse();
            for ( j = 0; j <= max_idx; j++) 
                arr[j] = new_slice[j];
        }
 
        // then flip the max element to its place
        new_slice = arr.slice(0, i+1).reverse();
        for ( j = 0; j <= i; j++) 
            arr[j] = new_slice[j];
    }
    return arr;
}

var arra = [3, 0, 2, 5, -1, 4, 1]; 
console.log(""Original Array Elements""); 
console.log(arra); 
console.log(""Sorted Array Elements""); 
console.log(pancake_sort(arra, 0, 5));
","<!DOCTYPE html>
  <html>
  <head>
  <meta charset=""utf-8"">
  <title>JavaScript program of Pancake sort</title>
  </head>
  <body></body>
</html>
","Medium
",高级,JavaScript Searching and Sorting Algorithm
677,JavaScript: Check whether an 'input' is a string or not ,"Write a JavaScript function to check whether an 'input' is a string or not.
Test Data:

console.log(is_string('w3resource')); 

true

console.log(is_string([1, 2, 4, 0]));

false","is_string = function(input) {
  if (Object.prototype.toString.call(input) === '[object String]')
    return true;
  else
    return false;   
    };
console.log(is_string('w3resource'));
console.log(is_string([1, 2, 4, 0]));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Check whether an input is a string or not</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
678,JavaScript: Check whether a string is blank or not ,"Write a JavaScript function to check whether a string is blank or not.
Test Data :

console.log(is_Blank('')); 

console.log(is_Blank('abc'));

true 

false","is_Blank =  function(input) {
        if (input.length === 0)
        return true;
        else 
        return false;
      }
console.log(is_Blank(''));
console.log(is_Blank('abc'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS string : is blank</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
679,JavaScript: Split a string and convert it into an array of words ,"Write a JavaScript function to split a string and convert it into an array of words.
Test Data :

console.log(string_to_array(""Robin Singh""));

[""Robin"", ""Singh""]","string_to_array = function (str) {
     return str.trim().split("" "");
};
console.log(string_to_array(""Robin Singh""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Split a string and convert it into an array of words.</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
680,JavaScript: Extract a specific number of characters from a string ,Write a JavaScript function to extract a specified number of characters from a string.,"truncate_string = function (str1, length) {
  
    if ((str1.constructor === String) && (length>0)) {
        return str1.slice(0, length);
    }
};
console.log(truncate_string(""Robin Singh"",4));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Extract a specific number of characters from a string</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
681,JavaScript: Convert a string in abbreviated form ,Write a JavaScript function to convert a string in abbreviated form.,"abbrev_name = function (str1) {
    var split_names = str1.trim().split("" "");
    if (split_names.length > 1) {
        return (split_names[0] + "" "" + split_names[1].charAt(0) + ""."");
    }
    return split_names[0];
};
console.log(abbrev_name(""Robin Singh""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Convert a string in abbreviated form</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
712,"JavaScript: Create a Zerofilled value with optional +, - sign","Write a JavaScript function to create a Zerofilled value with optional +, - sign.

Test Data:

console.log(zeroFill(120, 5, '-')); 

""+00120""

console.log(zeroFill(29, 4));

""0029""","function zeroFill(number, width, osign) {
    var num = '' + Math.abs(number),
        zerosw = width - num.length,
        sign = number >= 0;
    return (sign ? (osign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosw)).toString().substr(1) + num;
}

console.log(zeroFill(120, 5, '-'));

console.log(zeroFill(29, 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to create a Zerofilled value with optional +, - sign.</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript String
713,JavaScript: Test case insensitive (except special Unicode characters) string comparison,"Write a JavaScript function to test case insensitive (except special Unicode characters) string comparison.

Test Data:

console.log(compare_strings('abcd', 'AbcD')); 

true

console.log(compare_strings('ABCD', 'Abce'));

false","function compare_strings(str1, str2)
{
var areEqual = str1.toUpperCase() === str2.toUpperCase();
  return areEqual;
}

console.log(compare_strings('abcd', 'AbcD'));
console.log(compare_strings('ABCD', 'Abce'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to test case insensitive (except special Unicode characters) string comparison</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript String
682,JavaScript: Hide email addresses to protect from unauthorized user ,"Write a JavaScript function to hide email addresses to protect from unauthorized user.

Test Data:

console.log(protect_email(""<a class=""__cf_email__"" data-cfemail=""e3918c818a8dbc908a8d848ba3869b828e938f86cd808c8e"" href=""/cdn-cgi/l/email-protection"">[email?protected]</a>""));

""<a class=""__cf_email__"" data-cfemail=""75071a171c1b5b5b5b35100d14180519105b161a18"" href=""/cdn-cgi/l/email-protection"">[email?protected]</a>""",,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Hide email addresses to protect from unauthorised user</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
683,JavaScript: Parameterize a string ,"Write a JavaScript function to parameterize a string.

Test Data:

console.log(string_parameterize(""Robin Singh from USA.""));

""robin-singh-from-usa""","string_parameterize = function (str1) {
    return str1.trim().toLowerCase().replace(/[^a-zA-Z0-9 -]/, """").replace(/\s/g, ""-"");
};
console.log(string_parameterize(""Robin Singh from USA.""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Parameterize a string</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
684,JavaScript: Make capitalize the first letter of a string ,"Write a JavaScript function to capitalize the first letter of a string.

Test Data :

console.log(capitalize('js string exercises'));

""Js string exercises""","capitalize = function(str1){
  return str1.charAt(0).toUpperCase() + str1.slice(1);
}
    
 console.log(capitalize('js string exercises'));
 ","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Make capitalize the first letter of a string</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
685,JavaScript: Make capitalize the first letter of each word in a string ,"Write a JavaScript function to capitalize the first letter of each word in a string.

Test Data:

console.log(capitalize_Words('js string exercises'));

""Js String Exercises""","//capitalize_Words 
function capitalize_Words(str)
{
 return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
}
console.log(capitalize_Words('js string exercises'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Make capitalize the first letter of each word in a string</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
686,JavaScript: Input a string and converts upper case letters to lower and vice versa ,"Write a JavaScript function that takes a string which has lower and upper case letters as a parameter and converts upper case letters to lower case, and lower case letters to upper case.

Test Data:

console.log(swapcase('AaBbc'));

""aAbBC""","swapcase = function swapcase(str) {
        return str.replace(/([a-z]+)|([A-Z]+)/g, function(match, chr) {
            return chr ? match.toUpperCase() : match.toLowerCase();
        });
    }
console.log(swapcase('AaBbc'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS swap case</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
687,JavaScript: Convert a string into camel case ,"Write a JavaScript function to convert a string into camel case.

Test Data:

console.log(camelize(""JavaScript Exercises"")); 

console.log(camelize(""JavaScript exercises"")); 

console.log(camelize(""JavaScriptExercises""));

""JavaScriptExercises"" 

""JavaScriptExercises"" 

""JavaScriptExercises""","camelize = function camelize(str) {
      return str.replace(/\W+(.)/g, function(match, chr)
       {
            return chr.toUpperCase();
        });
    }

console.log(camelize(""JavaScript Exercises""));
console.log(camelize(""JavaScript exercises""));
console.log(camelize(""JavaScriptExercises""));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Javascript camel case</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
688,JavaScript: Make a string uncamelize,"Write a JavaScript function to uncamelize a string.

Test Data:

console.log(uncamelize('helloWorld')); 

console.log(uncamelize('helloWorld','-')); 

console.log(uncamelize('helloWorld','_'));

""hello world"" 

""hello-world"" 

""hello_world""","function uncamelize(str, separator) {
  // Assume default separator is a single space.
  if(typeof(separator) == ""undefined"") {
    separator = "" "";
  }
  // Replace all capital letters by separator followed by lowercase one
  var str = str.replace(/[A-Z]/g, function (letter) 
  {
    return separator + letter.toLowerCase();
  });
  // Remove first separator
  return str.replace(""/^"" + separator + ""/"", '');
}
console.log(uncamelize('helloWorld'));
console.log(uncamelize('helloWorld','-'));
console.log(uncamelize('helloWorld','_'));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JavaScript uncamelize function</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
689,JavaScript: Concatenate a specific string for a specific number of times,"Write a JavaScript function to concatenates a given string n times (default is 1).

Test Data:

console.log(repeat('Ha!')); 

console.log(repeat('Ha!',2)); 

console.log(repeat('Ha!',3));

""Ha!"" 

""Ha!Ha!"" 

""Ha!Ha!Ha!""","repeat = function repeat(str, count) {
    if(typeof(count) == ""undefined"") {
    count =1;
  }
  return count < 1 ? '' : new Array(count + 1).join(str);
    }
console.log(repeat('Ha!'));
console.log(repeat('Ha!',2));
console.log(repeat('Ha!',3));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JavaScript program to concatenates a given string n times (default is 1).</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
690,JavaScript: Insert a string within a specific position in another string,"Write a JavaScript function to insert a string within a string at a particular position (default is 1).

Test Data:

console.log(insert('We are doing some exercises.')); 

console.log(insert('We are doing some exercises.','JavaScript ')); 

console.log(insert('We are doing some exercises.','JavaScript ',18));

""We are doing some exercises."" 

""JavaScript We are doing some exercises."" 

""We are doing some JavaScript exercises.""","insert = function insert(main_string, ins_string, pos) {
   if(typeof(pos) == ""undefined"") {
    pos = 0;
  }
   if(typeof(ins_string) == ""undefined"") {
    ins_string = '';
  }
   return main_string.slice(0, pos) + ins_string + main_string.slice(pos);
    }
console.log(insert('We are doing some exercises.'));
console.log(insert('We are doing some exercises.','JavaScript '));
console.log(insert('We are doing some exercises.','JavaScript ',18));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Insert a string within a specific position in another string</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
691,JavaScript: Formats a number to a human-readable string,"Write a JavaScript function to humanized number (Formats a number to a human-readable string.) with the correct suffix such as 1st, 2nd, 3rd or 4th.

Test Data:

console.log(humanize_format()); 

console.log(humanize_format(1)); 

console.log(humanize_format(8)); 

console.log(humanize_format(301)); 

console.log(humanize_format(402)); 

""1st"" 

""8th"" 

""301st"" 

""402nd""","humanize_format = function humanize(num) {
   if(typeof(num) == ""undefined"") return;
  if(num % 100 >= 11 && num % 100 <= 13)
        return num + ""th"";
        
        switch(num % 10) {
            case 1: return num + ""st"";
            case 2: return num + ""nd"";
            case 3: return num + ""rd"";
        }
        return num + ""th"";
    }
console.log(humanize_format());  
console.log(humanize_format(1));  
console.log(humanize_format(8));  
console.log(humanize_format(301));  
console.log(humanize_format(402)); 
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Formats a number to a human-readable string </title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
692,JavaScript: Truncate a string if it is longer than the specified number of characters,"Write a JavaScript function to truncate a string if it is longer than the specified number of characters. Truncated strings will end with a translatable ellipsis sequence (""…"") (by default) or specified characters. 

Test Data:

console.log(text_truncate('We are doing JS string exercises.')) 

console.log(text_truncate('We are doing JS string exercises.',19))

console.log(text_truncate('We are doing JS string exercises.',15,'!!'))

""We are doing JS string exercises."" 

""We are doing JS ..."" 

""We are doing !!""
","text_truncate = function(str, length, ending) {
    if (length == null) {
      length = 100;
    }
    if (ending == null) {
      ending = '...';
    }
    if (str.length > length) {
      return str.substring(0, length - ending.length) + ending;
    } else {
      return str;
    }
  };
console.log(text_truncate('We are doing JS string exercises.'))
console.log(text_truncate('We are doing JS string exercises.',19))
console.log(text_truncate('We are doing JS string exercises.',15,'!!'))
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS truncates a string</title>
</head>
<body>
</body>
</html>
","Easy
",中级,JavaScript String
693,JavaScript: Chop a string into chunks of a specific length,"Write a JavaScript function to chop a string into chunks of a given length.

Test Data:

console.log(string_chop('w3resource')); 

console.log(string_chop('w3resource',2)); 

console.log(string_chop('w3resource',3));

[""w3resource""] 

[""w3"", ""re"", ""so"", ""ur"", ""ce""] 

[""w3r"", ""eso"", ""urc"", ""e""]","string_chop =  function(str, size){
      if (str == null) return [];
      str = String(str);
      size = ~~size;
return size > 0 ? str.match(new RegExp('.{1,' + size + '}', 'g')) : [str];
}
console.log(string_chop('w3resource'));
console.log(string_chop('w3resource',2));
console.log(string_chop('w3resource',3));
","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>chop a string into chunks of a given length</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
694,JavaScript: Count the occurrence of a substring in a string,"Write a JavaScript function to count the occurrence of a substring in a string.

Test Data:

console.log(count(""The quick brown fox jumps over the lazy dog"", 'the'));

Output:

2

console.log(count(""The quick brown fox jumps over the lazy dog"", 'fox',false));

Output:

1","function count(main_str, sub_str) 
    {
    main_str += '';
    sub_str += '';

    if (sub_str.length <= 0) 
    {
        return main_str.length + 1;
    }

       subStr = sub_str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
       return (main_str.match(new RegExp(subStr, 'gi')) || []).length;
    }
 
console.log(count(""The quick brown fox jumps over the lazy dog"", 'the'));
console.log(count(""The quick brown fox jumps over the lazy dog"", 'fox',false));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to count the occurrence of a substring in a string.</title>
</head>
<body>
</body>
</html>
","Medium
",中级,JavaScript String
696,"JavaScript: Pad (left, right) a string to get to a determined length","Write a JavaScript function that can pad (left, right) a string to get to a determined length.

Test Data:

console.log(formatted_string('0000',123,'l'));

console.log(formatted_string('00000000',123,''));

Output: 

""0123"" 
""12300000""","function formatted_string(pad, user_str, pad_pos)
{
  if (typeof user_str === 'undefined') 
    return pad;
  if (pad_pos == 'l')
     {
     return (pad + user_str).slice(-pad.length);
     }
  else 
    {
    return (user_str + pad).substring(0, pad.length);
    }
}
console.log(formatted_string('0000',123,'l'));
console.log(formatted_string('00000000',123,''));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function that can pad (left, right) a string to get to a determined length.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
698,JavaScript: Get a part of string after a specified character,"Write a JavaScript function to get a part of string after a specified character.

Test Data:

console.log(subStrAfterChars('w3resource: JavaScript Exercises', ':','a')); 

console.log(subStrAfterChars('w3resource: JavaScript Exercises', 'E','b'));

Output: 

""w3resource"" 
""xercises""","function subStrAfterChars(str, char, pos)
{
  if(pos=='b')
   return str.substring(str.indexOf(char) + 1);
  else if(pos=='a') 
   return str.substring(0, str.indexOf(char));
  else
  return str;  
}

console.log(subStrAfterChars('w3resource: JavaScript Exercises', ':','a'));

console.log(subStrAfterChars('w3resource: JavaScript Exercises', 'E','b'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to get a part of string after a specified character.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
699,JavaScript: Strip leading and trailing spaces from a string,"Write a JavaScript function to strip leading and trailing spaces from a string.

Test Data:

console.log(strip('w3resource ')); 

console.log(strip(' w3resource')); 

console.log(strip(' w3resource '));

Output : 

""w3resource"" 
 ""w3resource"" 

""w3resource""","function strip(str) {
    return str.replace(/^\s+|\s+$/g, '');
}

console.log(strip('w3resource '));
console.log(strip(' w3resource'));
console.log(strip(' w3resource  '));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to strip leading and trailing spaces from a string.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
700,JavaScript: Truncate a string to a certain number of words,"Write a JavaScript function to truncate a string to a certain number of words.

Test Data:

console.log(truncate('The quick brown fox jumps over the lazy dog', 4));

Output: 

""The quick brown fox""","function truncate(str, no_words) {
    return str.split("" "").splice(0,no_words).join("" "");
}

console.log(truncate('The quick brown fox jumps over the lazy dog', 4));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
<title>JavaScript function to truncate a string to a certain number of words</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
701,JavaScript: Alphabetize a given string,"Write a JavaScript function to alphabetize a given string.

Alphabetize string : An individual string can be alphabetized. This rearranges the letters so they are sorted A to Z.

Test Data:

console.log(alphabetize_string('United States'));

Output: 

""SUadeeinsttt""","function alphabetize_string(str) 
{
	
return str.split('').sort().join('').trim();

}
console.log(alphabetize_string('United States'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to alphabetize a given string.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
703,JavaScript: Convert ASCII to Hexadecimal format,"Write a JavaScript function to convert ASCII to Hexadecimal format.ASCII (Listeni/??ski/ ass-kee), abbreviated from American Standard Code for Information Interchange, is a character encoding standard. ASCII codes represent text in computers, telecommunications equipment, and other devices. Most modern character-encoding schemes are based on ASCII, although they support many additional characters.

Test Data:

console.log(ascii_to_hexa('12')); 

console.log(ascii_to_hexa('100'));

Output: 

""3132"" 

""313030""","function ascii_to_hexa(str)
  {
	var arr1 = [];
	for (var n = 0, l = str.length; n < l; n ++) 
     {
		var hex = Number(str.charCodeAt(n)).toString(16);
		arr1.push(hex);
	 }
	return arr1.join('');
   }

console.log(ascii_to_hexa('12'));
console.log(ascii_to_hexa('100'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to Convert ASCII to hex format.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
704,JavaScript: Convert Hexadecimal to ASCII format,"Write a JavaScript function to convert Hexadecimal to ASCII format.

Test Data:

console.log(hex_to_ascii('3132')); 

console.log(hex_to_ascii('313030'));

Output: 

""12"" 
""100""","function hex_to_ascii(str1)
 {
	var hex  = str1.toString();
	var str = '';
	for (var n = 0; n < hex.length; n += 2) {
		str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));
	}
	return str;
 }
console.log(hex_to_ascii('3132'));
console.log(hex_to_ascii('313030'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to convert Hexadecimal to ASCII</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
705,JavaScript: Find a word within a string,"Write a JavaScript function to find a word within a string.

Test Data:

console.log(search_word('The quick brown fox', 'fox')); 

console.log(search_word('aa, bb, cc, dd, aa', 'aa'));

Output: 

""'fox' was found 1 times."" 

""'aa' was found 2 times.""","function search_word(text, word){
    
    var x = 0, y=0;
   
    for (i=0;i< text.length;i++)
        {
        if(text[i] == word[0])
            {
            for(j=i;j< i+word.length;j++)
               {
                if(text[j]==word[j-i])
                  {
                    y++;
                  }
                if (y==word.length){
                    x++;
                }
            }
            y=0;
        }
    }
   return ""'""+word+""' was found ""+x+"" times."";
}

console.log(search_word('The quick brown fox', 'fox'));
console.log(search_word('aa, bb, cc, dd, aa', 'aa'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to find a word within a string</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
708,JavaScript: Remove non-printable ASCII chars,"
Write a JavaScript function to remove?<a href=""https://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters"">non-printable ASCII chars</a>.

Test Data:

console.log(remove_non_ascii('????ééêPHP-MySQL??Dtúú'));

""PHP-MySQL""","function remove_non_ascii(str) {
  
  if ((str===null) || (str===''))
       return false;
 else
   str = str.toString();
  
  return str.replace(/[^\x20-\x7E]/g, '');
}

console.log(remove_non_ascii('????ééêPHP-MySQL??Dtúú'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to remove non-printable ASCII chars.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
709,JavaScript: Remove non-word characters,"Write a JavaScript function to remove non-word characters.

Test Data :

console.log(remove_non_word('PHP <a class=""__cf_email__"" data-cfemail=""5a247b1a"" href=""/cdn-cgi/l/email-protection"">[email?protected]</a>#$%^&amp;*()+`-={}[]|\\:"";\'/?&gt;&lt;., MySQL')); 

""PHP - MySQL""",,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to remove non-word characters.</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript String
710,JavaScript: Convert a string to title case,"Write a JavaScript function to convert a string to title case.

Test Data:

console.log(sentenceCase('PHP exercises. python exercises.')); 

""Php Exercises. Python Exercises.""","function sentenceCase (str) {
  if ((str===null) || (str===''))
       return false;
  else
   str = str.toString();

 return str.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
}

console.log(sentenceCase('PHP exercises. python exercises.'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to convert a string to title case.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
711,JavaScript: Remove HTML/XML tags from string,"Write a JavaScript function to remove HTML/XML tags from string.

Test Data:

console.log(strip_html_tags('&lt;p&gt;&lt;strong&gt;&lt;em&gt;PHP Exercises&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;'));

""PHP Exercises""",,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to remove HTML/XML tags from string</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
714,JavaScript: Create a case-insensitive search,"Write a JavaScript function to create a case-insensitive search.

Test Data:

console.log(case_insensitive_search('JavaScript Exercises', 'exercises')); 

""Matched""

console.log(case_insensitive_search('JavaScript Exercises', 'Exercises')); 

""Matched""

console.log(case_insensitive_search('JavaScript Exercises', 'Exercisess')); 

""Not Matched""","function case_insensitive_search(str, search_str)
  {
    var result= str.search(new RegExp(search_str, ""i""));
  
    if (result>0)
    return 'Matched';
    else
    return 'Not Matched';  
   }

console.log(case_insensitive_search('JavaScript Exercises', 'exercises'));

console.log(case_insensitive_search('JavaScript Exercises', 'Exercises'));

console.log(case_insensitive_search('JavaScript Exercises', 'Exercisess'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to create a case-insensitive search.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
715,JavaScript: Uncapitalize the first character of a string,"Write a JavaScript function to uncapitalize the first character of a string.

Test Data:

console.log(Uncapitalize('Js string exercises'));

""js string exercises""","function Uncapitalize(str1){
  return str1.charAt(0).toLowerCase() + str1.slice(1);
}
 console.log(Uncapitalize('Js string exercises'));
 ","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to uncapitalize?the first character of a string.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
716,JavaScript: Uncapitalize the first letter of each word of a string,"Write a JavaScript function to Uncapitalize the first letter of each word of a string.

Test Data:

console.log(unCapitalize_Words('Js String Exercises'));

""js string exercises""","function unCapitalize_Words(str)
{ 
  return str.replace(/\w\S*/g, 
    function(txt)
       {
          return txt.charAt(0).toLowerCase() + txt.substr(1).toLowerCase();});
}

console.log(unCapitalize_Words('Js String Exercises'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to Uncapitalize the first letter of each word of a string</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript String
717,JavaScript: Capitalize each word in the string,"Write a JavaScript function to capitalize each word in the string.

Test Data:

console.log(capitalizeWords('js string exercises'));

""JS STRING EXERCISES""","function capitalizeWords(str)
{
 return str.replace(/\w\S*/g, function(txt){return txt.substr(0).toUpperCase();});
}
console.log(capitalizeWords('js string exercises'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to capitalize each word in the string.</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript String
718,JavaScript: Uncapitalize each word in the string,"Write a JavaScript function to uncapitalize each word in the string.

Test Data:

console.log(unCapitalizeWords('JS STRING EXERCISES'));

""js string exercises""","function unCapitalizeWords(str)
{
 return str.replace(/\w\S*/g, function(txt){return txt.substr(0).toLowerCase();});
}
console.log(unCapitalizeWords('JS STRING EXERCISES'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to uncapitalize each word in the string</title>
</head>
<body>

</body>
</html>
","Hard
",中级,JavaScript String
719,JavaScript: Test whether the character at the provided character index is upper case,"Write a JavaScript function to test whether the character at the provided (character) index is upper case.

Test Data:

console.log(isUpperCaseAt('Js STRING EXERCISES', 1));

false","function isUpperCaseAt(str, index) {
 return str.charAt(index).toUpperCase() === str.charAt(index);
    }
console.log(isUpperCaseAt('Js STRING EXERCISES', 1));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to test whether the character at the provided index is upper case</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
720,JavaScript: Test whether the character at the provided character index is lower case,"Write a JavaScript function to test whether the character at the provided character index is lower case.

Test Data:

console.log(isLowerCaseAt ('Js STRING EXERCISES', 1));

true","function isLowerCaseAt(str, index) {
 return str.charAt(index).toLowerCase() === str.charAt(index);
    }
console.log(isLowerCaseAt ('Js STRING EXERCISES', 1));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to test whether the character at the provided character index is lower case</title>
</head>
<body>

</body>
</html>
",未知,中级,JavaScript String
721,JavaScript: Get humanized number with the correct suffix,"Write a JavaScript function to get humanized number with the correct suffix such as 1st, 2nd, 3rd or 4th.

Test Data:

console.log(humanize(1));

console.log(humanize(20));

console.log(humanize(302));

""1st""

""20th""

""302nd""","function humanize(number) {
        if(number % 100 >= 11 && number % 100 <= 13)
            return number + ""th"";
        
        switch(number % 10) {
            case 1: return number + ""st"";
            case 2: return number + ""nd"";
            case 3: return number + ""rd"";
        }
        
        return number + ""th"";
    }
console.log(humanize(1));
console.log(humanize(20));
console.log(humanize(302));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get humanized number with the correct suffix</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
722,JavaScript: Test whether a string starts with a specified string,"Write a JavaScript function to test whether a string starts with a specified string.

Test Data:

console.log(startsWith('js string exercises', 'js'));

true","function startsWith(input, string) {
  return input.indexOf(string) === 0;
}
console.log(startsWith('js string exercises', 'js'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to test whether a string starts with a specified string</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
723,JavaScript: Test whether a string ends with a specified string,"Write a JavaScript function to test whether a string ends with a specified string.

Test Data:

console.log(endsWith('JS string exercises', 'exercises'));

true","function endsWith(input, string) {
        var index = input.length - string.length;
        return index >= 0 && input.indexOf(string, index) > -1;
    }
console.log(endsWith('JS string exercises', 'exercises'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to test whether a string ends with a specified string</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
724,JavaScript: Get the successor of a string,"Write a JavaScript function to get the successor of a string.
Note: The successor is calculated by incrementing characters starting from the rightmost alphanumeric (or the rightmost character if there are no alphanumerics) in the
string. Incrementing a digit always results in another digit, and incrementing a letter results in another letter of the same case. If the increment generates a carry, the character to the left of it is incremented. This process repeats until there is no carry, adding an additional character if necessary.



Example: 

string.successor(""abcd"") == ""abce""

string.successor(""THX1138"") == ""THX1139""

string.successor(""&lt;
<koala>
&gt;"") == ""&lt;
<koalb>
&gt;""

string.successor(""1999zzz"") == ""2000aaa""

string.successor(""ZZZ9999"") == ""AAAA0000""</koalb></koala>

Test Data:

console.log(successor('abcd'));

console.log(successor('3456'));

""abce""

""3457""","function successor(str) {
        var alphabet = 'abcdefghijklmnopqrstuvwxyz',
            length = alphabet.length,
            result = str,
            i = str.length;

        while(i >= 0) {
            var last = str.charAt(--i),
                next = '',
                carry = false;

            if (isNaN(last)) {
                index = alphabet.indexOf(last.toLowerCase());

                if (index === -1) {
                    next = last;
                    carry = true;
                }
                else {
                    var isUpperCase = last === last.toUpperCase();
                    next = alphabet.charAt((index + 1) % length);
                    if (isUpperCase) {
                        next = next.toUpperCase();
                    }

                    carry = index + 1 >= length;
                    if (carry && i === 0) {
                        var added = isUpperCase ? 'A' : 'a';
                        result = added + next + result.slice(1);
                        break;
                    }
                }
            }
            else {
                next = +last + 1;
                if(next > 9) {
                    next = 0;
                    carry = true;
                }

                if (carry && i === 0) {
                    result = '1' + next + result.slice(1);
                    break;
                }
            }

            result = result.slice(0, i) + next + result.slice(i + 1);
            if (!carry) {
                break;
            }
        }
        return result;
    }

console.log(successor('abcd'));
console.log(successor('3456'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the successor of a string</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
725,"JavaScript: Get unique guid of the specified length, or 32 by default","
Write a JavaScript function to get unique guid (an acronym for 'Globally Unique Identifier’) of the specified length, or 32 by default.

Test Data:

console.log(guid());

console.log(guid(15));

""hRYilcoV7ajokxsYFl1dba41AyE0rUQR""

""b7pwBqrZwqaDrex""","function guid(len) {
        var buf = [],
            chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
            charlen = chars.length,
            length = len || 32;
            
        for (var i = 0; i < length; i++) {
            buf[i] = chars.charAt(Math.floor(Math.random() * charlen));
        }
        
        return buf.join('');
    }

console.log(guid());  
console.log(guid(15));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get unique guid of the specified length, or 32 by default</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
695,JavaScript: Escape a HTML string,"Write a JavaScript function to escape a HTML string.

Test Data:

console.log(escape_HTML('&lt;a href=""javascript-string-exercise-17.php"" target=""_blank""&gt;'));

Output: 
",,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to escape a HTML string.</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
697,JavaScript: Repeat a string a specified times,"Write a JavaScript function to repeat a string a specified times.

Test Data:

console.log(repeat_string('a', 4)); 

console.log(repeat_string('a'));

Output: 

""aaaa"" 

""Error in string or count.""","function repeat_string(string, count) 
  {
    if ((string == null) || (count < 0) || (count === Infinity) || (count == null))
      {
        return('Error in string or count.');
      }
        count = count | 0; // Floor count.
    return new Array(count + 1).join(string);
  }

console.log(repeat_string('a', 4));
console.log(repeat_string('a'));
console.log(repeat_string('a', -2));
console.log(repeat_string('a', Infinity));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to repeat a string a specified times.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
702,JavaScript: Remove the first occurrence of a given 'search string' from a string,"Write a JavaScript function to remove the first occurrence of a given 'search string' from a string.

Test Data:

console.log(remove_first_occurrence(""The quick brown fox jumps over the lazy dog"", 'the'));

Output: 

""The quick brown fox jumps over lazy dog""","function remove_first_occurrence(str, searchstr)       {
	var index = str.indexOf(searchstr);
	if (index === -1) {
		return str;
	}
	return str.slice(0, index) + str.slice(index + searchstr.length);
}

console.log(remove_first_occurrence(""The quick brown fox jumps over the lazy dog"", 'the'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to remove the first occurrence of a given 'search string' from a string</title>
</head>
<body>

</body>
</html>
","Easy
",中级,JavaScript String
706,JavaScript: Check if a string ends with specified suffix,"Write a JavaScript function check if a string ends with specified suffix.

Test Data :

console.log(string_endsWith('JS PHP PYTHON','PYTHON')); 

true

console.log(string_endsWith('JS PHP PYTHON',''));

false","function string_endsWith(str, suffix) 
{
 
 if (((str===null) || (str==='')) || ((suffix===null) || (suffix==='')))
   {
    return false;
   }
  else
  {     
   str = str.toString();
   suffix = suffix.toString();
   }
 return str.indexOf(suffix, str.length -     suffix.length) !== -1;
}

console.log(string_endsWith('JS PHP PYTHON','PYTHON'));

console.log(string_endsWith('JS PHP PYTHON',''));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function check if a string ends with specified suffix</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
707,JavaScript: Escapes special characters for use in HTML,"Write a JavaScript function to escapes special characters (&, <, >, ', "") for use in HTML.

Test Data:

console.log(escape_html('PHP &amp; MySQL')); 

""PHP &amp;amp; MySQL""

console.log(escape_html('3 &gt; 2'));

""3 &amp;gt; 2""","function escape_html(str) {
  
 if ((str===null) || (str===''))
       return false;
 else
   str = str.toString();
  
  var map = {
    '&': '&amp;',
	'<': '&lt;',
	'>': '&gt;',
	'""': '&quot;',
	""'"": '&#039;'
  };

  return str.replace(/[&<>""']/g, function(m) { return map[m]; });
}
console.log(escape_html('PHP & MySQL'));
console.log(escape_html('3 > 2'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to escapes special characters for use in HTML.</title>
</head>
<body>

</body>
</html>
","Medium
",中级,JavaScript String
726,JavaScript: Validate whether a given value type is Boolean or not,Write a JavaScript function to validate whether a given value type is Boolean or not.,"function is_boolean(value)
        {
        return value === true || value === false || toString.call(value) === '[object Boolean]';
       }

console.log(is_boolean(true));

console.log(is_boolean('bar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is boolean or not.</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Basic Validation without Regular expression
727, JavaScript: Validate whether a given value type is error or not,Write a JavaScript function to validate whether a given value type is error or not.,"function is_Error(input) {
   return input instanceof Error || toString.call(input) === '[object Error]';
}

console.log(is_Error(new Error('foo')));
console.log(is_Error(100));
console.log(is_Error('foo'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is error or not</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Basic Validation without Regular expression
728, JavaScript: Validate whether a given value type is NaN or not,Write a JavaScript function to validate whether a given value type is NaN or not.,"function is_nan(val)
        {
        return val !== val;
       }

console.log(is_nan(NaN));

console.log(is_nan('bar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is NaN or not</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Basic Validation without Regular expression
729,JavaScript: Validate whether a given value type is null or not,Write a JavaScript function to validate whether a given value type is null or not.,"function is_null(val)
        {
        return val === null;
       }

console.log(is_null(null));

console.log(is_null('bar'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is null or not</title>
</head>
<body>

</body>
</html>
",未知,初级,JavaScript Basic Validation without Regular expression
730, JavaScript: Validate whether a given value is number or not,Write a JavaScript function to validate whether a given value is number or not.,"function is_number(value)
        {
        return !isNaN(value) && toString.call(value) === '[object Number]';
       }

console.log(is_number(NaN));

console.log(is_number(42.32));

console.log(is_number(72));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value is number or not.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Basic Validation without Regular expression
731, JavaScript: Validate whether a given value is object or not,Write a JavaScript function to validate whether a given value is object or not.,"function is_object(value)
        {
        var datatype = typeof value;
        return datatype === 'function' || datatype === 'object' && !!value;
       }

console.log(is_object({name: 'Robert'}));

console.log(is_object('bar'));

console.log(is_object(72));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value is object or not.</title>
</head>
<body>

</body>
</html>
",未知,初级,JavaScript Basic Validation without Regular expression
732, JavaScript: Validate whether a given value type is pure json object or not,Write a JavaScript function to validate whether a given value type is pure json object or not.,"function is_json(value)
        {
        return toString.call(value) === '[object Object]';
        }

console.log(is_json({name: 'Robert'}));

console.log(is_json('bar'));

console.log(is_json(72));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is pure json object or not.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Basic Validation without Regular expression
733,JavaScript: Validate whether a given value is RegExp or not,Write a JavaScript function to validate whether a given value is RegExp or not.,"function is_regexp(value)
        {
       return toString.call(value) === '[object RegExp]';
        }

console.log(is_regexp(/test/));

console.log(is_regexp('bar'));

console.log(is_regexp(72));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value RegExp or not.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Basic Validation without Regular expression
734, JavaScript: Validate whether a given value type is char or not,Write a JavaScript function to validate whether a given value type is char or not.,"function is_char(value)
    {
      if (Object.prototype.toString.call(value) !== '[object String]')
        return false;
    return value && value.length === 1;
    }
 
console.log(is_char('f'));
console.log(is_char('*'));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to validate whether a given value type is char or not</title>
</head>
<body>

</body>
</html>
","Medium
",初级,JavaScript Basic Validation without Regular expression
735, JavaScript: Check whether given value types are same or not,Write a JavaScript function to check whether given value types are same or not.,"function is_sameType(value1, value2) {
        if(is_nan(value1) || is_nan(value2)) {
         return is_nan(value1) === is_nan(value2);
        }
        return toString.call(value1) === toString.call(value2);
    }

function is_nan(val)
        {
        return val !== val;
       }

console.log(is_sameType('12', 100));
console.log(is_sameType('12', '100'));
console.log(is_sameType(12, 100));
","<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to check whether given value types are same or not.</title>
</head>
<body>

</body>
</html>
","Easy
",初级,JavaScript Basic Validation without Regular expression
