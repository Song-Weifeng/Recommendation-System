1,JavaScript: Reverse a number,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Reverse a number</title>
</head>
<body>
  
</body>
</html>
","function reverse_a_number(n)
{
	n = n + """";
	return n.split("""").reverse().join("""");
}
console.log(reverse_a_number(32243));
","Easy
"
2,JavaScript: Check whether a passed string is palindrome or not,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8/>
<title>A passed string is palindrome or notlt;/title>
</head>
<body>
  
</body>
</html>
","// Write a JavaScript function that checks whether a passed string is palindrome or not? 

function check_Palindrome(str_entry){
// Change the string into lower case and remove  all non-alphanumeric characters
   var cstr = str_entry.toLowerCase().replace(/[^a-zA-Z0-9]+/g,'');
	var ccount = 0;
// Check whether the string is empty or not
	if(cstr==="""") {
		console.log(""Nothing found!"");
		return false;
	}
// Check if the length of the string is even or odd 
	if ((cstr.length) % 2 === 0) {
		ccount = (cstr.length) / 2;
	} else {
// If the length of the string is 1 then it becomes a palindrome
		if (cstr.length === 1) {
			console.log(""Entry is a palindrome."");
			return true;
		} else {
// If the length of the string is odd ignore middle character
			ccount = (cstr.length - 1) / 2;
		}
	}
// Loop through to check the first character to the last character and then move next
	for (var x = 0; x < ccount; x++) {
// Compare characters and drop them if they do not match 
		if (cstr[x] != cstr.slice(-1-x)[0]) {
			console.log(""Entry is not a palindrome."");
			return false;
		}
	}
	console.log(""The entry is a palindrome."");
	return true;
}
check_Palindrome('madam');
check_Palindrome('nurses run');
check_Palindrome('fox');
","Easy
"
3,JavaScript: Generates all combinations of a string,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Combination of a string</title>
</head>
<body>
  
</body>
</html>
","//Write a JavaScript function that generates all combinations of a string.
function substrings(str1)
{
var array1 = [];
  for (var x = 0, y=1; x < str1.length; x++,y++) 
  {
   array1[x]=str1.substring(x, y);
    }
var combi = [];
var temp= """";
var slent = Math.pow(2, array1.length);

for (var i = 0; i < slent ; i++)
{
    temp= """";
    for (var j=0;j<array1.length;j++) {
        if ((i & Math.pow(2,j))){ 
            temp += array1[j];
        }
    }
    if (temp !== """")
    {
        combi.push(temp);
    }
}
  console.log(combi.join(""\n""));
}

substrings(""dog"");
","Medium
"
4,JavaScript: Returns a passed string with letters in alphabetical order,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Returns a passed string with letters in alphabetical order</title>
</head>
<body>
  
</body>
</html>
","function alphabet_order(str)
  {
return str.split('').sort().join('');
  }
console.log(alphabet_order(""webmaster""));
","Easy
"
5,JavaScript: Converts the first letter of each word of a string in upper case,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Converts the first letter of each word of a string in upper case</title>
</head>
<body>
  
</body>
</html>
","//Write a JavaScript function that accepts a string as a parameter and converts the first letter of each word of the string in upper case.

function uppercase(str)
{
  var array1 = str.split(' ');
  var newarray1 = [];
    
  for(var x = 0; x < array1.length; x++){
      newarray1.push(array1[x].charAt(0).toUpperCase()+array1[x].slice(1));
  }
  return newarray1.join(' ');
}
console.log(uppercase(""the quick brown fox""));
","Easy
"
6,JavaScript: Find the longest word within a string,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find the longest word within a string</title>
</head>
<body>
  
</body>
</html>
","function find_longest_word(str)
{
  var array1 = str.match(/\w[a-z]{0,}/gi);
  var result = array1[0];

  for(var x = 1 ; x < array1.length ; x++)
  {
    if(result.length < array1[x].length)
    {
    result = array1[x];
    } 
  }
  return result;
}
console.log(find_longest_word('Web Development Tutorial'));
","Easy
"
7,JavaScript: Counts the number of vowels within a string,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Counts the number of vowels within a string</title>
</head>
<body>
  
</body>
</html>
","function vowel_count(str1)
{
  var vowel_list = 'aeiouAEIOU';
  var vcount = 0;
  
  for(var x = 0; x < str1.length ; x++)
  {
    if (vowel_list.indexOf(str1[x]) !== -1)
    {
      vcount += 1;
    }
  
  }
  return vcount;
}
console.log(vowel_count(""The quick brown fox""));
","Easy
"
8,JavaScript: Check a number is prime or not,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Check a number is prime or not</title>
</head>
<body>
 
</body>
</html>
","function test_prime(n)
{

  if (n===1)
  {
    return false;
  }
  else if(n === 2)
  {
    return true;
  }else
  {
    for(var x = 2; x < n; x++)
    {
      if(n % x === 0)
      {
        return false;
      }
    }
    return true;  
  }
}

console.log(test_prime(37));
","Easy
"
9,JavaScript: Get the data type,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Detect JavaScript Data Types</title>
</head>
<body>
  
</body>
</html>
","function detect_data_type(value)
{
var dtypes = [Function, RegExp, Number, String, Boolean, Object], x, len;
    
if (typeof value === ""object"" || typeof value === ""function"") 
    {
     for (x = 0, len = dtypes.length; x < len; x++) 
     {
            if (value instanceof dtypes[x])
            {
                return dtypes[x];
            }
      }
    }
    
    return typeof value;
}
console.log(detect_data_type(12));
console.log(detect_data_type('w3resource'));
console.log(detect_data_type(false));
","Medium
"
10,JavaScript: Returns n rows by n columns identity matrix,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Returns the n rows by n columns identity matrix</title>
</head>
<body>
  
</body>
</html>
","function matrix(n) {

        var i;
        var j;

        for (i=0; i < n; i++)
        {
          for (j=0; j < n; j++)
          {
               if (i === j)
               {
                
                 console.log(' 1 ');
               }
                      
               else 
                {
                 console.log(' 0 ');}
                }
             console.log('----------');
           }
       }
matrix(4);
","Easy
"
11,JavaScript: Find the second lowest and second greatest numbers from an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find the second lowest and second greatest numbers from an array</title>
</head>
<body>
  
</body>
","function Second_Greatest_Lowest(arr_num)
{
  arr_num.sort(function(x,y)
           {
           return x-y;
           });
  var uniqa = [arr_num[0]];
  var result = [];
  
  for(var j=1; j < arr_num.length; j++)
  {
    if(arr_num[j-1] !== arr_num[j])
    {
      uniqa.push(arr_num[j]);
    }
  }
    result.push(uniqa[1],uniqa[uniqa.length-2]);
  return result.join(',');
  }

console.log(Second_Greatest_Lowest([1,2,3,4,5]));
","Easy
"
12,JavaScript: Find a perfect number,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find a perfect number</title>
</head>
<body>
  
</body>
</html>
","function is_perfect(number)
{
var temp = 0;
   for(var i=1;i<=number/2;i++)
     {
         if(number%i === 0)
          {
            temp += i;
          }
     }
   
     if(temp === number && temp !== 0)
        {
       console.log(""It is a perfect number."");
        } 
     else
        {
       console.log(""It is not a perfect number."");
        }   
 } 
is_perfect(28); 
","Easy
"
13,JavaScript: Compute the factors of a positive integer,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the factors of a positive integer</title>
</head>
<body>
  
</body>
</html>
","function factors(n)
{
 var num_factors = [], i;
 
 for (i = 1; i <= Math.floor(Math.sqrt(n)); i += 1)
  if (n % i === 0)
  {
   num_factors.push(i);
   if (n / i !== i)
    num_factors.push(n / i);
  }
 num_factors.sort(function(x, y)
   {
     return x - y;});  // numeric sort
     return num_factors;
    }
console.log(factors(15));  // [1,3,5,15] 
console.log(factors(16));  // [1,2,4,8,16] 
console.log(factors(17));  // [1,17]
","Easy
"
14,JavaScript: Convert an amount to coins,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript function to convert an amount to coins.</title>
</head>
<body>
  
</body>
</html>
","function amountTocoins(amount, coins) 
{
 if (amount === 0) 
  {
     return [];
   } 
 else
   {
     if (amount >= coins[0]) 
       {
        left = (amount - coins[0]);
        return [coins[0]].concat( amountTocoins(left, coins) );
        } 
      else
        {
         coins.shift();
         return amountTocoins(amount, coins);
        }
    }
} 
console.log(amountTocoins(46, [25, 10, 5, 2,1]));
","Medium
"
15,JavaScript: Compute the value of bn where n is the exponent and b is the bases,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Compute the value of bn where n is the exponent and b is the bases</title>
</head>
<body>
<body onload=""updateClock(); setInterval('updateClock()', 1000)"">  
</body>
</html>
","function exp(b,n)
{
        var ans = 1;
        for (var i =1; i <= n; i++)
        {
                ans = b * ans;        
        }
        return ans;
}
console.log(exp(2, 3));
","Easy
"
17,JavaScript: Number of occurrences of each letter in specified string,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Number of occurrences of each letter in specified string</title>
</head>
<body>
","function Char_Counts(str1) {
var uchars = {};
str1.replace(/\S/g, function(l){uchars[l] = (isNaN(uchars[l]) ? 1 : uchars[l] + 1);});
return uchars;
}
console.log(Char_Counts(""The quick brown fox jumps over the lazy dog""));
","Medium
"
18,JavaScript: Search JavaScript arrays with a binary search,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Search JavaScript arrays with a binary search</title>
</head>
<body>
  
</body>
</html>
","function array_binarySearch(narray, delement) {
   var mposition = Math.floor(narray.length / 2);

   if (narray[mposition] === delement){
      return mposition;
   }
   else if (narray.length === 1) 
   {
      return null;
   }
   else if (narray[mposition] < delement) {
      var arr = narray.slice(mposition + 1);
      var res = array_binarySearch(arr, delement);
      if (res === null)
      {
         return null;
      }
      else {
         return mposition + 1 + res;
      }
   }
   else {
      var arr1 = narray.slice(0, mposition);
      return array_binarySearch(arr1, delement);
   }
}

 var myArray = [1, 2, 3, 5, 6, 7, 10, 11, 14, 15, 17, 19, 20, 22, 23];
 console.log(array_binarySearch(myArray, 6));
 ","Medium
"
19,JavaScript: Bigger elements in an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Bigger elements in an array</title>
</head>
<body>
  
</body>
</html>
","function BiggerElements(val)
   {
     return function(evalue, index, array)
     {
     return (evalue >= val);
     };
   }
var result = [11, 45, 4, 31, 64, 10]. filter(BiggerElements(10));
console.log(result);
","Easy
"
20,JavaScript: Generates a string id (specified length) of random characters,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Generates a string id (specified length) of random characters</title>
</head>
<body>
  
</body>
</html>
","function makeid(l)
{
var text = """";
var char_list = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"";
for(var i=0; i < l; i++ )
{  
text += char_list.charAt(Math.floor(Math.random() * char_list.length));
}
return text;
}
console.log(makeid(8));
","Easy
"
21,JavaScript: Get all possible subset with a fixed length combinations in an array,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript array subset</title>
</head>
<body>

</body>
</html>
","function subset(arra, arra_size)
 {
    var result_set = [], 
        result;
    
   
for(var x = 0; x < Math.pow(2, arra.length); x++)
  {
    result = [];
    i = arra.length - 1; 
     do
      {
      if( (x & (1 << i)) !== 0)
          {
             result.push(arra[i]);
           }
        }  while(i--);

    if( result.length >= arra_size)
       {
          result_set.push(result);
        }
    }

    return result_set; 
}

console.log(subset([1, 2, 3], 2));
","Medium
"
22,JavaScript: Letter count within a string,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Letter count within a string</title>
</head>
<body>

</body>
</html>
","function char_count(str, letter) 
{
 var letter_Count = 0;
 for (var position = 0; position < str.length; position++) 
 {
    if (str.charAt(position) == letter) 
      {
      letter_Count += 1;
      }
  }
  return letter_Count;
}

console.log(char_count('w3resource.com', 'o'));
","Easy
"
23,JavaScript: Find the first not repeated character,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>find the first not repeated character.</title>
</head>
<body>

</body>
</html>
","function find_FirstNotRepeatedChar(str) {
  var arra1 = str.split('');
  var result = '';
  var ctr = 0;
 
  for (var x = 0; x < arra1.length; x++) {
    ctr = 0;
 
    for (var y = 0; y < arra1.length; y++) 
    {
      if (arra1[x] === arra1[y]) {
        ctr+= 1;
      }
    }
 
    if (ctr < 2) {
      result = arra1[x];
      break;
    }
  }
  return result;
}
console.log(find_FirstNotRepeatedChar('abacddbec'));
","Easy
"
24,JavaScript: Bubble Sort algorithm,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Bubble Sort algorithm</title>
</head>
<body>

</body>
</html>
","function bubble_Sort(a)
{
    var swapp;
    var n = a.length-1;
    var x=a;
    do {
        swapp = false;
        for (var i=0; i < n; i++)
        {
            if (x[i] < x[i+1])
            {
               var temp = x[i];
               x[i] = x[i+1];
               x[i+1] = temp;
               swapp = true;
            }
        }
        n--;
    } while (swapp);
 return x; 
}

console.log(bubble_Sort([12, 345, 4, 546, 122, 84, 98, 64, 9, 1, 3223, 455, 23, 234, 213]));
","Medium
"
25,JavaScript: Accept a list of words and returns the longest,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find longest word</title>
</head>
<body>

</body>
</html>
","function Longest_Country_Name(country_name)
  {
  return country_name.reduce(function(lname, country) 
  {
    return lname.length > country.length ? lname : country;
  }, 
"""");
}
console.log(Longest_Country_Name([""Australia"", ""Germany"", ""United States of America""]));
","Medium
"
26,JavaScript: Find longest substring in a given string without repeating characters,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Find longest substring in a given string without repeating characters</title>
</head>
<body>

</body>
</html>
","function longest_substring_without_repeating_characters(input) {
var chars = input.split('');
var curr_char;
var str = """";
var longest_string = """";
var hash = {};
for (var i = 0; i < chars.length; i++) {
curr_char = chars[i];
if (!hash[chars[i]]) 
{ 
str += curr_char; 
hash[chars[i]] = {index:i};
}
else 
{
if(longest_string.length <= str.length)
{
longest_string = str;
}
var prev_dupeIndex = hash[curr_char].index;
var str_FromPrevDupe = input.substring(prev_dupeIndex + 1, i);
str = str_FromPrevDupe + curr_char;
hash = {};
for (var j = prev_dupeIndex + 1; j <= i; j++) {
hash[input.charAt(j)] = {index:j};
}
}
}
return longest_string.length > str.length ? longest_string : str;
}
console.log(longest_substring_without_repeating_characters(""google.com"")); 

console.log(longest_substring_without_repeating_characters(""example.com"")); 
","Medium
"
28,JavaScript: Pass a JavaScript function as parameter,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript program to pass a JavaScript function as parameter</title>
</head>
<body>

</body>
</html>
","function addStudent(id, refreshCallback)
{
    refreshCallback();  
}

function refreshStudentList() {
    console.log('Hello');
}

addStudent(1, refreshStudentList);
","Easy
"
29,JavaScript: Get the function name,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get the function name.</title>
</head>
<body>

</body>
</html>
","function abc() {
    console.log( arguments.callee.name );
}

abc();
","Easy
"
