1,JavaScript: Get the first element of an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS Bin</title>
</head>
<body>
</body>
</html>
","var is_array = function(input) {
  if (toString.call(input) === ""[object Array]"")
    return true;
  return false;   
    };
console.log(is_array('w3resource'));
console.log(is_array([1, 2, 4, 0]));
","Easy
"
8,JavaScript: Find the most frequent item of an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Write a JavaScript program to find the most frequent item of an array. - w3resource</title>
</head>
<body>
</body>
</html>
","var arr1=[3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];
var mf = 1;
var m = 0;
var item;
for (var i=0; i<arr1.length; i++)
{
        for (var j=i; j<arr1.length; j++)
        {
                if (arr1[i] == arr1[j])
                 m++;
                if (mf<m)
                {
                  mf=m; 
                  item = arr1[i];
                }
        }
        m=0;
}
console.log(item+"" ( "" +mf +"" times ) "") ;
","Easy
"
14,"JavaScript: Remove duplicate items from an array, ignore case sensitivity","<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Remove duplicate items from an JavaScript array </title>
</head>
<body>
</body>
</html>
","function removeDuplicates(num) {
  var x,
      len=num.length,
      out=[],
      obj={};
 
  for (x=0; x<len; x++) {
    obj[num[x]]=0;
  }
  for (x in obj) {
    out.push(x);
  }
  return out;
}
var Mynum = [1, 2, 2, 4, 5, 4, 7, 8, 7, 3, 6];
result = removeDuplicates(Mynum);
console.log(Mynum);
console.log(result);
","Easy
"
15,JavaScript: Display the colors entered in an array by a specific format,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Display colors using ordinal numbers</title>
</head>
<body> 
</body>
</html>
","var color = [""Blue "", ""Green"", ""Red"", ""Orange"", ""Violet"", ""Indigo"", ""Yellow ""];

function Ordinal(n)
 {
 var o = [""th"",""st"",""nd"",""rd""],
 x = n%100;
 return x+(o[(x-20)%10]||o[x]||o[0]);
 }

for(n = 0; n < color.length; n++){
 var ordinal = n + 1;

 var output = (Ordinal(ordinal) + "" choice is "" + color[n] + ""."");

console.log(output);
}
","Medium
"
16,JavaScript: Find the leap years from a given range of years,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Find Leap years in a range</title>
</head>
<body>
</body>
</html>
","function leap_year_range(st_year, end_year) {
        var year_range = [];
        for (var i = st_year; i <= end_year; i++)
        {
             year_range.push(i);
        }
        var new_array = [];

  year_range.forEach(
   function(year)
    { 
       if (test_LeapYear(year)) 
       new_array.push(year);
    });

  return new_array;
     }

function test_LeapYear(year) {
   if ((year % 4 === 0 && year % 100 !== 0) || (year % 100 === 0 && year % 400 === 0)) {
                return year;
        } else {
                return false;
        }
}

console.log(leap_year_range(2000,2012));
","Easy
"
17,JavaScript: Randomly arrange or shuffle an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=utf-8 />
<title>Shuffle an array</title>
</head>
<body>
</body>
</html>
","function shuffle(arra1) {
    var ctr = arra1.length, temp, index;

// While there are elements in the array
    while (ctr > 0) {
// Pick a random index
        index = Math.floor(Math.random() * ctr);
// Decrease ctr by 1
        ctr--;
// And swap the last element with it
        temp = arra1[ctr];
        arra1[ctr] = arra1[index];
        arra1[index] = temp;
    }
    return arra1;
}
var myArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
console.log(shuffle(myArray));
","Medium
"
18,JavaScript: Perform a binary search within an array,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Binary Search</title>
</head>
<body>
</body>
</html>
","function binary_Search(items, value){
    var firstIndex  = 0,
        lastIndex   = items.length - 1,
        middleIndex = Math.floor((lastIndex + firstIndex)/2);

    while(items[middleIndex] != value && firstIndex < lastIndex)
    {
       if (value < items[middleIndex])
        {
            lastIndex = middleIndex - 1;
        } 
      else if (value > items[middleIndex])
        {
            firstIndex = middleIndex + 1;
        }
        middleIndex = Math.floor((lastIndex + firstIndex)/2);
    }

 return (items[middleIndex] != value) ? -1 : middleIndex;
}
var items = [1, 2, 3, 4, 5, 7, 8, 9];
console.log(binary_Search(items, 1));   
console.log(binary_Search(items, 5));
","Medium
"
19,JavaScript: Compute the sum of each individual index value of two or more arrays,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>compute the sum of each individual index value from two arrays</title>
</head>
<body>
</body>
</html>
","function Arrays_sum(array1, array2) 
{
  var result = [];
  var ctr = 0;
  var x=0;

  if (array1.length === 0) 
   return ""array1 is empty"";
  if (array2.length === 0) 
   return ""array2 is empty"";   

 while (ctr < array1.length && ctr < array2.length) 
  {
    result.push(array1[ctr] + array2[ctr]);
    ctr++;
  }

 if (ctr === array1.length) 
 {
    for (x = ctr; x < array2.length; x++)   {
      result.push(array2[x]);
    }
  } 
  else
  {
  for (x = ctr; x < array1.length; x++) 
    {
      result.push(array1[x]);
    }
  }
  return result;
}

console.log(Arrays_sum([1,0,2,3,4], [3,5,6,7,8,13]));
","Easy
"
20,JavaScript: Find duplicate values in a array,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Find duplicate values in a JavaScript array</title>
</head>
<body>
</body>
</html>
","function find_duplicate_in_array(arra1) {
        var object = {};
        var result = [];

        arra1.forEach(function (item) {
          if(!object[item])
              object[item] = 0;
            object[item] += 1;
        })

        for (var prop in object) {
           if(object[prop] >= 2) {
               result.push(prop);
           }
        }

        return result;

    }

    console.log(find_duplicate_in_array([1, 2, -2, 4, 5, 4, 7, 8, 7, 7, 71, 3, 6]));
","Medium
"
21,JavaScript: Flatten a nested array,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Flatten a nested array</title>
</head>
<body>
</body>
</html>
","var flatten = function(a, shallow,r){
  if(!r){ r = []}
   
if (shallow) {
  return r.concat.apply(r,a);
  }
      
   for(var i=0; i<a.length; i++){
        if(a[i].constructor == Array){
            flatten(a[i],shallow,r);
        }else{
            r.push(a[i]);
        }
    }
    return r;
}

console.log(flatten([1, [2], [3, [[4]]],[5,6]]));

console.log(flatten([1, [2], [3, [[4]]],[5,6]], true));
","Medium
"
22,JavaScript: Compute the union of two arrays,"<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>JS Bin</title>
</head>
<body>
</body>
</html>
","function union(arra1, arra2) {
  
  if ((arra1 == null) || (arra2==null)) 
    return void 0;
  
  var obj = {};
 
  for (var i = arra1.length-1; i >= 0; -- i)
     obj[arra1[i]] = arra1[i];
 
  for (var i = arra2.length-1; i >= 0; -- i)
     obj[arra2[i]] = arra2[i];
 
  var res = [];
 
  for (var n in obj)
  {
  
    if (obj.hasOwnProperty(n)) 
      res.push(obj[n]);
  }
 
  return res;
}
console.log(union([1, 2, 3], [100, 2, 1, 10]));
","Medium
"
24,"JavaScript: Remove null, 0, blank, false, undefined and NaN values from an array","<!DOCTYPE html>
<html>
<head>
<meta charset=""utf-8"">
<title>Write a JavaScript function to remove. 'null', '0', '""""', 'false', 'undefined' and 'NaN' values from an array.</title>
</head>
<body>
</body>
</html>
","function filter_array(test_array) {
    var index = -1,
        arr_length = test_array ? test_array.length : 0,
        resIndex = -1,
        result = [];

    while (++index < arr_length) {
        var value = test_array[index];

        if (value) {
            result[++resIndex] = value;
        }
    }

    return result;
}
console.log(filter_array([NaN, 0, 15, false, -22, '',undefined, 47, null]));
","Medium
"
25,JavaScript: Sort the specified array of objects by title value,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>Write a JavaScript function to sort an lowing array of objects by title value.</title>
</head>
<body>

</body>
</html>
","var library = [ 
   { author: 'Bill Gates', title: 'The Road Ahead', libraryID: 1254},
   { author: 'Steve Jobs', title: 'Walter Isaacson', libraryID: 4264},
   { author: 'Suzanne Collins', title: 'Mockingjay: The Final Book of The Hunger Games', libraryID: 3245}
   ];

function compare_to_sort(x,y) 
 {
  if (x.title < y.title)
    return -1;
  if (x.title > y.title)
    return 1;
  return 0;
 }

console.log(library.sort(compare_to_sort));
","Medium
"
32,JavaScript: Find if an array contains a specific element,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to find if an array contains a specific element</title>
</head>
<body>

</body>
</html>
","function contains(arr, element) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === element) {
            return true;
        }
    }
    return false;
}
arr = [2, 5, 9, 6];
console.log(contains(arr, 5));
","Easy
"
34,JavaScript: Get nth largest element from an unsorted array,"
<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get nth largest element from an unsorted array.</title>
</head>
<body>

</body>
</html>
","
function nthlargest(arra,highest){
			var x = 0,
				y = 0,
				z = 0,
				temp = 0,
				tnum = arra.length, 
				flag = false, 
				result = false; 
   
			while(x < tnum){
				y = x + 1; 
				
				if(y < tnum){
					for(z = y; z < tnum; z++){
						
						if(arra[x] < arra[z]){
							temp = arra[z];
							arra[z] = arra[x];
							arra[x] = temp;
							flag = true; 
						}else{
							continue;
						}	
					}					
				}
				
				if(flag){
					flag = false;
				}else{
					x++; 
					if(x === highest){ 
                      
						result = true;
					}	
				}
				if(result){
					break;
				}
			}

			return (arra[(highest - 1)]);	
		}
		
console.log(nthlargest([ 43, 56, 23, 89, 88, 90, 99, 652], 4)); 
","Medium
"
35,JavaScript: Get a random item from an array,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to get a random item from an array.</title>
</head>
<body>

</body>
</html>
","function random_item(items)
{
  
return items[Math.floor(Math.random()*items.length)];
     
}

var items = [254, 45, 212, 365, 2543];
console.log(random_item(items));
","Easy
"
41,JavaScript: Generate an array between two integers of 1 step length,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <title>JavaScript function to generate an array between two integers of 1 step length</title>
</head>
<body>

</body>
</html>
","function rangeBetwee(start, end) 
{
  
		if (start > end) {
			var arr = new Array(start - end + 1);
			for (var i = 0; i < arr.length; i++, start--) {
				resarrult[i] = start;
			}
			return arr;
		} 
       else 
       {
			var arro = new Array(end-start+1);
         
		for (var j = 0; j < arro.length; j++, start++) 
        {
			arro[j] = start;
		}
      		return arro;
		}
	}

console.log(rangeBetwee(4, 7));
console.log(rangeBetwee(-4, 7));
","Easy
"
